<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetumScan.Core</name>
    </assembly>
    <members>
        <member name="T:NetumScan.Core.ClipboardFormat">
            <summary>
            剪贴板格式
            </summary>
        </member>
        <member name="P:NetumScan.Core.ClipboardFormat.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetumScan.Core.ClipboardFormat.Format">
            <summary>
            格式
            </summary>
        </member>
        <member name="M:NetumScan.Core.ClipboardFormat.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.ClipboardFormat.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="description">描述</param>
            <param name="format">格式</param>
        </member>
        <member name="T:NetumScan.Core.ColorBgra">
            <summary>
            Ngra颜色空间
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorBgra.Bgra">
            <summary>
            Brga值
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorBgra.Blue">
            <summary>
            蓝色通道值
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorBgra.Green">
            <summary>
            绿色通道值
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorBgra.Red">
            <summary>
            红色通道值
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorBgra.Alpha">
            <summary>
            透明通道值
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorBgra.SizeOf">
            <summary>
            大小
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.#ctor(System.UInt32)">
            <summary>
            构造函数
            </summary>
            <param name="bgra">bgra值</param>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            构造函数
            </summary>
            <param name="b">蓝色通道值</param>
            <param name="g">绿色通道值</param>
            <param name="r">红色通道值</param>
            <param name="a">透明通道值</param>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.#ctor(System.Drawing.Color)">
            <summary>
            构造函数
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.op_Equality(NetumScan.Core.ColorBgra,NetumScan.Core.ColorBgra)">
            <summary>
            颜色空间是否一致
            </summary>
            <param name="c1">颜色空间1</param>
            <param name="c2">颜色空间2</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.op_Inequality(NetumScan.Core.ColorBgra,NetumScan.Core.ColorBgra)">
            <summary>
            颜色空间是否不一致
            </summary>
            <param name="c1">颜色空间1</param>
            <param name="c2">颜色空间2</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.Equals(System.Object)">
            <summary>
            重写<see cref="M:System.Object.Equals(System.Object)"/>
            </summary>
            <param name="obj">比较对象</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.GetHashCode">
            <summary>
            重写<see cref="M:System.Object.GetHashCode"/>
            </summary>
            <returns>哈希值</returns>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.op_Implicit(System.UInt32)~NetumScan.Core.ColorBgra">
            <summary>
            实现强制uint转换为ColorBgra方法
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.op_Implicit(NetumScan.Core.ColorBgra)~System.UInt32">
            <summary>
            实现强制ColorBgra转换为uint方法
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.ToColor">
            <summary>
            转换成<see cref="T:System.Drawing.Color"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.BgraToUInt32(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Bgra转换成UInt32值
            </summary>
            <param name="b">蓝色通道值[uint]</param>
            <param name="g">绿色通道值[uint]</param>
            <param name="r">红色通道值[uint]</param>
            <param name="a">透明通道值[uint]</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorBgra.BgraToUInt32(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Bgra转换成UInt32值
            </summary>
            <param name="b">蓝色通道值[byte]</param>
            <param name="g">绿色通道值[byte]</param>
            <param name="r">红色通道值[byte]</param>
            <param name="a">透明通道值[byte]</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ColorMatrixManager">
            <summary>
            颜色矩阵管理器
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Apply(System.Drawing.Imaging.ColorMatrix,System.Drawing.Bitmap)">
            <summary>
            应用
            </summary>
            <param name="matrix">颜色矩阵</param>
            <param name="bmp">图片</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Apply(System.Drawing.Imaging.ColorMatrix,System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            应用
            </summary>
            <param name="matrix">颜色矩阵</param>
            <param name="src">图片</param>
            <param name="dest">目标图片</param>
            <param name="destRect">区域</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.ChangeGamma(System.Drawing.Bitmap,System.Single)">
            <param name="bmp"></param>
            <param name="value">1 = No change (Min 0.1, Max 5.0)</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Inverse">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Alpha(System.Single,System.Single)">
            <param name="value">1 = No change</param>
            <param name="add">0 = No change</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Brightness(System.Single)">
            <param name="value">0 = No change</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Contrast(System.Single)">
            <param name="value">1 = No change</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.BlackWhite">
            <summary>
            黑白
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Polaroid">
            <summary>
            宝丽来
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Grayscale(System.Single)">
            <param name="value">1 = Default</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Sepia(System.Single)">
            <param name="value">1 = Default</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Hue(System.Single)">
            <param name="angle">0 = No change</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Saturation(System.Single)">
            <param name="value">1 = No change</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Colorize(System.Drawing.Color,System.Single)">
            <param name="color"></param>
            <param name="value">0 = No change</param>
        </member>
        <member name="M:NetumScan.Core.ColorMatrixManager.Mask(System.Single,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="opacity"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.CMYK">
            <summary>
            印刷四色模式
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Cyan">
            <summary>
            青色
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Cyan100">
            <summary>
            青色100
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Magenta">
            <summary>
            品红色
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Magenta100">
            <summary>
            品红色100
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Yellow">
            <summary>
            黄色
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Yellow100">
            <summary>
            黄色100
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Key">
            <summary>
            键、黑色
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Key100">
            <summary>
            键、黑色100
            </summary>
        </member>
        <member name="P:NetumScan.Core.CMYK.Alpha">
            <summary>
            alpha通道一般用作不透明度参数。如果一个像素的alpha通道数值为0%，那它就是完全透明的（也就是看不见的），而数值为100%则意味着一个完全不透明的像素（传统的数字图像）。
            </summary>
        </member>
        <member name="M:NetumScan.Core.CMYK.#ctor(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            
            </summary>
            <param name="cyan"></param>
            <param name="magenta"></param>
            <param name="yellow"></param>
            <param name="key"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:NetumScan.Core.CMYK.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="cyan"></param>
            <param name="magenta"></param>
            <param name="yellow"></param>
            <param name="key"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:NetumScan.Core.CMYK.#ctor(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.CMYK.op_Implicit(System.Drawing.Color)~NetumScan.Core.CMYK">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.CMYK.op_Implicit(NetumScan.Core.CMYK)~System.Drawing.Color">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.CMYK.op_Implicit(NetumScan.Core.CMYK)~NetumScan.Core.RGBA">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.CMYK.op_Implicit(NetumScan.Core.CMYK)~NetumScan.Core.HSB">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.CMYK.op_Equality(NetumScan.Core.CMYK,NetumScan.Core.CMYK)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CMYK.op_Inequality(NetumScan.Core.CMYK,NetumScan.Core.CMYK)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CMYK.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CMYK.ToColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CMYK.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CMYK.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ColorEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ColorEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorEventArgs.#ctor(NetumScan.Core.MyColor,NetumScan.Core.ColorType)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="colorType"></param>
        </member>
        <member name="M:NetumScan.Core.ColorEventArgs.#ctor(NetumScan.Core.MyColor,NetumScan.Core.DrawStyle)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="drawStyle"></param>
        </member>
        <member name="F:NetumScan.Core.ColorEventArgs.Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorEventArgs.ColorType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorEventArgs.DrawStyle">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.GradientInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientInfo.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientInfo.Colors">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientInfo.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientInfo.IsVisible">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientInfo.IsTransparent">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.#ctor(NetumScan.Core.GradientStop[])">
            <summary>
            
            </summary>
            <param name="colors"></param>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.#ctor(System.Drawing.Color[])">
            <summary>
            
            </summary>
            <param name="colors"></param>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.Sort">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.Reverse">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.GetColorBlend">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.GetGradientBrush(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.Draw(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.CreateGradientPreview(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="border"></param>
            <param name="checkers"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GradientInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.GradientStop">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientStop.Color">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientStop.Location">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientStop.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientStop.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="offset"></param>
        </member>
        <member name="T:NetumScan.Core.HSB">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HSB.Hue">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HSB.Hue360">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HSB.Saturation">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HSB.Saturation100">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HSB.Brightness">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HSB.Brightness100">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HSB.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.HSB.#ctor(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:NetumScan.Core.HSB.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:NetumScan.Core.HSB.#ctor(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.HSB.op_Implicit(System.Drawing.Color)~NetumScan.Core.HSB">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.HSB.op_Implicit(NetumScan.Core.HSB)~System.Drawing.Color">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.HSB.op_Implicit(NetumScan.Core.HSB)~NetumScan.Core.RGBA">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.HSB.op_Implicit(NetumScan.Core.HSB)~NetumScan.Core.CMYK">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.HSB.op_Equality(NetumScan.Core.HSB,NetumScan.Core.HSB)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HSB.op_Inequality(NetumScan.Core.HSB,NetumScan.Core.HSB)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HSB.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HSB.ToColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HSB.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HSB.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.MyColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MyColor.RGBA">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MyColor.HSB">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MyColor.CMYK">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyColor.IsTransparent">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyColor.#ctor(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.MyColor.op_Implicit(System.Drawing.Color)~NetumScan.Core.MyColor">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.MyColor.op_Implicit(NetumScan.Core.MyColor)~System.Drawing.Color">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.MyColor.op_Equality(NetumScan.Core.MyColor,NetumScan.Core.MyColor)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MyColor.op_Inequality(NetumScan.Core.MyColor,NetumScan.Core.MyColor)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MyColor.RGBAUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyColor.HSBUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyColor.CMYKUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyColor.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MyColor.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MyColor.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.RGBA">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RGBA.Red">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RGBA.Green">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RGBA.Blue">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RGBA.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.RGBA.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:NetumScan.Core.RGBA.#ctor(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.RGBA.op_Implicit(System.Drawing.Color)~NetumScan.Core.RGBA">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.RGBA.op_Implicit(NetumScan.Core.RGBA)~System.Drawing.Color">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.RGBA.op_Implicit(NetumScan.Core.RGBA)~NetumScan.Core.HSB">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.RGBA.op_Implicit(NetumScan.Core.RGBA)~NetumScan.Core.CMYK">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.RGBA.op_Equality(NetumScan.Core.RGBA,NetumScan.Core.RGBA)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.op_Inequality(NetumScan.Core.RGBA,NetumScan.Core.RGBA)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.ToColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.ToHex(NetumScan.Core.ColorFormat)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.ToDecimal(NetumScan.Core.ColorFormat)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.ToHSB">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.ToCMYK">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RGBA.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ControlHider">
            <summary>
            控件隐藏器
            </summary>
        </member>
        <member name="P:NetumScan.Core.ControlHider.Control">
            <summary>
            控件
            </summary>
        </member>
        <member name="P:NetumScan.Core.ControlHider.AutoHideTime">
            <summary>
            自动隐藏时间
            </summary>
        </member>
        <member name="M:NetumScan.Core.ControlHider.#ctor(System.Windows.Forms.Control,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="control">控件</param>
            <param name="autoHideTime">自动隐藏时间</param>
        </member>
        <member name="M:NetumScan.Core.ControlHider.Show">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:NetumScan.Core.ControlHider.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:NetumScan.Core.ConvolutionMatrix">
            <summary>
            卷积矩阵
            </summary>
        </member>
        <member name="P:NetumScan.Core.ConvolutionMatrix.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:NetumScan.Core.ConvolutionMatrix.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:NetumScan.Core.ConvolutionMatrix.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:NetumScan.Core.ConvolutionMatrix.ConsiderAlpha">
            <summary>
            是否考虑阿尔法
            </summary>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrix.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrix.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrix.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="height"></param>
            <param name="width"></param>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrix.SetAll(System.Double)">
            <summary>
            设置所有
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:NetumScan.Core.ConvolutionMatrix.Item(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="y"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ConvolutionMatrixManager">
            <summary>
            卷积矩阵管理器
            </summary>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrixManager.Apply(NetumScan.Core.ConvolutionMatrix,System.Drawing.Bitmap)">
            <summary>
            应用
            </summary>
            <param name="kernel">卷积矩阵</param>
            <param name="bmp">图片</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrixManager.Smooth(System.Int32)">
            <summary>
            平整的
            </summary>
            <param name="weight"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrixManager.GaussianBlur(System.Int32,System.Int32,System.Double)">
            <summary>
            高斯模糊
            </summary>
            <param name="height"></param>
            <param name="width"></param>
            <param name="sigma"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrixManager.MeanRemoval(System.Int32)">
            <summary>
            平均值去除
            </summary>
            <param name="weight"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrixManager.Sharpen(System.Int32)">
            <summary>
            锐化
            </summary>
            <param name="weight"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrixManager.Emboss">
            <summary>
            浮雕
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvolutionMatrixManager.EdgeDetect">
            <summary>
            边缘检测
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.CursorData">
            <summary>
            CursorData
            </summary>
        </member>
        <member name="P:NetumScan.Core.CursorData.Handle">
            <summary>
            句柄
            </summary>
        </member>
        <member name="P:NetumScan.Core.CursorData.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:NetumScan.Core.CursorData.IsVisible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="M:NetumScan.Core.CursorData.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.CursorData.UpdateCursorData">
            <summary>
            更新光标数据
            </summary>
        </member>
        <member name="M:NetumScan.Core.CursorData.DrawCursor(System.Drawing.Image)">
            <summary>
            绘制光标
            </summary>
            <param name="img">图像</param>
        </member>
        <member name="M:NetumScan.Core.CursorData.DrawCursor(System.Drawing.Image,System.Drawing.Point)">
            <summary>
            绘制光标
            </summary>
            <param name="img">图像</param>
            <param name="offset">偏移量</param>
        </member>
        <member name="M:NetumScan.Core.CursorData.DrawCursor(System.IntPtr)">
            <summary>
            绘制光标
            </summary>
            <param name="hdcDest"></param>
        </member>
        <member name="M:NetumScan.Core.CursorData.DrawCursor(System.IntPtr,System.Drawing.Point)">
            <summary>
            绘制光标
            </summary>
            <param name="hdcDest">句柄</param>
            <param name="offset">偏移量</param>
        </member>
        <member name="T:NetumScan.Core.DWMManager">
            <summary>
            DWM管理器
            </summary>
        </member>
        <member name="M:NetumScan.Core.DWMManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.DWMManager.AutoDisable">
            <summary>
            自动禁用
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.DWMManager.ChangeComposition(System.Boolean)">
            <summary>
            ChangeComposition
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:NetumScan.Core.DWMManager.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:NetumScan.Core.Emoji">
            <summary>
            标签符号
            </summary>
        </member>
        <member name="F:NetumScan.Core.Emoji.Smileys">
            <summary>
            笑脸
            </summary>
        </member>
        <member name="F:NetumScan.Core.Emoji.AnimalsNature">
            <summary>
            动物
            </summary>
        </member>
        <member name="F:NetumScan.Core.Emoji.FoodDrink">
            <summary>
            食物链接
            </summary>
        </member>
        <member name="F:NetumScan.Core.Emoji.TravelPlaces">
            <summary>
            旅游
            </summary>
        </member>
        <member name="F:NetumScan.Core.Emoji.Objects">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.Emoji.Emojis">
            <summary>
            符号标签
            </summary>
        </member>
        <member name="M:NetumScan.Core.Emoji.SearchEmoji(System.String)">
            <summary>
            搜索表情符号
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Emoji.SaveEmojiList(System.String)">
            <summary>
            保存表情符号列表
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:NetumScan.Core.EnumInfo">
            <summary>
            枚举信息
            </summary>
        </member>
        <member name="P:NetumScan.Core.EnumInfo.Value">
            <summary>
            枚举值
            </summary>
        </member>
        <member name="P:NetumScan.Core.EnumInfo.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetumScan.Core.EnumInfo.Category">
            <summary>
            类别
            </summary>
        </member>
        <member name="M:NetumScan.Core.EnumInfo.#ctor(System.Enum)">
            <summary>
            构造函数
            </summary>
            <param name="value">枚举值</param>
        </member>
        <member name="T:NetumScan.Core.HandyBuild">
            <summary>
            编译类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.HandyBuild.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="F:NetumScan.Core.HandyBuild.Release">
            <summary>
            Release
            </summary>
        </member>
        <member name="F:NetumScan.Core.HandyBuild.Steam">
            <summary>
            Steam
            </summary>
        </member>
        <member name="F:NetumScan.Core.HandyBuild.MicrosoftStore">
            <summary>
            MicrosoftStore
            </summary>
        </member>
        <member name="F:NetumScan.Core.HandyBuild.Unknown">
            <summary>
            未知的
            </summary>
        </member>
        <member name="T:NetumScan.Core.SupportedLanguage">
            <summary>
            支持的语言
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Automatic">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Dutch">
            <summary>
            Nederlands (Dutch)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.English">
            <summary>
            English
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.French">
            <summary>
            Français (French)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.German">
            <summary>
            Deutsch (German)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Hungarian">
            <summary>
            Magyar (Hungarian)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Indonesian">
            <summary>
            Bahasa Indonesia (Indonesian)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Italian">
            <summary>
            Italiano (Italian)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Japanese">
            <summary>
            日本語 (Japanese)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Korean">
            <summary>
            한국어 (Korean)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.MexicanSpanish">
            <summary>
            Español mexicano (Mexican Spanish)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Persian">
            <summary>
            فارسی (Persian)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Portuguese">
            <summary>
            Português (Portuguese)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.PortugueseBrazil">
            <summary>
            Português-Brasil (Portuguese-Brazil)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Russian">
            <summary>
            Русский (Russian)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.SimplifiedChinese">
            <summary>
            简体中文 (Simplified Chinese)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Spanish">
            <summary>
            Español (Spanish)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.TraditionalChinese">
            <summary>
            繁體中文 (Traditional Chinese)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Turkish">
            <summary>
            Türkçe (Turkish)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Ukrainian">
            <summary>
            Українська (Ukrainian)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SupportedLanguage.Vietnamese">
            <summary>
            Tiếng Việt (Vietnamese)
            </summary>
        </member>
        <member name="T:NetumScan.Core.EDataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.EDataType.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:NetumScan.Core.EDataType.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="F:NetumScan.Core.EDataType.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:NetumScan.Core.EDataType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:NetumScan.Core.EDataType.URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="T:NetumScan.Core.PNGBitDepth">
            <summary>
            PNG位深度
            </summary>
        </member>
        <member name="F:NetumScan.Core.PNGBitDepth.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:NetumScan.Core.PNGBitDepth.Automatic">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:NetumScan.Core.PNGBitDepth.Bit32">
            <summary>
            32位
            </summary>
        </member>
        <member name="F:NetumScan.Core.PNGBitDepth.Bit24">
            <summary>
            24位
            </summary>
        </member>
        <member name="T:NetumScan.Core.GIFQuality">
            <summary>
            GIF质量
            </summary>
        </member>
        <member name="F:NetumScan.Core.GIFQuality.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:NetumScan.Core.GIFQuality.Bit8">
            <summary>
            8位
            </summary>
        </member>
        <member name="F:NetumScan.Core.GIFQuality.Bit4">
            <summary>
            4位
            </summary>
        </member>
        <member name="F:NetumScan.Core.GIFQuality.Grayscale">
            <summary>
            灰度
            </summary>
        </member>
        <member name="T:NetumScan.Core.HashType">
            <summary>
            哈希类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.HashType.CRC32">
            <summary>
            CRC-32
            </summary>
        </member>
        <member name="F:NetumScan.Core.HashType.MD5">
            <summary>
            MD5
            </summary>
        </member>
        <member name="F:NetumScan.Core.HashType.SHA1">
            <summary>
            SHA-1
            </summary>
        </member>
        <member name="F:NetumScan.Core.HashType.SHA256">
            <summary>
            SHA-256
            </summary>
        </member>
        <member name="F:NetumScan.Core.HashType.SHA384">
            <summary>
            SHA-384
            </summary>
        </member>
        <member name="F:NetumScan.Core.HashType.SHA512">
            <summary>
            SHA-512
            </summary>
        </member>
        <member name="T:NetumScan.Core.BorderType">
            <summary>
            边框类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.BorderType.Outside">
            <summary>
            外部
            </summary>
        </member>
        <member name="F:NetumScan.Core.BorderType.Inside">
            <summary>
            内部
            </summary>
        </member>
        <member name="T:NetumScan.Core.PrintType">
            <summary>
            打印类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.PrintType.Image">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:NetumScan.Core.PrintType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:NetumScan.Core.DrawStyle">
            <summary>
            绘图风格
            </summary>
        </member>
        <member name="F:NetumScan.Core.DrawStyle.Hue">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DrawStyle.Saturation">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DrawStyle.Brightness">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DrawStyle.Red">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DrawStyle.Green">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DrawStyle.Blue">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ColorType">
            <summary>
            颜色类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorType.RGBA">
            <summary>
            RGBA
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorType.HSB">
            <summary>
            HSB
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorType.CMYK">
            <summary>
            CMYK
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorType.Hex">
            <summary>
            Hex
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorType.Decimal">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="T:NetumScan.Core.ColorFormat">
            <summary>
            颜色格式
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorFormat.RGB">
            <summary>
            RGB
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorFormat.RGBA">
            <summary>
            RGBA
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorFormat.ARGB">
            <summary>
            ARGB
            </summary>
        </member>
        <member name="T:NetumScan.Core.ProxyMethod">
            <summary>
            代理方法
            </summary>
        </member>
        <member name="F:NetumScan.Core.ProxyMethod.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:NetumScan.Core.ProxyMethod.Manual">
            <summary>
            手动
            </summary>
        </member>
        <member name="F:NetumScan.Core.ProxyMethod.Automatic">
            <summary>
            自动
            </summary>
        </member>
        <member name="T:NetumScan.Core.SlashType">
            <summary>
            斜线类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.SlashType.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="F:NetumScan.Core.SlashType.Suffix">
            <summary>
            后缀
            </summary>
        </member>
        <member name="T:NetumScan.Core.ScreenTearingTestMode">
            <summary>
            屏幕测试模式
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScreenTearingTestMode.VerticalLines">
            <summary>
            垂直线
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScreenTearingTestMode.HorizontalLines">
            <summary>
            水平线
            </summary>
        </member>
        <member name="T:NetumScan.Core.HotkeyStatus">
            <summary>
            热键状态
            </summary>
        </member>
        <member name="F:NetumScan.Core.HotkeyStatus.Registered">
            <summary>
            注册
            </summary>
        </member>
        <member name="F:NetumScan.Core.HotkeyStatus.Failed">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:NetumScan.Core.HotkeyStatus.NotConfigured">
            <summary>
            未配置
            </summary>
        </member>
        <member name="T:NetumScan.Core.ImageCombinerAlignment">
            <summary>
            图像组合对齐方式
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageCombinerAlignment.LeftOrTop">
            <summary>
            左或者上
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageCombinerAlignment.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageCombinerAlignment.RightOrBottom">
            <summary>
            右或者下
            </summary>
        </member>
        <member name="T:NetumScan.Core.ImageInterpolationMode">
            <summary>
            图像插值模式
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageInterpolationMode.HighQualityBicubic">
            <summary>
            高质量双三次曲线
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageInterpolationMode.Bicubic">
            <summary>
            双三次曲线
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageInterpolationMode.HighQualityBilinear">
            <summary>
            高质量双线性
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageInterpolationMode.Bilinear">
            <summary>
            双线性
            </summary>
        </member>
        <member name="F:NetumScan.Core.ImageInterpolationMode.NearestNeighbor">
            <summary>
            近邻
            </summary>
        </member>
        <member name="T:NetumScan.Core.RecordLevel">
            <summary>
            消息记录级别
            </summary>
        </member>
        <member name="F:NetumScan.Core.RecordLevel.Trace">
            <summary>
            跟踪
            </summary>
            <remarks>包含最详细消息的日志。这些消息可能包含敏感的应用程序数据。默认情况下，这些消息处于禁用状态，在生产环境中永远不应启用这些消息。</remarks>
        </member>
        <member name="F:NetumScan.Core.RecordLevel.Debug">
            <summary>
            调试
            </summary>
            <remarks>在开发过程中用于交互调查的日志。这些日志应该主要包含对调试有用的信息，并且没有长期价值。</remarks>
        </member>
        <member name="F:NetumScan.Core.RecordLevel.Information">
            <summary>
            信息
            </summary>
            <remarks>跟踪应用程序一般流程的日志。这些日志应该具有长期价值。</remarks>
        </member>
        <member name="F:NetumScan.Core.RecordLevel.Warning">
            <summary>
            警告
            </summary>
            <remarks>突出显示应用程序流中异常或意外事件的日志，但不要以其他方式导致应用程序执行停止。</remarks>
        </member>
        <member name="F:NetumScan.Core.RecordLevel.Error">
            <summary>
            错误
            </summary>
            <remarks>当当前执行流由于故障而停止时突出显示的日志。这些应该指示当前活动中的故障，而不是应用程序范围的故障。</remarks>
        </member>
        <member name="F:NetumScan.Core.RecordLevel.Critical">
            <summary>
            关键
            </summary>
            <remarks>描述无法恢复的应用程序或系统崩溃或需要立即注意的灾难性故障的日志。</remarks>
        </member>
        <member name="F:NetumScan.Core.RecordLevel.None">
            <summary>
            无
            </summary>
            <remarks>不用于写入日志消息。指定日志记录类别不应写入任何消息。</remarks>
        </member>
        <member name="T:NetumScan.Core.ExternalProgram">
            <summary>
            外部程序
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.IsActive">
            <summary>
            是否为活跃的
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.Args">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.OutputExtension">
            <summary>
            输出扩展
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.Extensions">
            <summary>
            扩展
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.HiddenWindow">
            <summary>
            隐藏窗口
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalProgram.DeleteInputFile">
            <summary>
            删除输入文件
            </summary>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">名称</param>
            <param name="path">路径</param>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.GetFullPath">
            <summary>
            获取完整路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.Run(System.String)">
            <summary>
            运行
            </summary>
            <param name="inputPath">输入路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.RunAsync(System.String)">
            <summary>
            异步运行
            </summary>
            <param name="inputPath"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.CheckExtension(System.String)">
            <summary>
            验证扩展
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.CheckExtension(System.String,System.String)">
            <summary>
            验证扩展
            </summary>
            <param name="path"></param>
            <param name="extensions"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ExternalProgram.DeletePendingInputFile">
            <summary>
            删除挂起的输入文件
            </summary>
        </member>
        <member name="T:NetumScan.Core.FastDateTime">
            <summary>
            快速日期时间
            </summary>
        </member>
        <member name="P:NetumScan.Core.FastDateTime.LocalUtcOffset">
            <summary>
            本地Utc偏移量
            </summary>
        </member>
        <member name="P:NetumScan.Core.FastDateTime.Now">
            <summary>
            现在日期时间
            </summary>
        </member>
        <member name="P:NetumScan.Core.FastDateTime.NowUnix">
            <summary>
            现在Unix日期时间
            </summary>
        </member>
        <member name="M:NetumScan.Core.FastDateTime.ToLocalTime(System.DateTime)">
            <summary>
            转换成本地时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.FileDownloader">
            <summary>
            文件下载
            </summary>
        </member>
        <member name="E:NetumScan.Core.FileDownloader.FileSizeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.FileDownloader.DownloadStarted">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.FileDownloader.ProgressChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.FileDownloader.DownloadCompleted">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.FileDownloader.ExceptionThrown">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.URL">
            <summary>
            下载链接
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.DownloadLocation">
            <summary>
            下载位置
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.IsDownloading">
            <summary>
            是否正在下载
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.IsCanceled">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.IsPaused">
            <summary>
            是否暂停
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.DownloadedSize">
            <summary>
            下载大小
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.DownloadSpeed">
            <summary>
            下载速度
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.DownloadPercentage">
            <summary>
            下载百分比
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.Proxy">
            <summary>
            代理
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.AcceptHeader">
            <summary>
            文件接受点
            </summary>
        </member>
        <member name="P:NetumScan.Core.FileDownloader.LastException">
            <summary>
            最后一个例外
            </summary>
        </member>
        <member name="M:NetumScan.Core.FileDownloader.#ctor(System.String,System.String,System.Net.IWebProxy,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="url">下载链接</param>
            <param name="downloadLocation">下载地址</param>
            <param name="proxy">代理</param>
            <param name="acceptHeader">文件接受点</param>
        </member>
        <member name="M:NetumScan.Core.FileDownloader.StartDownload">
            <summary>
            开始下载
            </summary>
        </member>
        <member name="M:NetumScan.Core.FileDownloader.StopDownload">
            <summary>
            停止下载
            </summary>
        </member>
        <member name="M:NetumScan.Core.FileDownloader.PauseDownload">
            <summary>
            暂停下载
            </summary>
        </member>
        <member name="M:NetumScan.Core.FileDownloader.ResumeDownload">
            <summary>
            继续下载
            </summary>
        </member>
        <member name="T:NetumScan.Core.FixedSizedQueue`1">
            <summary>
            固定大小队列
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:NetumScan.Core.FixedSizedQueue`1.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="M:NetumScan.Core.FixedSizedQueue`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="size">大小</param>
        </member>
        <member name="M:NetumScan.Core.FixedSizedQueue`1.Enqueue(`0)">
            <summary>
            添加队列
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:NetumScan.Core.FolderSelectDialog">
            <summary>
            Wraps System.Windows.Forms.OpenFileDialog to make it present
            a vista-style dialog.
            </summary>
        </member>
        <member name="M:NetumScan.Core.FolderSelectDialog.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:NetumScan.Core.FolderSelectDialog.InitialDirectory">
            <summary>
            Gets/Sets the initial folder to be selected. A null value selects the current directory.
            </summary>
        </member>
        <member name="P:NetumScan.Core.FolderSelectDialog.Title">
            <summary>
            Gets/Sets the title to show in the dialog
            </summary>
        </member>
        <member name="P:NetumScan.Core.FolderSelectDialog.FileName">
            <summary>
            Gets the selected folder
            </summary>
        </member>
        <member name="M:NetumScan.Core.FolderSelectDialog.ShowDialog">
            <summary>
            Shows the dialog
            </summary>
            <returns>True if the user presses OK else false</returns>
        </member>
        <member name="M:NetumScan.Core.FolderSelectDialog.ShowDialog(System.IntPtr)">
            <summary>
            Shows the dialog
            </summary>
            <param name="hWndOwner">Handle of the control to be parent</param>
            <returns>True if the user presses OK else false</returns>
        </member>
        <member name="M:NetumScan.Core.FolderSelectDialog.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.WindowWrapper">
            <summary>
            Creates IWin32Window around an IntPtr
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowWrapper.Handle">
            <summary>
            Original ptr
            </summary>
        </member>
        <member name="M:NetumScan.Core.WindowWrapper.#ctor(System.IntPtr)">
            <summary>
            Constructor
            </summary>
            <param name="handle">Handle to wrap</param>
        </member>
        <member name="T:NetumScan.Core.Reflector">
             <summary>
             This class is from the Front-End for Dosbox and is used to present a 'vista' dialog box to select folders.
             Being able to use a vista style dialog box to select folders is much better then using the shell folder browser.
             http://code.google.com/p/fed/
            
             Example:
             var r = new Reflector("System.Windows.Forms");
             </summary>
        </member>
        <member name="M:NetumScan.Core.Reflector.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ns">The namespace containing types to be used</param>
        </member>
        <member name="M:NetumScan.Core.Reflector.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="an">A specific assembly name (used if the assembly name does not tie exactly with the namespace)</param>
            <param name="ns">The namespace containing types to be used</param>
        </member>
        <member name="M:NetumScan.Core.Reflector.GetType(System.String)">
            <summary>
            Return a Type instance for a type 'typeName'
            </summary>
            <param name="typeName">The name of the type</param>
            <returns>A type instance</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.New(System.String,System.Object[])">
            <summary>
            Create a new object of a named type passing along any params
            </summary>
            <param name="name">The name of the type to create</param>
            <param name="parameters"></param>
            <returns>An instantiated type</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.Call(System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' passing parameters 'parameters'
            </summary>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.Call2(System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' passing parameters 'parameters'
            </summary>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.CallAs(System.Type,System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' which is of type 'type' passing parameters 'parameters'
            </summary>
            <param name="type">The type of 'obj'</param>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.CallAs2(System.Type,System.Object,System.String,System.Object[])">
            <summary>
            Calls method 'func' on object 'obj' which is of type 'type' passing parameters 'parameters'
            </summary>
            <param name="type">The type of 'obj'</param>
            <param name="obj">The object on which to excute function 'func'</param>
            <param name="func">The function to execute</param>
            <param name="parameters">The parameters to pass to function 'func'</param>
            <returns>The result of the function invocation</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.Get(System.Object,System.String)">
            <summary>
            Returns the value of property 'prop' of object 'obj'
            </summary>
            <param name="obj">The object containing 'prop'</param>
            <param name="prop">The property name</param>
            <returns>The property value</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.GetAs(System.Type,System.Object,System.String)">
            <summary>
            Returns the value of property 'prop' of object 'obj' which has type 'type'
            </summary>
            <param name="type">The type of 'obj'</param>
            <param name="obj">The object containing 'prop'</param>
            <param name="prop">The property name</param>
            <returns>The property value</returns>
        </member>
        <member name="M:NetumScan.Core.Reflector.GetEnum(System.String,System.String)">
            <summary>
            Returns an enum value
            </summary>
            <param name="typeName">The name of enum type</param>
            <param name="name">The name of the value</param>
            <returns>The enum value</returns>
        </member>
        <member name="T:NetumScan.Core.FontSafe">
            <summary>
            字体安全
            </summary>
        </member>
        <member name="P:NetumScan.Core.FontSafe.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="M:NetumScan.Core.FontSafe.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.FontSafe.#ctor(System.Drawing.Font)">
            <summary>
            构造函数
            </summary>
            <param name="font">字体</param>
        </member>
        <member name="M:NetumScan.Core.FontSafe.SetFont(System.Drawing.Font)">
            <summary>
            设置字体
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:NetumScan.Core.FontSafe.GetFont">
            <summary>
            获取字体
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.AnimatedGifCreator">
            <summary>
            动画Gif创建
            </summary>
        </member>
        <member name="P:NetumScan.Core.AnimatedGifCreator.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:NetumScan.Core.AnimatedGifCreator.Delay">
            <summary>
            延迟
            </summary>
        </member>
        <member name="P:NetumScan.Core.AnimatedGifCreator.Repeat">
            <summary>
            重复
            </summary>
        </member>
        <member name="P:NetumScan.Core.AnimatedGifCreator.FrameCount">
            <summary>
            帧数
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimatedGifCreator.stream">
            <summary>
            文件六
            </summary>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">文件路径</param>
            <param name="delay">延迟</param>
            <param name="repeat">重复</param>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.AddFrame(System.Drawing.Image,NetumScan.Core.GIFQuality)">
            <summary>
            添加帧
            </summary>
            <param name="img">图片</param>
            <param name="quality">图片质量</param>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.AddFrame(System.String,NetumScan.Core.GIFQuality)">
            <summary>
            添加帧
            </summary>
            <param name="path">路径</param>
            <param name="quality">图片质量</param>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.Finish">
            <summary>
            完成
            </summary>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.CreateHeaderBlock">
            <summary>
            创建头部数据块
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.CreateApplicationExtensionBlock(System.Int32)">
            <summary>
            创建应用程序扩展块
            </summary>
            <param name="repeat"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AnimatedGifCreator.CreateGraphicsControlExtensionBlock(System.Int32)">
            <summary>
            创建图形控件扩展块
            </summary>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.GifClass">
            <summary>
            GIF类
            </summary>
        </member>
        <member name="T:NetumScan.Core.GifClass.GIFVersion">
            <summary>
            GIF版本
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.GIFVersion.GIF87a">
            <summary>
            1987年制定的版本
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.GIFVersion.GIF89a">
            <summary>
            1987年制定的版本
            </summary>
        </member>
        <member name="T:NetumScan.Core.GifClass.GIFBlockType">
            <summary>
            GIF块类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.GIFBlockType.ImageDescriptor">
            <summary>
            图像描述块
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.GIFBlockType.Extension">
            <summary>
            扩展块
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.GIFBlockType.Trailer">
            <summary>
            结束块
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.GifSignature">
            <summary>
            Gif签名
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.ScreenDescriptor">
            <summary>
            屏幕描述
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.ColorTable">
            <summary>
            颜色表格
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.ImageDescriptor">
            <summary>
            图像描述
            </summary>
        </member>
        <member name="F:NetumScan.Core.GifClass.ImageData">
            <summary>
            图像数据
            </summary>
        </member>
        <member name="M:NetumScan.Core.GifClass.LoadGifPicture(System.Drawing.Image,NetumScan.Core.GIFQuality)">
            <summary>
            加载GIF照片
            </summary>
            <param name="img">图片</param>
            <param name="quality">质量</param>
        </member>
        <member name="M:NetumScan.Core.GifClass.AnalyzeGifSignature(System.Collections.Generic.List{System.Byte})">
            <summary>
            解析Gif签名
            </summary>
            <param name="gifData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GifClass.ByteToChar(System.Byte)">
            <summary>
            Byte转换成Char
            </summary>
            <param name="b">Byte值</param>
            <returns>Char值</returns>
        </member>
        <member name="M:NetumScan.Core.GifClass.AnalyzeScreenDescriptor(System.Collections.Generic.List{System.Byte})">
            <summary>
            解析屏幕描述
            </summary>
            <param name="gifData">gif数据</param>
        </member>
        <member name="M:NetumScan.Core.GifClass.GetTypeOfNextBlock(System.Collections.Generic.List{System.Byte})">
            <summary>
            获取下一个块的类型
            </summary>
            <param name="gifData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GifClass.AnalyzeImageDescriptor(System.Collections.Generic.List{System.Byte})">
            <summary>
            解析图像描述
            </summary>
            <param name="gifData"></param>
        </member>
        <member name="M:NetumScan.Core.GifClass.GetImageData(System.Collections.Generic.List{System.Byte})">
            <summary>
            获取图片数据
            </summary>
            <param name="gifData"></param>
        </member>
        <member name="M:NetumScan.Core.GifClass.ThrowAwayExtensionBlock(System.Collections.Generic.List{System.Byte})">
            <summary>
            一次性扩展块
            </summary>
            <param name="gifData">Gif数据</param>
        </member>
        <member name="T:NetumScan.Core.GrayscaleQuantizer">
            <summary>
            PaletteQuantizer的摘要说明。
            </summary>
        </member>
        <member name="M:NetumScan.Core.GrayscaleQuantizer.#ctor">
            <summary>
            Construct the palette quantizer
            </summary>
            <remarks>
            Palette quantization only requires a single quantization step
            </remarks>
        </member>
        <member name="M:NetumScan.Core.GrayscaleQuantizer.QuantizePixel(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="T:NetumScan.Core.OctreeQuantizer">
            <summary>
            Quantize using an Octree
            </summary>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct the octree quantizer
            </summary>
            <remarks>
            The Octree quantizer is a two pass algorithm. The initial pass sets up the octree,
            the second pass quantizes a color based on the nodes in the tree
            </remarks>
            <param name="maxColors">The maximum number of colors to return</param>
            <param name="maxColorBits">The number of significant bits</param>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.InitialQuantizePixel(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Process the pixel in the first pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <remarks>
            This function need only be overridden if your quantize algorithm needs two passes,
            such as an Octree quantizer.
            </remarks>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.QuantizePixel(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image
            </summary>
            <param name="original">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer._octree">
            <summary>
            Stores the tree
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer._maxColors">
            <summary>
            Maximum allowed color depth
            </summary>
        </member>
        <member name="T:NetumScan.Core.OctreeQuantizer.Octree">
            <summary>
            Class which does the actual quantization
            </summary>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.#ctor(System.Int32)">
            <summary>
            Construct the octree
            </summary>
            <param name="maxColorBits">The maximum number of significant bits in the image</param>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.AddColor(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Add a given color value to the octree
            </summary>
            <param name="pixel"></param>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.Reduce">
            <summary>
            Reduce the depth of the tree
            </summary>
        </member>
        <member name="P:NetumScan.Core.OctreeQuantizer.Octree.Leaves">
            <summary>
            Get/Set the number of leaves in the tree
            </summary>
        </member>
        <member name="P:NetumScan.Core.OctreeQuantizer.Octree.ReducibleNodes">
            <summary>
            Return the array of reducible nodes
            </summary>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.TrackPrevious(NetumScan.Core.OctreeQuantizer.Octree.OctreeNode)">
            <summary>
            Keep track of the previous node that was quantized
            </summary>
            <param name="node">The node last quantized</param>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.Palletize(System.Int32)">
            <summary>
            Convert the nodes in the octree to a palette with a maximum of colorCount colors
            </summary>
            <param name="colorCount">The maximum number of colors</param>
            <returns>An arraylist with the palettized colors</returns>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.GetPaletteIndex(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Get the palette index for the passed color
            </summary>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.mask">
            <summary>
            Mask used when getting the appropriate pixels for a given node
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree._root">
            <summary>
            The root of the octree
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree._leafCount">
            <summary>
            Number of leaves in the tree
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree._reducibleNodes">
            <summary>
            Array of reducible nodes
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree._maxColorBits">
            <summary>
            Maximum number of significant bits in the image
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree._previousNode">
            <summary>
            Store the last node quantized
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree._previousColor">
            <summary>
            Cache the previous color quantized
            </summary>
        </member>
        <member name="T:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode">
            <summary>
            Class which encapsulates each node in the tree
            </summary>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.#ctor(System.Int32,System.Int32,NetumScan.Core.OctreeQuantizer.Octree)">
            <summary>
            Construct the node
            </summary>
            <param name="level">The level in the tree = 0 - 7</param>
            <param name="colorBits">The number of significant color bits in the image</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.AddColor(NetumScan.Core.Quantizer.Color32,System.Int32,System.Int32,NetumScan.Core.OctreeQuantizer.Octree)">
            <summary>
            Add a color into the tree
            </summary>
            <param name="pixel">The color</param>
            <param name="colorBits">The number of significant color bits</param>
            <param name="level">The level in the tree</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="P:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.NextReducible">
            <summary>
            Get/Set the next reducible node
            </summary>
        </member>
        <member name="P:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.Children">
            <summary>
            Return the child nodes
            </summary>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.Reduce">
            <summary>
            Reduce this node by removing all of its children
            </summary>
            <returns>The number of leaves removed</returns>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.ConstructPalette(System.Collections.ArrayList,System.Int32@)">
            <summary>
            Traverse the tree, building up the color palette
            </summary>
            <param name="palette">The palette</param>
            <param name="paletteIndex">The current palette index</param>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.GetPaletteIndex(NetumScan.Core.Quantizer.Color32,System.Int32)">
            <summary>
            Return the palette index for the passed color
            </summary>
        </member>
        <member name="M:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode.Increment(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Increment the pixel count and add to the color information
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode._leaf">
            <summary>
            Flag indicating that this is a leaf node
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode._pixelCount">
            <summary>
            Number of pixels in this node
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode._red">
            <summary>
            Red component
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode._green">
            <summary>
            Green Component
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode._blue">
            <summary>
            Blue component
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode._children">
            <summary>
            Pointers to any child nodes
            </summary>
        </member>
        <member name="F:NetumScan.Core.OctreeQuantizer.Octree.OctreeNode._paletteIndex">
            <summary>
            The index of this node in the palette
            </summary>
        </member>
        <member name="T:NetumScan.Core.PaletteQuantizer">
            <summary>
            Summary description for PaletteQuantizer.
            </summary>
        </member>
        <member name="M:NetumScan.Core.PaletteQuantizer.#ctor(System.Collections.ArrayList)">
            <summary>
            Construct the palette quantizer
            </summary>
            <param name="palette">The color palette to quantize to</param>
            <remarks>
            Palette quantization only requires a single quantization step
            </remarks>
        </member>
        <member name="M:NetumScan.Core.PaletteQuantizer.QuantizePixel(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:NetumScan.Core.PaletteQuantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image
            </summary>
            <param name="palette">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="F:NetumScan.Core.PaletteQuantizer._colorMap">
            <summary>
            Lookup table for colors
            </summary>
        </member>
        <member name="F:NetumScan.Core.PaletteQuantizer._colors">
            <summary>
            List of all colors in the palette
            </summary>
        </member>
        <member name="T:NetumScan.Core.Quantizer">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:NetumScan.Core.Quantizer.#ctor(System.Boolean)">
            <summary>
            Construct the quantizer
            </summary>
            <param name="singlePass">If true, the quantization only needs to loop through the source pixels once</param>
            <remarks>
            If you construct this class with a true value for singlePass, then the code will, when quantizing your image,
            only call the 'QuantizeImage' function. If two passes are required, the code will call 'InitialQuantizeImage'
            and then 'QuantizeImage'.
            </remarks>
        </member>
        <member name="M:NetumScan.Core.Quantizer.Quantize(System.Drawing.Image)">
            <summary>
            Quantize an image and return the resulting output bitmap
            </summary>
            <param name="source">The image to quantize</param>
            <returns>A quantized version of the image</returns>
        </member>
        <member name="M:NetumScan.Core.Quantizer.FirstPass(System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Execute the first pass through the pixels in the image
            </summary>
            <param name="sourceData">The source data</param>
            <param name="width">The width in pixels of the image</param>
            <param name="height">The height in pixels of the image</param>
        </member>
        <member name="M:NetumScan.Core.Quantizer.SecondPass(System.Drawing.Imaging.BitmapData,System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Execute a second pass through the bitmap
            </summary>
            <param name="sourceData">The source bitmap, locked into memory</param>
            <param name="output">The output bitmap</param>
            <param name="width">The width in pixels of the image</param>
            <param name="height">The height in pixels of the image</param>
            <param name="bounds">The bounding rectangle</param>
        </member>
        <member name="M:NetumScan.Core.Quantizer.InitialQuantizePixel(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the first pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <remarks>
            This function need only be overridden if your quantize algorithm needs two passes,
            such as an Octree quantizer.
            </remarks>
        </member>
        <member name="M:NetumScan.Core.Quantizer.QuantizePixel(NetumScan.Core.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:NetumScan.Core.Quantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image
            </summary>
            <param name="original">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="F:NetumScan.Core.Quantizer._singlePass">
            <summary>
            Flag used to indicate whether a single pass or two passes are needed for quantization.
            </summary>
        </member>
        <member name="T:NetumScan.Core.Quantizer.Color32">
            <summary>
            Struct that defines a 32 bpp colour
            </summary>
            <remarks>
            This struct is used to read data from a 32 bits per pixel image
            in memory, and is ordered in this manner as this is the way that
            the data is layed out in memory
            </remarks>
        </member>
        <member name="M:NetumScan.Core.Quantizer.Color32.#ctor(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="pSourcePixel"></param>
        </member>
        <member name="F:NetumScan.Core.Quantizer.Color32.Blue">
            <summary>
            Holds the blue component of the colour
            </summary>
        </member>
        <member name="F:NetumScan.Core.Quantizer.Color32.Green">
            <summary>
            Holds the green component of the colour
            </summary>
        </member>
        <member name="F:NetumScan.Core.Quantizer.Color32.Red">
            <summary>
            Holds the red component of the colour
            </summary>
        </member>
        <member name="F:NetumScan.Core.Quantizer.Color32.Alpha">
            <summary>
            Holds the alpha component of the colour
            </summary>
        </member>
        <member name="F:NetumScan.Core.Quantizer.Color32.ARGB">
            <summary>
            Permits the color32 to be treated as an int32
            </summary>
        </member>
        <member name="P:NetumScan.Core.Quantizer.Color32.Color">
            <summary>
            Return the color for this Color32 object
            </summary>
        </member>
        <member name="T:NetumScan.Core.GraphicsQualityManager">
            <summary>
            图形质量管理器
            </summary>
        </member>
        <member name="M:NetumScan.Core.GraphicsQualityManager.#ctor(System.Drawing.Graphics,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="g">图像绘图</param>
            <param name="setHighQuality">是否设置高质量</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsQualityManager.SetHighQuality">
            <summary>
            设置高质量
            </summary>
        </member>
        <member name="M:NetumScan.Core.GraphicsQualityManager.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:NetumScan.Core.HandyResources">
            <summary>
            资源
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyResources.UserAgent">
            <summary>
            用户代理
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyResources.UseCustomTheme">
            <summary>
            是否使用自定义主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyResources.IsDarkTheme">
            <summary>
            是否使用深色主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyResources.UseWhiteIcon">
            <summary>
            是否使用白色图标
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyResources.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyResources.Logo">
            <summary>
            Logo
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyResources.Theme">
            <summary>
            主题
            </summary>
        </member>
        <member name="M:NetumScan.Core.HandyResources.ApplyTheme(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            应用主题
            </summary>
            <param name="form"></param>
            <param name="setIcon"></param>
        </member>
        <member name="M:NetumScan.Core.HandyResources.ApplyCustomThemeToControl(System.Windows.Forms.Control)">
            <summary>
            将自定义主题应用于控件
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:NetumScan.Core.HandyResources.ApplyCustomThemeToComponents(System.ComponentModel.IContainer)">
            <summary>
            将自定义主题应用于组件
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:NetumScan.Core.HandyResources.ApplyCustomThemeToContextMenuStrip(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            将自定义主题应用于上下文菜单提示
            </summary>
            <param name="cms"></param>
        </member>
        <member name="T:NetumScan.Core.HandyTheme">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.BackgroundColor">
            <summary>
            背景颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.LightBackgroundColor">
            <summary>
            浅色背景色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.DarkBackgroundColor">
            <summary>
            深色背景色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.TextColor">
            <summary>
            文本颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.BorderColor">
            <summary>
            边框颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.CheckerColor">
            <summary>
            格子颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.CheckerColor2">
            <summary>
            格子颜色2
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.CheckerSize">
            <summary>
            格子大小
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.LinkColor">
            <summary>
            链接颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.MenuHighlightColor">
            <summary>
            菜单高亮颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.MenuHighlightBorderColor">
            <summary>
            菜单高亮边框颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.MenuBorderColor">
            <summary>
            菜单边框颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.MenuCheckBackgroundColor">
            <summary>
            菜单选中背景颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.MenuFont">
            <summary>
            菜单字体
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.ContextMenuFont">
            <summary>
            上下文菜单字体
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.ContextMenuOpacity">
            <summary>
            上下文菜单不透明度
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.ContextMenuOpacityDouble">
            <summary>
            上下文菜单不透明度加倍
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.SeparatorLightColor">
            <summary>
            分离器浅色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.SeparatorDarkColor">
            <summary>
            分离器深色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.IsDarkTheme">
            <summary>
            是否为深色主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.DarkTheme">
            <summary>
            深色主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.LightTheme">
            <summary>
            浅色主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.NordDarkTheme">
            <summary>
            Nord Dark 主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.NordLightTheme">
            <summary>
            Nord Light 主题
            </summary>
        </member>
        <member name="P:NetumScan.Core.HandyTheme.DraculaTheme">
            <summary>
            Dracula 主题
            </summary>
        </member>
        <member name="M:NetumScan.Core.HandyTheme.GetDefaultThemes">
            <summary>
            获取默认主题
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HandyTheme.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ImageFilesCache">
            <summary>
            图像文件缓存
            </summary>
        </member>
        <member name="M:NetumScan.Core.ImageFilesCache.GetImage(System.String)">
            <summary>
            获取图像
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageFilesCache.GetFileIconAsImage(System.String,System.Boolean)">
            <summary>
            将文件图标获取为图像
            </summary>
            <param name="filePath">文件路径</param>
            <param name="isSmallIcon">是否小图标</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageFilesCache.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:NetumScan.Core.ImageFilesCache.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:NetumScan.Core.LanguageHelper">
            <summary>
            语言帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.LanguageHelper.ChangeLanguage(NetumScan.Core.SupportedLanguage,System.Windows.Forms.Form[])">
            <summary>
            修改语言
            </summary>
            <param name="language">语言</param>
            <param name="forms">窗口</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.LanguageHelper.GetLanguageIcon(NetumScan.Core.SupportedLanguage)">
            <summary>
            获取语言图标
            </summary>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.LanguageHelper.GetCultureName(NetumScan.Core.SupportedLanguage)">
            <summary>
            获取区域性语言名称
            </summary>
            <param name="language">语言</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ListViewColumnSorter">
            <summary>
            此类是“IComparer”接口的实现。
            This class is an implementation of the 'IComparer' interface.
            </summary>
        </member>
        <member name="F:NetumScan.Core.ListViewColumnSorter.ColumnToSort">
            <summary>
            指定要排序的列
            Specifies the column to be sorted
            </summary>
        </member>
        <member name="F:NetumScan.Core.ListViewColumnSorter.OrderOfSort">
            <summary>
            指定排序的顺序（即“升序”）。
            Specifies the order in which to sort (i.e. 'Ascending').
            </summary>
        </member>
        <member name="P:NetumScan.Core.ListViewColumnSorter.SortByDate">
            <summary>
            指定是否按日期排序
            Specifies whether to sort as a date
            </summary>
        </member>
        <member name="F:NetumScan.Core.ListViewColumnSorter.ObjectCompare">
            <summary>
            不区分大小写的比较器对象
            Case insensitive comparer object
            </summary>
        </member>
        <member name="M:NetumScan.Core.ListViewColumnSorter.#ctor">
            <summary>
            类构造函数。初始化各种元素
            Class constructor.  Initializes various elements
            </summary>
        </member>
        <member name="M:NetumScan.Core.ListViewColumnSorter.Compare(System.Object,System.Object)">
            <summary>
            此方法继承自IComparer接口。它使用不区分大小写的比较来比较传递的两个对象。
            This method is inherited from the IComparer interface.  It compares the two objects passed using a case insensitive comparison.
            </summary>
            <param name="x">第一个要比较的对象 First object to be compared</param>
            <param name="y">第二个要比较的对象 Second object to be compared</param>
            <returns>The result of the comparison. "0" if equal, negative if 'x' is less than 'y' and positive if 'x' is greater than 'y'</returns>
        </member>
        <member name="P:NetumScan.Core.ListViewColumnSorter.SortColumn">
            <summary>
            获取或设置要应用排序操作的列的编号（默认为“0”）。
            Gets or sets the number of the column to which to apply the sorting operation (Defaults to '0').
            </summary>
        </member>
        <member name="P:NetumScan.Core.ListViewColumnSorter.Order">
            <summary>
            获取或设置要应用的排序顺序（例如，“升序”或“降序”）。
            Gets or sets the order of sorting to apply (for example, 'Ascending' or 'Descending').
            </summary>
        </member>
        <member name="T:NetumScan.Core.MaxLengthStream">
            <summary>
            最大长流
            </summary>
        </member>
        <member name="M:NetumScan.Core.MaxLengthStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            构造长度
            </summary>
            <param name="stream">流</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="P:NetumScan.Core.MaxLengthStream.MaxLength">
            <summary>
            最大长度
            </summary>
        </member>
        <member name="P:NetumScan.Core.MaxLengthStream.CanRead">
            <summary>
            是否支持读取
            </summary>
        </member>
        <member name="P:NetumScan.Core.MaxLengthStream.CanSeek">
            <summary>
            是否支持寻找
            </summary>
        </member>
        <member name="P:NetumScan.Core.MaxLengthStream.CanWrite">
            <summary>
            是否支持写入
            </summary>
        </member>
        <member name="P:NetumScan.Core.MaxLengthStream.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="P:NetumScan.Core.MaxLengthStream.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="M:NetumScan.Core.MaxLengthStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            读取
            </summary>
            <param name="buffer">缓存</param>
            <param name="offset">偏移量</param>
            <param name="count">数量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MaxLengthStream.Flush">
            <summary>
            清除
            </summary>
        </member>
        <member name="M:NetumScan.Core.MaxLengthStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            寻找
            </summary>
            <param name="offset"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MaxLengthStream.SetLength(System.Int64)">
            <summary>
            设置长度
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NetumScan.Core.MaxLengthStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            写入
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:NetumScan.Core.MaxLengthStream.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.PointInfo">
            <summary>
            点信息
            </summary>
        </member>
        <member name="P:NetumScan.Core.PointInfo.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:NetumScan.Core.PointInfo.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="T:NetumScan.Core.ProxyInfo">
            <summary>
            代理信息
            </summary>
        </member>
        <member name="P:NetumScan.Core.ProxyInfo.ProxyMethod">
            <summary>
            代理方法
            </summary>
        </member>
        <member name="P:NetumScan.Core.ProxyInfo.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:NetumScan.Core.ProxyInfo.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:NetumScan.Core.ProxyInfo.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:NetumScan.Core.ProxyInfo.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:NetumScan.Core.ProxyInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.ProxyInfo.IsValidProxy">
            <summary>
            是否为有效的代理
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ProxyInfo.GetWebProxy">
            <summary>
            获取Web代理
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ProxyInfo.GetDefaultWebProxy">
            <summary>
            获取默认Web代理
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ProxyInfo.ToString">
            <summary>
            重新<see cref="M:NetumScan.Core.ProxyInfo.ToString"/> 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.DPAPIEncryptedStringPropertyResolver">
            <summary>
            DPAPI加密字符串属性解析
            </summary>
        </member>
        <member name="M:NetumScan.Core.DPAPIEncryptedStringPropertyResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>
            创建属性
            </summary>
            <param name="type">类型</param>
            <param name="memberSerialization">序列化选项</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.DPAPIEncryptedStringValueProvider">
            <summary>
            DPAPI加密字符串值供应
            </summary>
        </member>
        <member name="M:NetumScan.Core.DPAPIEncryptedStringValueProvider.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            构造函数
            </summary>
            <param name="targetProperty">目标属性</param>
        </member>
        <member name="M:NetumScan.Core.DPAPIEncryptedStringValueProvider.GetValue(System.Object)">
            <summary>
            获取属性值
            </summary>
            <param name="target">目标属性</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.DPAPIEncryptedStringValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="target">目标属性</param>
            <param name="value">属性值</param>
        </member>
        <member name="T:NetumScan.Core.JsonEncryptAttribute">
            <summary>
            Json加密属性
            </summary>
        </member>
        <member name="T:NetumScan.Core.KnownTypesSerializationBinder">
            <summary>
            已知类型序列化绑定器
            </summary>
        </member>
        <member name="P:NetumScan.Core.KnownTypesSerializationBinder.KnownTypes">
            <summary>
            已知类型
            </summary>
        </member>
        <member name="M:NetumScan.Core.KnownTypesSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <summary>
            绑定到名称
            </summary>
            <param name="serializedType">序列化类型</param>
            <param name="assemblyName">程序集名称</param>
            <param name="typeName">类型名称</param>
        </member>
        <member name="M:NetumScan.Core.KnownTypesSerializationBinder.BindToType(System.String,System.String)">
            <summary>
            绑定到类型
            </summary>
            <param name="assemblyName">程序集名称</param>
            <param name="typeName">类型名称</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.SafeStringEnumConverter">
            <summary>
            安全字符串枚举转换器
            </summary>
        </member>
        <member name="M:NetumScan.Core.SafeStringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            读取Json
            </summary>
            <param name="reader">读取对象</param>
            <param name="objectType">对象类型</param>
            <param name="existingValue">已经存在的值</param>
            <param name="serializer">序列化</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.SettingsBase`1">
            <summary>
            配置基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:NetumScan.Core.SettingsBase`1.SettingsSavedEventHandler">
            <summary>
            配置保存事件委托
            </summary>
            <param name="settings"></param>
            <param name="filePath"></param>
            <param name="result"></param>
        </member>
        <member name="E:NetumScan.Core.SettingsBase`1.SettingsSaved">
            <summary>
            配置保存事件
            </summary>
        </member>
        <member name="T:NetumScan.Core.SettingsBase`1.SettingsSaveFailedEventHandler">
            <summary>
            配置保存失败事件委托
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:NetumScan.Core.SettingsBase`1.SettingsSaveFailed">
            <summary>
            配置保存失败事件
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.ApplicationVersion">
            <summary>
            应用程序版本
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.IsFirstTimeRun">
            <summary>
            是第一次运行吗？
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.IsUpgrade">
            <summary>
            是升级吗？
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.BackupFolder">
            <summary>
            备份文件夹
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.CreateBackup">
            <summary>
            是否创建备份
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.CreateWeeklyBackup">
            <summary>
            是否按周创建备份
            </summary>
        </member>
        <member name="P:NetumScan.Core.SettingsBase`1.SupportDPAPIEncryption">
            <summary>
            是否支持DPAPI加密
            </summary>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.IsUpgradeFrom(System.String)">
            <summary>
            是否升级自
            </summary>
            <param name="version">版本</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.OnSettingsSaved(System.String,System.Boolean)">
            <summary>
            配置保存通知
            </summary>
            <param name="filePath">文件路径</param>
            <param name="result">结果</param>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.OnSettingsSaveFailed(System.Exception)">
            <summary>
            配置保存失败通知
            </summary>
            <param name="e">异常信息</param>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.Save(System.String)">
            <summary>
            保存配置
            </summary>
            <param name="filePath">文件路径</param>
            <returns>结果</returns>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.Save">
            <summary>
            保存配置
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.SaveAsync(System.String)">
            <summary>
            异步保存配置
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.SaveAsync">
            <summary>
            异步保存配置
            </summary>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.SaveToMemoryStream(System.Boolean)">
            <summary>
            保存到内存流
            </summary>
            <param name="supportDPAPIEncryption">是否支持DPAPI加密</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.SaveInternal(System.String)">
            <summary>
            保存配置[内部]
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.SaveToStream(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            保存到文件流
            </summary>
            <param name="stream">文件流</param>
            <param name="supportDPAPIEncryption">是否支持DPAPI加密</param>
            <param name="leaveOpen">是否后是否打开</param>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.Load(System.String,System.String,System.Boolean)">
            <summary>
            加载配置
            </summary>
            <param name="filePath">文件路径</param>
            <param name="backupFolder">备份文件夹</param>
            <param name="fallbackSupport">是否支持后退版本</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.LoadInternal(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            加载配置[内部]
            </summary>
            <param name="filePath">文件路径</param>
            <param name="fallbackFilePaths">后退备份文件</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SettingsBase`1.Serializer_Error(System.Object,Newtonsoft.Json.Serialization.ErrorEventArgs)">
            <summary>
            序列化程序错位
            </summary>
            <param name="sender">对象</param>
            <param name="e">异常信息</param>
        </member>
        <member name="T:NetumScan.Core.WritablePropertiesOnlyResolver">
            <summary>
            仅可写属性解析
            </summary>
        </member>
        <member name="M:NetumScan.Core.WritablePropertiesOnlyResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>
            创建属性
            </summary>
            <param name="type">类型</param>
            <param name="memberSerialization">序列化选项</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.StringLineReader">
            <summary>
            字符串行读取器
            </summary>
        </member>
        <member name="P:NetumScan.Core.StringLineReader.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:NetumScan.Core.StringLineReader.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:NetumScan.Core.StringLineReader.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:NetumScan.Core.StringLineReader.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:NetumScan.Core.StringLineReader.ReadLine">
            <summary>
            读取一行
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringLineReader.ReadAllLines(System.Boolean)">
            <summary>
            读取所有行
            </summary>
            <param name="autoTrim"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringLineReader.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:NetumScan.Core.TaskEx`1">
            <summary>
            任务扩展
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:NetumScan.Core.TaskEx`1.ProgressChangedEventHandler">
            <summary>
            进度更改委托
            </summary>
            <param name="progress"></param>
        </member>
        <member name="E:NetumScan.Core.TaskEx`1.ProgressChanged">
            <summary>
            进度更改实际
            </summary>
        </member>
        <member name="P:NetumScan.Core.TaskEx`1.IsRunning">
            <summary>
            是否正在运行
            </summary>
        </member>
        <member name="P:NetumScan.Core.TaskEx`1.IsCanceled">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="M:NetumScan.Core.TaskEx`1.Run(System.Action)">
            <summary>
            运行
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.TaskEx`1.Report(`0)">
            <summary>
            报告
            </summary>
            <param name="progress"></param>
        </member>
        <member name="M:NetumScan.Core.TaskEx`1.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="M:NetumScan.Core.TaskEx`1.ThrowIfCancellationRequested">
            <summary>
            ThrowIfCancellationRequested
            </summary>
        </member>
        <member name="T:NetumScan.Core.TextBoxTraceListener">
            <summary>
            文本框跟踪侦听器
            </summary>
        </member>
        <member name="M:NetumScan.Core.TextBoxTraceListener.#ctor(System.Windows.Forms.TextBox)">
            <summary>
            构造函数
            </summary>
            <param name="textBox"></param>
        </member>
        <member name="M:NetumScan.Core.TextBoxTraceListener.Write(System.String)">
            <summary>
            写入
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NetumScan.Core.TextBoxTraceListener.WriteLine(System.String)">
            <summary>
            写入一行
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:NetumScan.Core.ThreadWorker">
            <summary>
            工作线程
            </summary>
        </member>
        <member name="E:NetumScan.Core.ThreadWorker.DoWork">
            <summary>
            工作动作
            </summary>
        </member>
        <member name="E:NetumScan.Core.ThreadWorker.Completed">
            <summary>
            完成动作
            </summary>
        </member>
        <member name="M:NetumScan.Core.ThreadWorker.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.ThreadWorker.Start(System.Threading.ApartmentState)">
            <summary>
            启动
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:NetumScan.Core.ThreadWorker.WorkThread">
            <summary>
            工作线程
            </summary>
        </member>
        <member name="M:NetumScan.Core.ThreadWorker.OnDoWork">
            <summary>
            工作方法
            </summary>
        </member>
        <member name="M:NetumScan.Core.ThreadWorker.OnCompleted">
            <summary>
            完成方法
            </summary>
        </member>
        <member name="M:NetumScan.Core.ThreadWorker.Invoke(System.Action)">
            <summary>
            调用
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:NetumScan.Core.ThreadWorker.InvokeAsync(System.Action)">
            <summary>
            异步调用
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:NetumScan.Core.UnsafeBitmap">
            <summary>
            不安全位图
            </summary>
        </member>
        <member name="P:NetumScan.Core.UnsafeBitmap.Pointer">
            <summary>
            指针
            </summary>
        </member>
        <member name="P:NetumScan.Core.UnsafeBitmap.IsLocked">
            <summary>
            是否锁定
            </summary>
        </member>
        <member name="P:NetumScan.Core.UnsafeBitmap.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:NetumScan.Core.UnsafeBitmap.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:NetumScan.Core.UnsafeBitmap.PixelCount">
            <summary>
            像素数量
            </summary>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.#ctor(System.Drawing.Bitmap,System.Boolean,System.Drawing.Imaging.ImageLockMode)">
            <summary>
            构造函数
            </summary>
            <param name="bitmap">位图</param>
            <param name="lockBitmap">锁定标志</param>
            <param name="imageLockMode">锁定模式</param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.Lock(System.Drawing.Imaging.ImageLockMode)">
            <summary>
            锁定
            </summary>
            <param name="imageLockMode">锁定模式</param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.Unlock">
            <summary>
            解锁
            </summary>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.op_Equality(NetumScan.Core.UnsafeBitmap,NetumScan.Core.UnsafeBitmap)">
            <summary>
            实现运算符[==]
            </summary>
            <param name="bmp1"></param>
            <param name="bmp2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.op_Inequality(NetumScan.Core.UnsafeBitmap,NetumScan.Core.UnsafeBitmap)">
            <summary>
            实现运算符[!=]
            </summary>
            <param name="bmp1"></param>
            <param name="bmp2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.Equals(System.Object)">
            <summary>
            实现运算符[Equals]
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.GetHashCode">
            <summary>
            重写<see cref="M:NetumScan.Core.UnsafeBitmap.GetHashCode"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.Compare(NetumScan.Core.UnsafeBitmap,NetumScan.Core.UnsafeBitmap)">
            <summary>
            实现比较方法
            </summary>
            <param name="bmp1"></param>
            <param name="bmp2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.IsTransparent">
            <summary>
            是否为透明
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.GetPixel(System.Int32)">
            <summary>
            获取像素
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.GetPixel(System.Int32,System.Int32)">
            <summary>
            获取像素
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.SetPixel(System.Int32,NetumScan.Core.ColorBgra)">
            <summary>
            设置像素
            </summary>
            <param name="i"></param>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.SetPixel(System.Int32,System.UInt32)">
            <summary>
            设置像素
            </summary>
            <param name="i"></param>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.SetPixel(System.Int32,System.Int32,NetumScan.Core.ColorBgra)">
            <summary>
            设置像素
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.SetPixel(System.Int32,System.Int32,System.UInt32)">
            <summary>
            设置像素
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.ClearPixel(System.Int32)">
            <summary>
            清除像素
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.ClearPixel(System.Int32,System.Int32)">
            <summary>
            清除像素
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:NetumScan.Core.UnsafeBitmap.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:NetumScan.Core.Vector2">
            <summary>
            二维向量
            </summary>
        </member>
        <member name="P:NetumScan.Core.Vector2.X">
            <summary>
            X轴值
            </summary>
        </member>
        <member name="P:NetumScan.Core.Vector2.Y">
            <summary>
            Y轴值
            </summary>
        </member>
        <member name="F:NetumScan.Core.Vector2.Empty">
            <summary>
            空值
            </summary>
        </member>
        <member name="M:NetumScan.Core.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            构造函数
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:NetumScan.Core.Vector2.Equals(System.Object)">
            <summary>
            比较函数
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.GetHashCode">
            <summary>
            获取哈希代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Equality(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>
            实现运算符[==]
            </summary>
            <param name="u"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Inequality(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>
            实现运算符[!=]
            </summary>
            <param name="u"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Addition(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>
            实现运算符[+]
            </summary>
            <param name="u"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Subtraction(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>
            实现运算符[-]
            </summary>
            <param name="u"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Multiply(NetumScan.Core.Vector2,System.Single)">
            <summary>
            实现运算符[*]
            </summary>
            <param name="u"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Division(NetumScan.Core.Vector2,System.Single)">
            <summary>
            实现运算符[/]
            </summary>
            <param name="u"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_UnaryNegation(NetumScan.Core.Vector2)">
            <summary>
            实现运算符[-]
            </summary>
            <param name="u"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Explicit(NetumScan.Core.Vector2)~System.Drawing.Point">
            <summary>
            实现运算符[Point]
            </summary>
            <param name="u"></param>
        </member>
        <member name="M:NetumScan.Core.Vector2.op_Implicit(System.Drawing.Point)~NetumScan.Core.Vector2">
            <summary>
            实现强制转换
            </summary>
            <param name="p"></param>
        </member>
        <member name="T:NetumScan.Core.WindowState">
            <summary>
            窗口状态
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowState.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowState.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowState.IsMaximized">
            <summary>
            是否最大化
            </summary>
        </member>
        <member name="M:NetumScan.Core.WindowState.ApplyFormState(System.Windows.Forms.Form)">
            <summary>
            应用窗口状态
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:NetumScan.Core.WindowState.UpdateFormState(System.Windows.Forms.Form)">
            <summary>
            更新窗口状态
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:NetumScan.Core.WindowState.AutoHandleFormState(System.Windows.Forms.Form)">
            <summary>
            自动处理窗口状态
            </summary>
            <param name="form"></param>
        </member>
        <member name="T:NetumScan.Core.XmlColor">
            <summary>
            XML颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlColor.A">
            <summary>
            透明通道值
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlColor.R">
            <summary>
            红色通道值
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlColor.G">
            <summary>
            绿色通道值
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlColor.B">
            <summary>
            蓝色通道值
            </summary>
        </member>
        <member name="M:NetumScan.Core.XmlColor.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.XmlColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            构造函数
            </summary>
            <param name="r">红色通道值</param>
            <param name="g">绿色通道值</param>
            <param name="b">蓝色通道值</param>
        </member>
        <member name="M:NetumScan.Core.XmlColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            构造函数
            </summary>
            <param name="a">透明通道值</param>
            <param name="r">红色通道值</param>
            <param name="g">绿色通道值</param>
            <param name="b">蓝色通道值</param>
        </member>
        <member name="M:NetumScan.Core.XmlColor.#ctor(System.Drawing.Color)">
            <summary>
            构造函数
            </summary>
            <param name="color">颜色</param>
        </member>
        <member name="M:NetumScan.Core.XmlColor.ToColor">
            <summary>
            转换成<see cref="T:System.Drawing.Color"/>类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XmlColor.ToArgb">
            <summary>
            转换成Argb值
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XmlColor.ToString">
            <summary>
            重写<see cref="M:NetumScan.Core.XmlColor.ToString"/>方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XmlColor.op_Implicit(NetumScan.Core.XmlColor)~System.Drawing.Color">
            <summary>
            定义XmlColor->Color强制转换方法
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.XmlColor.op_Implicit(System.Drawing.Color)~NetumScan.Core.XmlColor">
            <summary>
            定义Color->XmlColor强制转换方法
            </summary>
            <param name="color"></param>
        </member>
        <member name="T:NetumScan.Core.XmlFont">
            <summary>
            XML字体
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlFont.FontFamily">
            <summary>
            字体名称
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlFont.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlFont.Style">
            <summary>
            字形
            </summary>
        </member>
        <member name="P:NetumScan.Core.XmlFont.GraphicsUnit">
            <summary>
            绘图度量单位
            </summary>
        </member>
        <member name="M:NetumScan.Core.XmlFont.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.XmlFont.#ctor(System.Drawing.Font)">
            <summary>
            构造函数
            </summary>
            <param name="font">字体</param>
        </member>
        <member name="M:NetumScan.Core.XmlFont.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            构造函数
            </summary>
            <param name="fontName">字体名称</param>
            <param name="fontSize">字体大小</param>
            <param name="fontStyle">字体字形</param>
        </member>
        <member name="M:NetumScan.Core.XmlFont.op_Implicit(NetumScan.Core.XmlFont)~System.Drawing.Font">
            <summary>
            自定义强制转换方法
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:NetumScan.Core.XmlFont.op_Implicit(System.Drawing.Font)~NetumScan.Core.XmlFont">
            <summary>
            自定义强制转换方法
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:NetumScan.Core.XmlFont.ToFont">
            <summary>
            转成<see cref="T:System.Drawing.Font"/>类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XmlFont.ToString">
            <summary>
            转换字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.CLICommand">
            <summary>
            CLI 命令
            </summary>
        </member>
        <member name="P:NetumScan.Core.CLICommand.Command">
            <summary>
            命令
            </summary>
        </member>
        <member name="P:NetumScan.Core.CLICommand.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:NetumScan.Core.CLICommand.IsCommand">
            <summary>
            以连字符[-]开头？
            </summary>
        </member>
        <member name="M:NetumScan.Core.CLICommand.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="command"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:NetumScan.Core.CLICommand.CheckCommand(System.String)">
            <summary>
            验证命令
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CLICommand.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns>命令字符串</returns>
        </member>
        <member name="T:NetumScan.Core.CLICommandAction">
            <summary>
            CLI 命令动作
            </summary>
        </member>
        <member name="F:NetumScan.Core.CLICommandAction.Commands">
            <summary>
            命令集合
            </summary>
        </member>
        <member name="F:NetumScan.Core.CLICommandAction.DefaultAction">
            <summary>
            默认动作
            </summary>
        </member>
        <member name="F:NetumScan.Core.CLICommandAction.TextAction">
            <summary>
            文本动作
            </summary>
        </member>
        <member name="F:NetumScan.Core.CLICommandAction.NumberAction">
            <summary>
            数字动作
            </summary>
        </member>
        <member name="M:NetumScan.Core.CLICommandAction.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="commands">命令集合</param>
        </member>
        <member name="M:NetumScan.Core.CLICommandAction.CheckCommands(System.Collections.Generic.List{NetumScan.Core.CLICommand})">
            <summary>
            验证执行命令
            </summary>
            <param name="commands">命令集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CLICommandAction.ExecuteAction(System.String)">
            <summary>
            执行动作
            </summary>
            <param name="parameter">命令参数</param>
        </member>
        <member name="T:NetumScan.Core.CLIManager">
            <summary>
            CLI 管理器
            </summary>
        </member>
        <member name="P:NetumScan.Core.CLIManager.Arguments">
            <summary>
            命令行集合
            </summary>
        </member>
        <member name="P:NetumScan.Core.CLIManager.Commands">
            <summary>
            命令集合
            </summary>
        </member>
        <member name="P:NetumScan.Core.CLIManager.Actions">
            <summary>
            动作集合
            </summary>
        </member>
        <member name="M:NetumScan.Core.CLIManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.CLIManager.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="arguments"></param>
        </member>
        <member name="M:NetumScan.Core.CLIManager.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="arguments"></param>
        </member>
        <member name="M:NetumScan.Core.CLIManager.ParseCommands">
            <summary>
            解析命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CLIManager.ParseCLI(System.String)">
            <summary>
             解析命令行
            </summary>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CLIManager.IsCommandExist(System.String[])">
            <summary>
            命令命令是否存在
            </summary>
            <param name="commands"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CLIManager.GetParameter(System.String)">
            <summary>
            获取命令参数
            </summary>
            <param name="command">命令行</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CLIManager.ExecuteActions">
            <summary>
            执行动作
            </summary>
        </member>
        <member name="M:NetumScan.Core.CLIManager.ToString">
            <summary>
            重新<see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ExternalCLIManager">
            <summary>
            外部CLI管理器
            </summary>
        </member>
        <member name="E:NetumScan.Core.ExternalCLIManager.OutputDataReceived">
            <summary>
            收到输出数据事件
            </summary>
        </member>
        <member name="E:NetumScan.Core.ExternalCLIManager.ErrorDataReceived">
            <summary>
            收到错位数据事件
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExternalCLIManager.IsProcessRunning">
            <summary>
            进程是否正在运行
            </summary>
        </member>
        <member name="F:NetumScan.Core.ExternalCLIManager.process">
            <summary>
            外部程序系统进程
            </summary>
        </member>
        <member name="M:NetumScan.Core.ExternalCLIManager.Open(System.String,System.String)">
            <summary>
            打开外部程序
            </summary>
            <param name="path">外部程序路径</param>
            <param name="args">命令行自变量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ExternalCLIManager.Cli_OutputDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            收到CLI输出数据
            </summary>
            <param name="sender">对象</param>
            <param name="e">参数</param>
        </member>
        <member name="M:NetumScan.Core.ExternalCLIManager.Cli_ErrorDataReceived(System.Object,System.Diagnostics.DataReceivedEventArgs)">
            <summary>
            收到CLI错误数据
            </summary>
            <param name="sender">对象</param>
            <param name="e">参数</param>
        </member>
        <member name="M:NetumScan.Core.ExternalCLIManager.WriteInput(System.String)">
            <summary>
            写入输入内容
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:NetumScan.Core.ExternalCLIManager.Close">
            <summary>
            关闭外部程序
            </summary>
        </member>
        <member name="M:NetumScan.Core.ExternalCLIManager.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:NetumScan.Core.SevenZipManager">
            <summary>
            7z管理器
            </summary>
        </member>
        <member name="P:NetumScan.Core.SevenZipManager.SevenZipPath">
            <summary>
            7z程序路径
            </summary>
        </member>
        <member name="M:NetumScan.Core.SevenZipManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.SevenZipManager.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sevenZipPath">程序路径</param>
        </member>
        <member name="M:NetumScan.Core.SevenZipManager.Extract(System.String,System.String)">
            <summary>
            提取
            </summary>
            <param name="archivePath">存档路径</param>
            <param name="destination">目标路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SevenZipManager.Extract(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            提取
            </summary>
            <param name="archivePath">存档路径</param>
            <param name="destination">目标路径</param>
            <param name="files">文件列表</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SevenZipManager.Compress(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            压缩
            </summary>
            <param name="archivePath">存档路径</param>
            <param name="files">文件列表</param>
            <param name="workingDirectory">工作目录</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.SevenZipManager.Run(System.String,System.String)">
            <summary>
            运行
            </summary>
            <param name="arguments">参数</param>
            <param name="workingDirectory">工作目录</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ZipEntryInfo">
            <summary>
            Zip入口信息
            </summary>
        </member>
        <member name="P:NetumScan.Core.ZipEntryInfo.EntryName">
            <summary>
            入口名称
            </summary>
        </member>
        <member name="P:NetumScan.Core.ZipEntryInfo.SourcePath">
            <summary>
            源路径
            </summary>
        </member>
        <member name="P:NetumScan.Core.ZipEntryInfo.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:NetumScan.Core.ZipEntryInfo.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sourcePath">源路径</param>
            <param name="entryName">入口名</param>
        </member>
        <member name="M:NetumScan.Core.ZipEntryInfo.#ctor(System.IO.Stream,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="data">数据</param>
            <param name="entryName">入口名</param>
        </member>
        <member name="T:NetumScan.Core.ZipManager">
            <summary>
            Zip管理器
            </summary>
        </member>
        <member name="M:NetumScan.Core.ZipManager.Extract(System.String,System.String,System.Boolean,System.Func{System.IO.Compression.ZipArchiveEntry,System.Boolean},System.Int64)">
            <summary>
            提取
            </summary>
            <param name="archivePath">存档路径</param>
            <param name="destination">目的地</param>
            <param name="retainDirectoryStructure">保留目录结构</param>
            <param name="filter">过滤器</param>
            <param name="maxUncompressedSize">最大未压缩大小</param>
        </member>
        <member name="M:NetumScan.Core.ZipManager.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
            <summary>
            提取到文件
            </summary>
            <param name="source">源文件</param>
            <param name="destinationFileName">目标文件名</param>
            <param name="overwrite">是否覆盖</param>
        </member>
        <member name="M:NetumScan.Core.ZipManager.Compress(System.String,System.String,System.IO.Compression.CompressionLevel)">
            <summary>
            压缩
            </summary>
            <param name="source">源文件</param>
            <param name="archivePath">存档路径</param>
            <param name="compression">目的地</param>
        </member>
        <member name="M:NetumScan.Core.ZipManager.Compress(System.String,System.Collections.Generic.List{NetumScan.Core.ZipEntryInfo},System.IO.Compression.CompressionLevel)">
            <summary>
            
            </summary>
            <param name="archivePath">存档路径</param>
            <param name="entries">加密信息</param>
            <param name="compression">压缩比例</param>
        </member>
        <member name="T:NetumScan.Core.Crc32">
            <summary>
            CRC32哈希加密
            </summary>
        </member>
        <member name="F:NetumScan.Core.Crc32.DefaultPolynomial">
            <summary>
            默认多项式
            </summary>
        </member>
        <member name="F:NetumScan.Core.Crc32.DefaultSeed">
            <summary>
            默认种子
            </summary>
        </member>
        <member name="M:NetumScan.Core.Crc32.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.Crc32.#ctor(System.UInt32,System.UInt32)">
            <summary>
            构造函数
            </summary>
            <param name="polynomial">多项式</param>
            <param name="seed">种子</param>
        </member>
        <member name="M:NetumScan.Core.Crc32.Initialize">
            <summary>
            初始化Hash
            </summary>
        </member>
        <member name="M:NetumScan.Core.Crc32.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            将写入对象的数据路由到哈希算法以计算哈希值
            </summary>
            <param name="buffer">要计算其哈希代码的输入。</param>
            <param name="start">字节数组中的偏移量，从该位置开始使用数据。</param>
            <param name="length">字节数组中用作数据的字节数。</param>
        </member>
        <member name="M:NetumScan.Core.Crc32.HashFinal">
            <summary>
            在加密流对象处理完最后的数据后完成哈希计算。
            </summary>
            <returns>计算所得的哈希代码。</returns>
        </member>
        <member name="P:NetumScan.Core.Crc32.HashSize">
            <summary>
            获取计算所得的哈希代码的大小（以位为单位）。
            </summary>
        </member>
        <member name="M:NetumScan.Core.Crc32.Compute(System.Byte[])">
            <summary>
            计算哈希值
            </summary>
            <param name="buffer">缓存内容</param>
            <returns>哈希值</returns>
        </member>
        <member name="M:NetumScan.Core.Crc32.Compute(System.UInt32,System.Byte[])">
            <summary>
            计算哈希值
            </summary>
            <param name="seed">种子</param>
            <param name="buffer">缓存内容</param>
            <returns>哈希值</returns>
        </member>
        <member name="M:NetumScan.Core.Crc32.Compute(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            计算哈希值
            </summary>
            <param name="polynomial">多项式</param>
            <param name="seed">种子</param>
            <param name="buffer">缓存内容</param>
            <returns>哈希值</returns>
        </member>
        <member name="M:NetumScan.Core.Crc32.InitializeTable(System.UInt32)">
            <summary>
            初始化表
            </summary>
            <param name="polynomial">多项式</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.DPAPI">
            <summary>
            数据保护API
            </summary>
        </member>
        <member name="M:NetumScan.Core.DPAPI.Encrypt(System.String,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            加密方法
            </summary>
            <param name="stringToEncrypt">要加密的字符串。</param>
            <param name="optionalEntropy">可选熵。</param>
            <param name="scope">范围。</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:NetumScan.Core.DPAPI.Encrypt(System.Byte[],System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            加密方法
            </summary>
            <param name="data">要加密的数据。</param>
            <param name="optionalEntropy">可选熵。</param>
            <param name="scope">范围。</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:NetumScan.Core.DPAPI.Encrypt(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <summary>
            加密方法
            </summary>
            <param name="data">要加密的数据。</param>
            <param name="optionalEntropy">可选熵。</param>
            <param name="scope">范围。</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:NetumScan.Core.DPAPI.Decrypt(System.String,System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            解密方法
            </summary>
            <param name="encryptedString">要解密的字符串。</param>
            <param name="optionalEntropy">可选熵。</param>
            <param name="scope">范围。</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:NetumScan.Core.DPAPI.Decrypt(System.Byte[],System.String,System.Security.Cryptography.DataProtectionScope)">
            <summary>
            解密方法
            </summary>
            <param name="encryptedData">要解密的数据。</param>
            <param name="optionalEntropy">可选熵。</param>
            <param name="scope">范围。</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:NetumScan.Core.DPAPI.Decrypt(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <summary>
            解密方法
            </summary>
            <param name="encryptedData">要解密的数据。</param>
            <param name="optionalEntropy">可选熵。</param>
            <param name="scope">范围。</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="T:NetumScan.Core.HashCheck">
            <summary>
            哈希检查
            </summary>
        </member>
        <member name="P:NetumScan.Core.HashCheck.IsWorking">
            <summary>
            是否正在工作
            </summary>
        </member>
        <member name="T:NetumScan.Core.HashCheck.ProgressChanged">
            <summary>
            进度改变委托
            </summary>
            <param name="progress"></param>
        </member>
        <member name="E:NetumScan.Core.HashCheck.FileCheckProgressChanged">
            <summary>
            文件检查进度改变事件
            </summary>
        </member>
        <member name="M:NetumScan.Core.HashCheck.Start(System.String,NetumScan.Core.HashType)">
            <summary>
            启动
            </summary>
            <param name="filePath">文件类型</param>
            <param name="hashType">哈希类型</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HashCheck.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="M:NetumScan.Core.HashCheck.HashCheckThread(System.String,NetumScan.Core.HashType,System.IProgress{System.Single},System.Threading.CancellationToken)">
            <summary>
            哈希检查线程方法
            </summary>
            <param name="filePath">文件路径</param>
            <param name="hashType">哈希类型</param>
            <param name="progress">处理进度</param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HashCheck.GetHashAlgorithm(NetumScan.Core.HashType)">
            <summary>
            获取哈希算法
            </summary>
            <param name="hashType"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.Translator">
            <summary>
            文本格式翻译
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.Text">
            <summary>
            UTF-8格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.Binary">
            <summary>
            2进制数据
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.BinaryText">
            <summary>
            2进制格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.Hexadecimal">
            <summary>
            16进制数据
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.HexadecimalText">
            <summary>
            16进制格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.ASCII">
            <summary>
            ASCII数据
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.ASCIIText">
            <summary>
            ASCII格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.Base64">
            <summary>
            Base64格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.CRC32">
            <summary>
            CRC32格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.MD5">
            <summary>
            MD5格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.SHA1">
            <summary>
            SHA1格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.SHA256">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.SHA384">
            <summary>
            SHA256格式字符串
            </summary>
        </member>
        <member name="P:NetumScan.Core.Translator.SHA512">
            <summary>
            SHA512格式字符串
            </summary>
        </member>
        <member name="M:NetumScan.Core.Translator.Clear">
            <summary>
            清楚记录
            </summary>
        </member>
        <member name="M:NetumScan.Core.Translator.EncodeText(System.String)">
            <summary>
            解析文本
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Translator.DecodeBinary(System.String)">
            <summary>
            解析二进制字符串
            </summary>
            <param name="binary"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Translator.DecodeHex(System.String)">
            <summary>
            解析HEX16进制字符串
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Translator.DecodeASCII(System.String)">
            <summary>
            解析ASCII字符串
            </summary>
            <param name="ascii"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Translator.DecodeBase64(System.String)">
            <summary>
            解析Base64字符串
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Translator.HashToString">
            <summary>
            哈希字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Translator.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns>字符串内容</returns>
        </member>
        <member name="T:NetumScan.Core.TranslatorHelper">
            <summary>
            转换帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.TextToBinary(System.String)">
            <summary>
            文本转换成二进制
            </summary>
            <param name="text">普通文本</param>
            <returns>二进制文本数组</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.TextToHexadecimal(System.String)">
            <summary>
            文本转换成16进制
            </summary>
            <param name="text">普通文本</param>
            <returns>16进制文本数据</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.TextToASCII(System.String)">
            <summary>
            文本转换成ASCII数据
            </summary>
            <param name="text">普通文本</param>
            <returns>ASCII数据</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.TextToBase64(System.String)">
            <summary>
            文本转换成Base6字符串
            </summary>
            <param name="text">普通文本</param>
            <returns>Base64字符串</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.TextToHash(System.String,NetumScan.Core.HashType,System.Boolean)">
            <summary>
            文本转换成哈希字符串
            </summary>
            <param name="text">普通文本</param>
            <param name="hashType">哈希类型</param>
            <param name="uppercase">是否大写</param>
            <returns>哈希字符串</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.BinaryToByte(System.String)">
            <summary>
            二进制字符串转换成byte类型数据
            </summary>
            <param name="binary">二进制字符串</param>
            <returns>byte类型数据</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.BinaryToText(System.String)">
            <summary>
            二进制字符串转换成普通文本
            </summary>
            <param name="binary">二进制字符串</param>
            <returns>普通文本</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.ByteToBinary(System.Byte)">
            <summary>
            byte数据转换成二进制字符串
            </summary>
            <param name="b">byte数据</param>
            <returns>二进制字符串</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.BytesToHexadecimal(System.Byte[])">
            <summary>
            byte数组转换成16进制字符串数组
            </summary>
            <param name="bytes">byte数组</param>
            <returns>16进制字符串数组</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.HexadecimalToByte(System.String)">
            <summary>
            16进制数据转换成Byte数据
            </summary>
            <param name="hex">16进制数据</param>
            <returns>Byte数据</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.HexadecimalToText(System.String)">
            <summary>
            16进制字符串转换成普通字符串
            </summary>
            <param name="hex">16进制字符串</param>
            <returns>普通字符串</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.Base64ToText(System.String)">
            <summary>
            Base64字符串转换成普通字符串
            </summary>
            <param name="base64">Base64字符串</param>
            <returns>普通字符串</returns>
        </member>
        <member name="M:NetumScan.Core.TranslatorHelper.ASCIIToText(System.String)">
            <summary>
            ASCii字符串转换成普通字符串
            </summary>
            <param name="ascii">ASCii字符串</param>
            <returns>普通字符串</returns>
        </member>
        <member name="T:NetumScan.Core.FileLastTimeComparer">
            <summary>
              文件夹中按时间排序最新的文件读取
            </summary>
        </member>
        <member name="M:NetumScan.Core.FileLastTimeComparer.Compare(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            比较版本
            </summary>
            <param name="x">文件1</param>
            <param name="y">文件2</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ControlExtensions">
            <summary>
            控件扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.InvokeText(System.Windows.Forms.Control,System.String)">
            <summary>
            调用文本
            </summary>
            <param name="control">控件</param>
            <param name="text">文本</param>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.InvokeColor(System.Windows.Forms.Control,System.Drawing.Color)">
            <summary>
            调用颜色
            </summary>
            <param name="control">控件</param>
            <param name="color">颜色</param>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.InvokeEnabled(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            调用启用状态
            </summary>
            <param name="control">控件</param>
            <param name="enabled">启用状态</param>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.InvokeVisible(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            调用显示状态
            </summary>
            <param name="control">用户控件</param>
            <param name="visible">显示状态</param>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.InvokeImage(System.Windows.Forms.PictureBox,System.Drawing.Image)">
            <summary>
            调用图像
            </summary>
            <param name="control">控件</param>
            <param name="image">图像</param>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.InvokeData(System.Windows.Forms.ListBox,System.String)">
            <summary>
            调用数据
            </summary>
            <param name="control">控件</param>
            <param name="text">文本</param>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.InvokeData(System.Windows.Forms.ListView,System.String[],System.Object,System.Object)">
            <summary>
            调用数据
            </summary>
            <param name="control">控件</param>
            <param name="values">值</param>
            <param name="backColor">背景颜色</param>
            <param name="foreColor">文字颜色</param>
        </member>
        <member name="M:NetumScan.Core.ControlExtensions.CanbeEmpty(System.Windows.Forms.DateTimePicker,System.DateTime)">
            <summary>
            时间选择控件值初始化为空值
            </summary>
            <param name="dtp"></param>
            <param name="value">时间值</param>
        </member>
        <member name="T:NetumScan.Core.ConvertExtensions">
            <summary>
            转换扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.StringToUnicode(System.String)">
            <summary>
            字符串转Unicode
            </summary>
            <param name="source">源字符串</param>
            <returns>Unicode编码后的字符串</returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.UnicodeToString(System.String)">
            <summary>
            Unicode转字符串
            </summary>
            <param name="source">经过Unicode编码的字符串</param>
            <returns>正常字符串</returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.DEC_to_BIN(System.Int64)">
            <summary>
            10进制转2进制
            </summary>
            <param name="Dec"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BIN_to_DEC(System.String)">
            <summary>
            2进制转10进制
            </summary>
            <param name="Bin"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.HEX_to_BIN(System.Int64)">
            <summary>
            16进制转2进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BIN_to_HEX(System.String)">
            <summary>
            2进制转16进制
            </summary>
            <param name="Bin"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.HEX_to_DEC(System.Int64)">
            <summary>
            16进制转10进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.HEX_to_DEC(System.String)">
            <summary>
            16进制转10进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.DEC_to_HEX(System.Int64)">
            <summary>
            10进制转16进制
            </summary>
            <param name="Dec"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.DEC_to_OCT(System.Int64)">
            <summary>
            16进制转8进制
            </summary>
            <param name="Dec"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.OCT_to_DEC(System.String)">
            <summary>
            8进制转10进制
            </summary>
            <param name="Oct"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BIN_to_OCT(System.String)">
            <summary>
            2进制转8进制
            </summary>
            <param name="Bin"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.OCT_to_BIN(System.String)">
            <summary>
            8进制转2进制
            </summary>
            <param name="Oct"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.OCT_to_HEX(System.String)">
            <summary>
            8进制转16进制
            </summary>
            <param name="Oct"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.HEX_to_OCT(System.String)">
            <summary>
            16进制转8进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BaseConvert(System.String,System.Byte,System.Byte)">
            <summary>
            进制转换
            </summary>
            <param name="input">需要转换的字符串</param>
            <param name="scrType">源字符的进制格式</param>
            <param name="dstType">目标字符的进制格式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BaseConvertFromBinary(System.String,System.Byte)">
            <summary>
            从二进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BaseConvertFromOctal(System.String,System.Byte)">
            <summary>
            从八进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BaseConvertFromDecimal(System.String,System.Int32)">
            <summary>
            从十进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertExtensions.BaseConvertFromHexadecimal(System.String,System.Int32)">
            <summary>
            从十六进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.EnumExtensions">
            <summary>
            枚举扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.GetDescription(System.Enum)">
            <summary>
            获取描述
            </summary>
            <param name="value">枚举值</param>
            <returns>枚举对应的描述</returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.GetLocalizedDescription(System.Enum)">
            <summary>
            获取本地化描述
            </summary>
            <param name="value">枚举值</param>
            <returns>枚举对应的描述</returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.GetLocalizedDescription(System.Enum,System.Resources.ResourceManager)">
            <summary>
            获取本地化描述
            </summary>
            <param name="value">枚举值</param>
            <param name="resourceManager">资源管理器</param>
            <returns>枚举对应的描述</returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.GetLocalizedCategory(System.Enum)">
            <summary>
            获取本地化类别
            </summary>
            <param name="value">枚举值</param>
            <returns>枚举对应的类别</returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.GetLocalizedCategory(System.Enum,System.Resources.ResourceManager)">
            <summary>
            获取本地化类别
            </summary>
            <param name="value">枚举值</param>
            <param name="resourceManager">资源管理器</param>
            <returns>枚举对应的类别</returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.GetIndex(System.Enum)">
            <summary>
            获取索引
            </summary>
            <param name="value">枚举值</param>
            <returns>索引值</returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.GetFlags``1(``0)">
            <summary>
            获取标志
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">枚举值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.HasFlag``1(System.Enum,``0[])">
            <summary>
            是否包含枚举
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="flags">枚举集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.HasFlagAny``1(System.Enum,``0[])">
            <summary>
            是否包含枚举
            </summary>
            <typeparam name="T">枚举类</typeparam>
            <param name="value">枚举值</param>
            <param name="flags">枚举集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.Add``1(System.Enum,``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="T">枚举类</typeparam>
            <param name="value">枚举值</param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.Remove``1(System.Enum,``0[])">
            <summary>
            移除
            </summary>
            <typeparam name="T">枚举类</typeparam>
            <param name="value">枚举值</param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.Swap``1(System.Enum,``0[])">
            <summary>
            交换
            </summary>
            <typeparam name="T">枚举类</typeparam>
            <param name="value">枚举值</param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.Next``1(System.Enum)">
            <summary>
            下一个枚举值
            </summary>
            <typeparam name="T">枚举类</typeparam>
            <param name="value">枚举值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumExtensions.Previous``1(System.Enum)">
            <summary>
            上一个枚举值
            </summary>
            <typeparam name="T">枚举类</typeparam>
            <param name="value">枚举值</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.Extensions">
            <summary>
            扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            循环执行动作
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="source">集合</param>
            <param name="action">动作</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.GetBytes(System.Drawing.Image)">
            <summary>
            获取图片的byte[]数据
            </summary>
            <param name="img">图片</param>
            <returns>数据</returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.GetStream(System.Drawing.Image)">
            <summary>
            获取图片的文件流数据
            </summary>
            <param name="img">图片</param>
            <returns>文件流数据</returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.GetCodecInfo(System.Drawing.Imaging.ImageFormat)">
            <summary>
            获取图片文件格式的图像编码器信息
            </summary>
            <param name="format">图片文件格式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.GetMimeType(System.Drawing.Imaging.ImageFormat)">
            <summary>
            获取图片文件格式对应编码解码器的多用途网际邮件扩充协议 (MIME) 类型的字符串。
            </summary>
            <param name="format">图片文件格式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.IsValidIndex``1(``0[],System.Int32)">
            <summary>
            是否有效索引
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="array">对象数组</param>
            <param name="index">索引值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.IsValidIndex``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            是否有效索引
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="list">对象列表</param>
            <param name="index">索引值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ReturnIfValidIndex``1(``0[],System.Int32)">
            <summary>
            获取有效索引对象
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="array">对象集合</param>
            <param name="index">索引值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ReturnIfValidIndex``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            获取有效索引对象
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="list">对象集合</param>
            <param name="index">索引值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Last``1(``0[],System.Int32)">
            <summary>
            获取有效索引上一个对象
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="array">对象数组</param>
            <param name="index">索引值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Last``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            获取有效索引上一个对象
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="list">对象列表</param>
            <param name="index">索引值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToDouble(System.Version)">
            <summary>
            转换成Double类型的值
            </summary>
            <param name="value">版本号</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.IsValid(System.Drawing.Rectangle)">
            <summary>
            矩形是否有效
            </summary>
            <param name="rect">矩形</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Add(System.Drawing.Point,System.Int32)">
            <summary>
            增加偏移量
            </summary>
            <param name="point">点</param>
            <param name="offset">偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Add(System.Drawing.Point,System.Int32,System.Int32)">
            <summary>
            增加偏移量
            </summary>
            <param name="point">点</param>
            <param name="offsetX">X轴偏移量</param>
            <param name="offsetY">Y轴偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Add(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            增加偏移量
            </summary>
            <param name="point">点</param>
            <param name="offset">偏移量点</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Offset(System.Drawing.Size,System.Int32)">
            <summary>
            偏移
            </summary>
            <param name="size">大小</param>
            <param name="offset">偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Offset(System.Drawing.Size,System.Int32,System.Int32)">
            <summary>
            偏移
            </summary>
            <param name="size">大小</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Offset(System.Drawing.Rectangle,System.Int32)">
            <summary>
            定位偏移
            </summary>
            <param name="rect">矩形</param>
            <param name="offset">偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.LocationOffset(System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            定位偏移
            </summary>
            <param name="rect">矩形</param>
            <param name="x">x轴偏移量</param>
            <param name="y">y轴偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.LocationOffset(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            定位偏移
            </summary>
            <param name="rect">矩形</param>
            <param name="offset">偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.LocationOffset(System.Drawing.Rectangle,System.Int32)">
            <summary>
            定位偏移
            </summary>
            <param name="rect">矩形</param>
            <param name="offset">偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.SizeOffset(System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            大小偏移
            </summary>
            <param name="rect">矩形</param>
            <param name="width">宽度偏移量</param>
            <param name="height">高度偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.SizeOffset(System.Drawing.Rectangle,System.Int32)">
            <summary>
            大小偏移
            </summary>
            <param name="rect">矩形</param>
            <param name="offset">偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Join``1(``0[],System.String)">
            <summary>
            加入指定字符串
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="array">对象数组</param>
            <param name="separator">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.BeginUpdate(System.Windows.Forms.RichTextBox)">
            <summary>
            开始更新
            </summary>
            <param name="rtb">控件</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.EndUpdate(System.Windows.Forms.RichTextBox)">
            <summary>
            停止更新
            </summary>
            <param name="rtb">控件</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.AddContextMenu(System.Windows.Forms.RichTextBox)">
            <summary>
            添加上下文菜单
            </summary>
            <param name="rtb">控件</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.SupportSelectAll(System.Windows.Forms.TextBox)">
            <summary>
            支持全选
            </summary>
            <param name="tb">控件</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToUnix(System.DateTime)">
            <summary>
            转换成Unix格式
            </summary>
            <param name="dateTime">日期时间</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.AppendTextToSelection(System.Windows.Forms.TextBoxBase,System.String)">
            <summary>
            在指定位置追加文字
            </summary>
            <param name="tb">控件</param>
            <param name="text">文字</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.RadioCheck(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            选择控件
            </summary>
            <param name="tsmi">菜单项</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.RadioCheck(System.Windows.Forms.ToolStripButton)">
            <summary>
            选择控件
            </summary>
            <param name="tsb">按钮项</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.UpdateCheckedAll(System.Windows.Forms.ToolStripMenuItem,System.Boolean)">
            <summary>
            更新所有子项的选中状态
            </summary>
            <param name="tsmi">菜单项</param>
            <param name="check">状态值</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.InvokeSafe(System.Windows.Forms.Control,System.Action)">
            <summary>
            安全调用
            </summary>
            <param name="control">控件</param>
            <param name="action">动作</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.ForceActivate(System.Windows.Forms.Form)">
            <summary>
            强制激活
            </summary>
            <param name="form">窗体</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.WeekOfYear(System.DateTime)">
            <summary>
            获取一年中的那个星期
            </summary>
            <param name="dateTime">日期时间</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToIcon(System.Drawing.Bitmap)">
            <summary>
            转换成图标
            </summary>
            <param name="bmp">图片</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.DisposeHandle(System.Drawing.Icon)">
            <summary>
            释放句柄
            </summary>
            <param name="icon">图标</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.ApplyDefaultPropertyValues(System.Object)">
            <summary>
            应用默认属性值
            </summary>
            <param name="self">对象</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.MoveUp(System.Windows.Forms.ListViewItem)">
            <summary>
            上移项
            </summary>
            <param name="lvi">ListView项</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.MoveDown(System.Windows.Forms.ListViewItem)">
            <summary>
            下移项
            </summary>
            <param name="lvi">ListView项</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.CreateEmptyBitmap(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            创建空图片
            </summary>
            <param name="img">图片</param>
            <param name="widthOffset">宽度偏移量</param>
            <param name="heightOffset">高度偏移量</param>
            <param name="pixelFormat">颜色的数据格式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.CreateEmptyBitmap(System.Drawing.Image,System.Drawing.Imaging.PixelFormat)">
            <summary>
            创建空白图片
            </summary>
            <param name="img">图片</param>
            <param name="pixelFormat">图像的数据格式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.GetDescription(System.Type)">
            <summary>
            获取描述
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            反序指定数量的元素
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="source">集合</param>
            <param name="count">指定数量
            </param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Check(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            选择
            </summary>
            <param name="tsmi">可选选项</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.Normalize(System.Version)">
            <summary>
            规范化
            </summary>
            <param name="version">版本号</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Move``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
            <summary>
            移动
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="list">集合</param>
            <param name="oldIndex">旧索引</param>
            <param name="newIndex">新索引</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.SetWatermark(System.Windows.Forms.TextBox,System.String,System.Boolean)">
            <summary>
            设置水印
            </summary>
            <param name="textBox">文本控件</param>
            <param name="watermarkText">水印文本</param>
            <param name="showCueWhenFocus">聚焦是显示</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.HideImageMargin(System.Windows.Forms.ToolStripDropDownItem)">
            <summary>
            隐藏图像显示
            </summary>
            <param name="tsddi"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.DisableMenuCloseOnClick(System.Windows.Forms.ToolStripDropDownItem)">
            <summary>
            禁用菜单单击关闭
            </summary>
            <param name="tsddi">菜单项</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.DisableMenuCloseOnClick_DropDown_Closing(System.Object,System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            禁用菜单单击关闭
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.SetValue(System.Windows.Forms.NumericUpDown,System.Decimal)">
            <summary>
            设定值
            </summary>
            <param name="nud">控件</param>
            <param name="number">数值</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.SetValue(System.Windows.Forms.TrackBar,System.Int32)">
            <summary>
            设定值
            </summary>
            <param name="tb">控件</param>
            <param name="number">数值</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.IsValidImage(System.Windows.Forms.PictureBox)">
            <summary>
            是否为有效图片
            </summary>
            <param name="pb"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.IgnoreSeparatorClick(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            忽略分隔符单击
            </summary>
            <param name="cms">菜单控件</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.Combine(System.Collections.Generic.IEnumerable{System.Drawing.Rectangle})">
            <summary>
            获取交集的矩形
            </summary>
            <param name="rects">矩形集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.AddPoint(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            添加点
            </summary>
            <param name="rect">矩形</param>
            <param name="point">点坐标</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.CreateRectangle(System.Collections.Generic.IEnumerable{System.Drawing.Point})">
            <summary>
            创建矩形
            </summary>
            <param name="points">点集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Center(System.Drawing.Rectangle)">
            <summary>
            获取矩形中间点
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Area(System.Drawing.Rectangle)">
            <summary>
            获取矩形面积
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Perimeter(System.Drawing.Rectangle)">
            <summary>
            获取矩形周长
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Restrict(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            获取矩形内的点
            </summary>
            <param name="point"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.RefreshItems(System.Windows.Forms.ComboBox)">
            <summary>
            刷新选项集合
            </summary>
            <param name="cb"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.AutoSizeDropDown(System.Windows.Forms.ComboBox)">
            <summary>
            自动调整下拉列表大小
            </summary>
            <param name="cb">控件</param>
        </member>
        <member name="M:NetumScan.Core.Extensions.RefreshItem(System.Windows.Forms.ListBox,System.Int32)">
            <summary>
            刷新项集合
            </summary>
            <param name="lb"></param>
            <param name="index"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.RefreshSelectedItem(System.Windows.Forms.ListBox)">
            <summary>
            刷新选中项
            </summary>
            <param name="lb"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.RefreshItems(System.Windows.Forms.ListBox)">
            <summary>
            刷新项集合
            </summary>
            <param name="lb"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.ShowError(System.Exception,System.Boolean)">
            <summary>
            显示错误
            </summary>
            <param name="e"></param>
            <param name="fullError"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.ContinueInCurrentContext(System.Threading.Tasks.Task,System.Action)">
            <summary>
            创建当前任务的后续任务
            </summary>
            <param name="task"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.DoubleBuffered(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            双缓冲
            </summary>
            <param name="dgv"></param>
            <param name="value"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.AppendLine(System.Windows.Forms.RichTextBox,System.String)">
            <summary>
            向文本框的当前文本追加文本和换行字符串
            </summary>
            <param name="rtb"></param>
            <param name="value"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.SetFontRegular(System.Windows.Forms.RichTextBox)">
            <summary>
            设置字体和字形
            </summary>
            <param name="rtb"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.SetFontBold(System.Windows.Forms.RichTextBox)">
            <summary>
            设置字体和字形
            </summary>
            <param name="rtb"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.SupportCustomTheme(System.Windows.Forms.ListView)">
            <summary>
            支持自定义主题
            </summary>
            <param name="lv"></param>
        </member>
        <member name="M:NetumScan.Core.Extensions.Range``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
            <summary>
            获取指定开始索引和结束索引的项集合
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="source">源列表</param>
            <param name="start">开始索引</param>
            <param name="end">结束索引</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Range``1(System.Collections.Generic.List{``0},``0,``0)">
            <summary>
            获取指定开始项和结束项的项集合
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="source">源列表</param>
            <param name="start">开始项</param>
            <param name="end">结束项</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.CloneSafe``1(``0)">
            <summary>
            安全复制
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.All(System.Windows.Forms.TreeNodeCollection)">
            <summary>
            全部
            </summary>
            <param name="nodes"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.IsTransparent(System.Drawing.Color)">
            <summary>
            是否为透明
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToStringProper(System.Drawing.Rectangle)">
            <summary>
            字符串说明
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToDefaultString(System.String[],System.Char)">
            <summary>
            转换成默认格式字符串
            </summary>
            <param name="buffer">缓存</param>
            <param name="spacer">分割字符</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToDefaultString(System.Byte[])">
            <summary>
            转换成默认格式字符串
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToUTF8String(System.Byte[])">
            <summary>
            转换成UTF8格式字符串
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ToUTF16String(System.Byte[])">
            <summary>
            转换成UTF16格式字符串
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.ImageToBase64String(System.Drawing.Image)">
            <summary>
            获取Image的Base64编码字符串
            </summary>
            <param name="img">图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Extensions.Base64StringToImage(System.String)">
            <summary>
            将Base64字符串转换为图片
            </summary>
            <param name="base64">base64字符串</param>        
        </member>
        <member name="T:NetumScan.Core.GraphicsExtensions">
            <summary>
            绘图扩张
            </summary>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawRectangleProper(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            绘制矩形
            </summary>
            <param name="g">绘图画面</param>
            <param name="pen">画笔</param>
            <param name="rect">矩形</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawRectangleProper(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制矩形
            </summary>
            <param name="g">绘图画面</param>
            <param name="pen">画笔</param>
            <param name="x">位置X坐标</param>
            <param name="y">位置Y坐标</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawRectangleShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Padding)">
            <summary>
            绘制带阴影矩形
            </summary>
            <param name="g">绘图画面</param>
            <param name="rect">矩形区域</param>
            <param name="shadowColor">阴影颜色</param>
            <param name="shadowDepth">阴影深度</param>
            <param name="shadowMaxAlpha">阴影最大Alpha</param>
            <param name="shadowMinAlpha">阴影最小Alpha</param>
            <param name="shadowDirection">阴影方向</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle,System.Single)">
            <summary>
            绘制圆角矩形
            </summary>
            <param name="g">绘图画面</param>
            <param name="pen">画笔</param>
            <param name="rect">矩形</param>
            <param name="radius">圆角半径</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle,System.Single)">
            <summary>
            绘制圆角矩形
            </summary>
            <param name="g">绘图画面</param>
            <param name="brush">笔刷</param>
            <param name="rect">矩形</param>
            <param name="radius">圆角半径</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Rectangle,System.Single)">
            <summary>
            绘制圆角矩形
            </summary>
            <param name="g">绘图画面</param>
            <param name="brush">笔刷</param>
            <param name="pen">画笔</param>
            <param name="rect">矩形区域</param>
            <param name="radius">圆角半径</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawCapsule(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            绘制椭圆形状
            </summary>
            <param name="g">绘图画面</param>
            <param name="brush">笔刷</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            绘制圆角矩形
            </summary>
            <param name="g">绘图画面</param>
            <param name="brush">笔刷</param>
            <param name="pen">画笔</param>
            <param name="x">位置X坐标点</param>
            <param name="y">位置Y坐标点</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="radius">圆角半径</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawDiamond(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            绘制菱形
            </summary>
            <param name="g">绘图画面</param>
            <param name="pen">画笔</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawCross(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Point,System.Int32)">
            <summary>
            绘制十字线
            </summary>
            <param name="g">绘图画面</param>
            <param name="pen">画笔</param>
            <param name="center">相交点</param>
            <param name="crossSize">十字线长度</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawCrossRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            根据矩形区域绘制十字线
            </summary>
            <param name="g">绘图画面</param>
            <param name="pen">画笔</param>
            <param name="rect">矩形区域</param>
            <param name="crossSize">十字线大小</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawCornerLines(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32)">
            <summary>
            绘制拐角线
            </summary>
            <param name="g">绘图画面</param>
            <param name="rect">矩形区域</param>
            <param name="pen">画笔</param>
            <param name="lineSize">线大小</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.SetHighQuality(System.Drawing.Graphics)">
            <summary>
            设置高质量
            </summary>
            <param name="g">绘图画面</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawTextWithOutline(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            绘制带轮廓的文本
            </summary>
            <param name="g">绘图画面</param>
            <param name="text">文本内容</param>
            <param name="position">位置</param>
            <param name="font">字体</param>
            <param name="textColor">文本颜色</param>
            <param name="borderColor">边框颜色</param>
            <param name="borderSize">边框大小</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawTextWithShadow(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush)">
            <summary>
            绘制带阴影的文本
            </summary>
            <param name="g">绘图画面</param>
            <param name="text">文本内容</param>
            <param name="position">位置</param>
            <param name="font">字体</param>
            <param name="textBrush">文本笔刷</param>
            <param name="shadowBrush">阴影笔刷</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsExtensions.DrawTextWithShadow(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Point)">
            <summary>
            绘制带阴影的文本
            </summary>
            <param name="g">绘图画面</param>
            <param name="text">文本内容</param>
            <param name="position">位置</param>
            <param name="font">字体</param>
            <param name="textBrush">文本笔刷</param>
            <param name="shadowBrush">阴影笔刷</param>
            <param name="shadowOffset">阴影偏移</param>
        </member>
        <member name="T:NetumScan.Core.GraphicsPathExtensions">
            <summary>
            绘图路径扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.GraphicsPathExtensions.AddRectangleProper(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single)">
            <summary>
            添加矩形
            </summary>
            <param name="graphicsPath">绘图路径</param>
            <param name="rect">矩形</param>
            <param name="penWidth">画笔大小</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsPathExtensions.AddRoundedRectangleProper(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            添加圆角矩形
            </summary>
            <param name="graphicsPath">绘图路径</param>
            <param name="rect">矩形</param>
            <param name="radius">圆角半径</param>
            <param name="penWidth">画笔宽度</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsPathExtensions.AddRoundedRectangle(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single)">
            <summary>
            添加圆角矩形
            </summary>
            <param name="gp">绘图路径</param>
            <param name="rect">矩形</param>
            <param name="radius">圆角半径</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsPathExtensions.AddCapsule(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF)">
            <summary>
            添加椭圆形
            </summary>
            <param name="gp">绘图路径</param>
            <param name="rect">矩形</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsPathExtensions.AddDiamond(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF)">
            <summary>
            添加菱形
            </summary>
            <param name="graphicsPath">绘图路径</param>
            <param name="rect">矩形</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsPathExtensions.AddPolygon(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Int32)">
            <summary>
            添加多边形
            </summary>
            <param name="graphicsPath">绘图路径</param>
            <param name="rect">矩形</param>
            <param name="sideCount">坐标点数量</param>
        </member>
        <member name="M:NetumScan.Core.GraphicsPathExtensions.WindingModeOutline(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            缠绕模式轮廓
            </summary>
            <param name="graphicsPath">绘图路径</param>
        </member>
        <member name="T:NetumScan.Core.NumberExtensions">
            <summary>
            数字扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.Min``1(``0,``0)">
            <summary>
            获取最小值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num"></param>
            <param name="min"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.Max``1(``0,``0)">
            <summary>
            获取最大值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.Clamp``1(``0,``0,``0)">
            <summary>
            获取中间值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.IsBetween``1(``0,``0,``0)">
            <summary>
            是否为中间值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.BetweenOrDefault``1(``0,``0,``0,``0)">
            <summary>
            获取中间值或者默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            重映射
            </summary>
            <param name="value"></param>
            <param name="from1"></param>
            <param name="to1"></param>
            <param name="from2"></param>
            <param name="to2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.IsEvenNumber(System.Int32)">
            <summary>
            是否为偶数
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.IsOddNumber(System.Int32)">
            <summary>
            是否为奇数
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.ToSizeString(System.Int64,System.Boolean,System.Int32)">
            <summary>
            获取大小字符串
            </summary>
            <param name="size"></param>
            <param name="binary"></param>
            <param name="decimalPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.ToDecimalString(System.Double,System.Int32)">
            <summary>
            获取十进制字符串
            </summary>
            <param name="number"></param>
            <param name="decimalPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NumberExtensions.ToBase(System.Int32,System.Int32,System.String)">
            <summary>
            获取指定格式字符串
            </summary>
            <param name="value"></param>
            <param name="radix"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ObjectExtensions">
            <summary>
            对象扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.ObjectExtensions.IsPrimitive(System.Type)">
            <summary>
            是否为值类型或者基元类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ObjectExtensions.Copy(System.Object)">
            <summary>
            复制
            </summary>
            <param name="originalObject"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ObjectExtensions.InternalCopy(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
            内部复制
            </summary>
            <param name="originalObject"></param>
            <param name="visited"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ObjectExtensions.RecursiveCopyBaseTypePrivateFields(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},System.Object,System.Type)">
            <summary>
            递归复制基类型专用字段
            </summary>
            <param name="originalObject"></param>
            <param name="visited"></param>
            <param name="cloneObject"></param>
            <param name="typeToReflect"></param>
        </member>
        <member name="M:NetumScan.Core.ObjectExtensions.CopyFields(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},System.Object,System.Type,System.Reflection.BindingFlags,System.Func{System.Reflection.FieldInfo,System.Boolean})">
            <summary>
            复制字段
            </summary>
            <param name="originalObject"></param>
            <param name="visited"></param>
            <param name="cloneObject"></param>
            <param name="typeToReflect"></param>
            <param name="bindingFlags"></param>
            <param name="filter"></param>
        </member>
        <member name="M:NetumScan.Core.ObjectExtensions.Copy``1(``0)">
            <summary>
            复制
            </summary>
            <typeparam name="T"></typeparam>
            <param name="original"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ReferenceEqualityComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ReferenceEqualityComparer.Equals(System.Object,System.Object)">
            <summary>
            比较
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ReferenceEqualityComparer.GetHashCode(System.Object)">
            <summary>
            获取哈希代码
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ArrayExtensions">
            <summary>
            数组扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.ArrayExtensions.ForEach(System.Array,System.Action{System.Array,System.Int32[]})">
            <summary>
            循环执行
            </summary>
            <param name="array"></param>
            <param name="action"></param>
        </member>
        <member name="M:NetumScan.Core.ArrayExtensions.HexByteArrayToString(System.Byte[],System.Char)">
            <summary>
            字节数组转为十六进制字符串
            </summary>
            <param name="data"></param>
            <param name="intervalChar"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ArrayExtensions.Reverse(System.Byte[])">
            <summary>
            将byte[]中的数据反转顺序
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ArrayExtensions.HexStringToHexByte(System.String)">
            <summary>
            将转换完的16进制字符串转换成16进制byte数组
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ArrayExtensions.TakeInverseByte(System.Byte)">
            <summary>
            对byte进行取反
            </summary>
            <param name="m_Byte"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ArrayTraverse">
            <summary>
            数组遍历
            </summary>
        </member>
        <member name="F:NetumScan.Core.ArrayTraverse.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="M:NetumScan.Core.ArrayTraverse.#ctor(System.Array)">
            <summary>
            构造函数
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:NetumScan.Core.ArrayTraverse.Step">
            <summary>
            一步执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.StreamExtensions">
            <summary>
            数据流扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.CopyStreamTo(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            复制数据流至
            </summary>
            <param name="fromStream">源数据流</param>
            <param name="toStream">目标数据流</param>
            <param name="bufferSize">缓存大小</param>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.CopyStreamTo(System.IO.Stream,System.IO.Stream,System.Int32,System.Int32,System.Int32)">
            <summary>
            复制数据流至
            </summary>
            <param name="fromStream">源数据流</param>
            <param name="toStream">目标数据流</param>
            <param name="offset">偏移量</param>
            <param name="length">长度</param>
            <param name="bufferSize">缓存大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.CopyStreamTo64(System.IO.FileStream,System.IO.Stream,System.Int64,System.Int32,System.Int32)">
            <summary>
            复制数据流至
            </summary>
            <param name="fromStream">源数据流</param>
            <param name="toStream">目标数据流</param>
            <param name="offset">偏移量</param>
            <param name="length">长度</param>
            <param name="bufferSize">缓存大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.WriteToFile(System.IO.Stream,System.String)">
            <summary>
            写入到文件
            </summary>
            <param name="stream">数据流</param>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.GetBytes(System.IO.Stream)">
            <summary>
            获取Byte数组
            </summary>
            <param name="stream">数据流</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.GetBytes(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            获取Byte数组
            </summary>
            <param name="stream">数据量</param>
            <param name="offset">偏移量</param>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.Read``1(System.IO.Stream)">
            <summary>
            读取
            </summary>
            <typeparam name="T">泛型类</typeparam>
            <param name="stream">数据量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StreamExtensions.Write(System.IO.FileStream,System.Byte[])">
            <summary>
            写入
            </summary>
            <param name="stream">数据流</param>
            <param name="array">byte[]数据</param>
        </member>
        <member name="T:NetumScan.Core.StringExtensions">
            <summary>
            字符串扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            是否包含
            </summary>
            <param name="str">字符串</param>
            <param name="value">待验证包含的字符串</param>
            <param name="comparisonType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            从左侧截取指定长度字符串
            </summary>
            <param name="str">字符串</param>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            从右侧截取指定长度字符串
            </summary>
            <param name="str">字符串</param>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.RemoveLeft(System.String,System.Int32)">
            <summary>
            从左侧移除指定长度字符串
            </summary>
            <param name="str">字符串</param>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.RemoveRight(System.String,System.Int32)">
            <summary>
            从右侧移除指定长度字符串
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Between(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            保留指定位置的字符串
            </summary>
            <param name="text">字符串</param>
            <param name="first">开始内容</param>
            <param name="last">结束内容</param>
            <param name="isFirstMatchForEnd">是否包含内容</param>
            <param name="includeFirstAndLast">jie'shu'r</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Repeat(System.String,System.Int32)">
            <summary>
            重复
            </summary>
            <param name="str">字符串</param>
            <param name="count">重复次数</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            代替
            </summary>
            <param name="str">字符串</param>
            <param name="oldValue">旧内容</param>
            <param name="newValue">新内容</param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.ReplaceWith(System.String,System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            代替
            </summary>
            <param name="str">字符串</param>
            <param name="search">查询内容</param>
            <param name="replace">代替内容</param>
            <param name="occurrence">代替次数</param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.ReplaceFirst(System.String,System.String,System.String,System.String@)">
            <summary>
            代替首个匹配内容
            </summary>
            <param name="text">字符串</param>
            <param name="search">代替内容</param>
            <param name="replace">新内容</param>
            <param name="result">结果</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.ReplaceAll(System.String,System.String,System.Func{System.String})">
            <summary>
            替换全部
            </summary>
            <param name="text">字符串</param>
            <param name="search">查找内容</param>
            <param name="replace">替换内容方法</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.BatchReplace(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            批量替换
            </summary>
            <param name="text">字符串</param>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.RemoveWhiteSpaces(System.String)">
            <summary>
            删除空白
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Reverse(System.String)">
            <summary>
            反转
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            截断
            </summary>
            <param name="str">字符串</param>
            <param name="maxLength">最大长度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Truncate(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            截断
            </summary>
            <param name="str">字符串</param>
            <param name="maxLength">最大长度</param>
            <param name="endings">替换内容</param>
            <param name="truncateFromRight">是否从右边替换</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.HexToBytes(System.String)">
            <summary>
            16进制转Byte数组
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.ParseQuoteString(System.String)">
            <summary>
            解析双引号字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.IsNumber(System.String)">
            <summary>
            是否为数字
            </summary>
            <param name="text">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.Lines(System.String)">
            <summary>
            获取行数据集合
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.ForEachBetween(System.String,System.String,System.String)">
            <summary>
            对每个数据截取中间
            </summary>
            <param name="text"></param>
            <param name="front"></param>
            <param name="back"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.FromBase(System.String,System.Int32,System.String)">
            <summary>
            从基类
            </summary>
            <param name="text"></param>
            <param name="radix"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.ToBase(System.String,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            到基类
            </summary>
            <param name="text"></param>
            <param name="fromRadix"></param>
            <param name="fromDigits"></param>
            <param name="toRadix"></param>
            <param name="toDigits"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.ToBase(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            到基类
            </summary>
            <param name="text"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.PadCenter(System.String,System.Int32,System.Char)">
            <summary>
            返回一个新字符串，该字符串通过在此字符串中的字符右侧填充指定的 Unicode 字符来达到指定的总长度，从而使这些字符居中对齐。
            </summary>
            <param name="str"></param>
            <param name="totalWidth"></param>
            <param name="paddingChar"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.StringToUnicode(System.String)">
            <summary>
            字符串转Unicode
            </summary>
            <param name="source">源字符串</param>
            <returns>Unicode编码后的字符串</returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.UnicodeToString(System.String)">
            <summary>
            Unicode转字符串
            </summary>
            <param name="source">经过Unicode编码的字符串</param>
            <returns>正常字符串</returns>
        </member>
        <member name="M:NetumScan.Core.StringExtensions.StringToHexByteArray(System.String)">
            <summary>
            十六进制字符串转为字节数组
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.XMLExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetNode(System.Xml.Linq.XContainer,System.String)">
            <summary>
            获取节点
            </summary>
            <param name="element">父节点</param>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetNodes(System.Xml.Linq.XContainer,System.String)">
            <summary>
            获取节点集合
            </summary>
            <param name="element">父节点</param>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetValue(System.Xml.Linq.XContainer,System.String,System.String)">
            <summary>
            获取值
            </summary>
            <param name="element">父节点</param>
            <param name="path">路径</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetElement(System.Xml.Linq.XElement,System.String[])">
            <summary>
            获取要素[包含子节点的节点]
            </summary>
            <param name="xe">XML元素</param>
            <param name="elements">要素集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetElement(System.Xml.Linq.XDocument,System.String[])">
            <summary>
            获取要素[包含子节点的节点]
            </summary>
            <param name="xd">XML元素</param>
            <param name="elements">要素集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetElementValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
            <summary>
            获取要素值
            </summary>
            <param name="xe">XML元素</param>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetAttributeValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            获取字段值
            </summary>
            <param name="xe">XML元素</param>
            <param name="name">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.GetAttributeFirstValue(System.Xml.Linq.XElement,System.String[])">
            <summary>
            获取首个字段值
            </summary>
            <param name="xe">XML元素</param>
            <param name="names">名称集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.AppendElement(System.Xml.XmlNode,System.String)">
            <summary>
            追加要素
            </summary>
            <param name="parent">XML节点</param>
            <param name="tagName">追加名称</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.AppendElement(System.Xml.XmlNode,System.String,System.String,System.Boolean)">
            <summary>
            追加要素
            </summary>
            <param name="parent">父节点</param>
            <param name="tagName">要素名称</param>
            <param name="textContent">文本内容</param>
            <param name="checkTextContent">验证文本内容</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.PrependElement(System.Xml.XmlNode,System.String)">
            <summary>
            前置元素
            </summary>
            <param name="parent">父节点</param>
            <param name="tagName">标签名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.PrependElement(System.Xml.XmlNode,System.String,System.String,System.Boolean)">
            <summary>
            前置元素
            </summary>
            <param name="parent">父节点</param>
            <param name="tagName">标签名</param>
            <param name="textContent">文本内容</param>
            <param name="checkTextContent">是否验证文本内容</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.XMLExtensions.WriteElementIfNotEmpty(System.Xml.XmlTextWriter,System.String,System.String)">
            <summary>
            如何不为空则写入元素
            </summary>
            <param name="writer"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="T:NetumScan.Core.CaptureHelpers">
            <summary>
            捕获帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetScreenBounds">
            <summary>
            获取屏幕边界
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetScreenWorkingArea">
            <summary>
            获取屏幕工作区域
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetScreenBounds2">
            <summary>
            获取屏幕边界2
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetScreenBounds3">
            <summary>
            获取屏幕边界3
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetScreenBounds4">
            <summary>
            获取屏幕边界4
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetActiveScreenBounds">
            <summary>
            获取活动屏幕边界
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetActiveScreenWorkingArea">
            <summary>
            获取活动屏幕工作区域
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetPrimaryScreenBounds">
            <summary>
            获取主屏幕边界
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetScreenBounds0Based">
            <summary>
            获取基于0的屏幕边界
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetActiveScreenBounds0Based">
            <summary>
            获取基于0的活动屏幕边界
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetPrimaryScreenBounds0Based">
            <summary>
            获取基于0的主屏幕边界
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.ScreenToClient(System.Drawing.Point)">
            <summary>
            屏幕到客户端
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.ScreenToClient(System.Drawing.Rectangle)">
            <summary>
            屏幕到客户端
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.ClientToScreen(System.Drawing.Point)">
            <summary>
            客户端到屏幕
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.ClientToScreen(System.Drawing.Rectangle)">
            <summary>
            客户端到屏幕
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetCursorPosition">
            <summary>
            获取光标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetZeroBasedMousePosition">
            <summary>
            获取基于零的鼠标位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.SetCursorPosition(System.Int32,System.Int32)">
            <summary>
            设置光标位置
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.SetCursorPosition(System.Drawing.Point)">
            <summary>
            设置光标位置
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetPixelColor">
            <summary>
            获取像素颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetPixelColor(System.Int32,System.Int32)">
            <summary>
            获取像素颜色
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetPixelColor(System.Drawing.Point)">
            <summary>
            获取像素颜色
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.CheckPixelColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            检查像素颜色
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.CheckPixelColor(System.Int32,System.Int32,System.Drawing.Color,System.Byte)">
            <summary>
            检查像素颜色
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
            <param name="variation"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.CreateRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建矩形
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.CreateRectangle(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            创建矩形
            </summary>
            <param name="pos"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.ProportionalPosition(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            比例位置
            </summary>
            <param name="pos"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.SnapPositionToDegree(System.Drawing.Point,System.Drawing.Point,System.Single,System.Single)">
            <summary>
            将位置捕捉到一定位置
            </summary>
            <param name="pos"></param>
            <param name="pos2"></param>
            <param name="degree"></param>
            <param name="startDegree"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.CalculateNewPosition(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            计算新位置
            </summary>
            <param name="posOnClick"></param>
            <param name="posCurrent"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.CalculateNewRectangle(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            计算新矩形
            </summary>
            <param name="posOnClick"></param>
            <param name="posCurrent"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetWindowRectangle(System.IntPtr)">
            <summary>
            获取窗口矩形
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetActiveWindowRectangle">
            <summary>
            获取活动窗口矩形
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.GetActiveWindowClientRectangle">
            <summary>
            获取活动窗口客户端矩形
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.IsActiveWindowFullscreen">
            <summary>
            活动窗口是否全屏显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CaptureHelpers.EvenRectangleSize(System.Drawing.Rectangle)">
            <summary>
            偶数矩形大小
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ClipboardHelpers">
            <summary>
            剪贴板帮助类
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClipboardHelpers.FORMAT_PNG">
            <summary>
            PNG格式
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClipboardHelpers.FORMAT_17">
            <summary>
            17 格式
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClipboardHelpers.ClipboardLock">
            <summary>
            剪贴板锁
            </summary>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyData(System.Windows.Forms.IDataObject,System.Boolean)">
            <summary>
            复制数据
            </summary>
            <param name="data">数据</param>
            <param name="copy">如果想在退出应用程序后将数据保留在剪贴板中，则为 true；否则为 false。</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.Clear">
            <summary>
            清理
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyText(System.String)">
            <summary>
            复制文本
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyImage(System.Drawing.Image,System.String)">
            <summary>
            复制图片
            </summary>
            <param name="img"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyImageDefault(System.Drawing.Image)">
            <summary>
            复制默认图片
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyImageDefaultFillBackground(System.Drawing.Image,System.Drawing.Color)">
            <summary>
            复制图像默认填充背景
            </summary>
            <param name="img"></param>
            <param name="background"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyImageAlternative(System.Drawing.Image)">
            <summary>
            复制图像备选方案
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyImageAlternative2(System.Drawing.Image,System.String)">
            <summary>
            复制图像备选方案2
            </summary>
            <param name="img"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyFile(System.String)">
            <summary>
            复制文件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyFile(System.String[])">
            <summary>
            复制文件
            </summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyImageFromFile(System.String)">
            <summary>
            从文件中复制图像
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.CopyTextFromFile(System.String)">
            <summary>
            从文件中复制文本
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.GetImage(System.Boolean)">
            <summary>
            获取图片
            </summary>
            <param name="checkContainsImage"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.GetImageAlternative">
            <summary>
            获取图片备选方案
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.GetImageAlternative2">
            <summary>
            获取图片备选方案2
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.GetDIBImage(System.IO.MemoryStream)">
            <summary>
            获取DIB图像
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.GetText(System.Boolean)">
            <summary>
            获取文本
            </summary>
            <param name="checkContainsText"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.GetFileDropList(System.Boolean)">
            <summary>
            获取文件下拉列表
            </summary>
            <param name="checkContainsFileDropList"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.GenerateHTMLFragment(System.String)">
            <summary>
            生成HTML片段
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.ContainsImage">
            <summary>
            是否包含图像
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.ContainsText">
            <summary>
            是否包含文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpers.ContainsFileDropList">
            <summary>
            是否包含文件下拉列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ClipboardHelpersEx">
            <summary>
            剪贴板帮助扩展
            </summary>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.SetClipboardImage(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Windows.Forms.DataObject)">
            <summary>
            将给定的图像复制到剪贴板上作为PNG、DIB和标准位图格式。
            </summary>
            <param name="image">要放在剪贴板上的图像。</param>
            <param name="imageNoTr">可选的，特别是要放在剪贴板上的图像的非透明版本。</param>
            <param name="data">要将图像放入其中的剪贴板数据对象。可能已经有其他东西了。保留null以创建一个新的。</param>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.ConvertToDib(System.Drawing.Image)">
            <summary>
            将图像转换为位字段类型的独立于设备的位图格式。
            This is (wrongly) accepted by many applications as containing transparency,
            so I'm abusing it for that.
            </summary>
            <param name="image">Image to convert to DIB</param>
            <returns>The image converted to DIB, in bytes.</returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.GetClipboardImage(System.Windows.Forms.DataObject)">
            <summary>
            从给定剪贴板数据对象中检索图像，顺序为PNG、DIB、位图、图像对象。
            </summary>
            <param name="retrievedData">The clipboard data.</param>
            <returns>The extracted image, or null if no supported image type was found.</returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.ImageFromClipboardDib(System.Byte[])">
            <summary>
            来自剪贴板Dib的图像
            </summary>
            <param name="dibBytes"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.WriteIntToByteArray(System.Byte[],System.Int32,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            将Int写入字节数组
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <param name="bytes"></param>
            <param name="littleEndian"></param>
            <param name="value"></param>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.ReadIntFromByteArray(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            从字节数组读取Int
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <param name="bytes"></param>
            <param name="littleEndian"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.GetImageData(System.Drawing.Bitmap,System.Int32@)">
            <summary>
            从图像获取原始字节。
            </summary>
            <param name="sourceImage">要从中获取字节的图像。</param>
            <param name="stride">检索到的图像数据的步长。</param>
            <returns>图像的原始字节</returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.BuildImage(System.Byte[],System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.Drawing.Color[],System.Nullable{System.Drawing.Color})">
            <summary>
            基于数据、宽度、高度、步幅和像素格式创建位图。
            </summary>
            <param name="sourceData">原始源数据的字节数组</param>
            <param name="width">图像的宽度</param>
            <param name="height">图像的高度</param>
            <param name="stride">数据内部的扫描线长度</param>
            <param name="pixelFormat">Pixel format</param>
            <param name="palette">调色板</param>
            <param name="defaultColor">如果给定的颜色不能完全填充调色板，则在调色板上填充默认颜色。</param>
            <returns>新图像</returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.CloneImage(System.Drawing.Bitmap)">
            <summary>
            克隆图像对象以将其从任何备份资源中释放出来。
            代码取自 http://stackoverflow.com/a/3661892/ 还有一些额外的修正。
            </summary>
            <param name="sourceImage">要克隆的图像</param>
            <returns>The cloned image</returns>
        </member>
        <member name="M:NetumScan.Core.ClipboardHelpersEx.DIBV5ToBitmap(System.Byte[])">
            <summary>
            DIBV5到位图
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ColorHelpers">
            <summary>
            颜色帮助类
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorHelpers.StandardColors">
            <summary>
            标准颜色
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ColorToHex(System.Drawing.Color,NetumScan.Core.ColorFormat)">
            <summary>
            颜色到16进制
            </summary>
            <param name="color"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ColorToDecimal(System.Drawing.Color,NetumScan.Core.ColorFormat)">
            <summary>
            颜色到十进制
            </summary>
            <param name="color"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ColorToHSB(System.Drawing.Color)">
            <summary>
            颜色到HSB
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ColorToCMYK(System.Drawing.Color)">
            <summary>
            颜色到CMYK
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.HexToColor(System.String,NetumScan.Core.ColorFormat)">
            <summary>
            十六进制到颜色
            </summary>
            <param name="hex"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.HexToDecimal(System.String)">
            <summary>
            十六进制到十进制
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.DecimalToColor(System.Int32,NetumScan.Core.ColorFormat)">
            <summary>
            十进制到颜色
            </summary>
            <param name="dec"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.DecimalToHex(System.Int32)">
            <summary>
            十进制到十六进制
            </summary>
            <param name="dec"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.HSBToColor(NetumScan.Core.HSB)">
            <summary>
            HSB到颜色
            </summary>
            <param name="hsb"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.CMYKToColor(NetumScan.Core.CMYK)">
            <summary>
            CMYK到颜色
            </summary>
            <param name="cmyk"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ValidColor(System.Double)">
            <summary>
            有效颜色
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ValidColor(System.Int32)">
            <summary>
            有效颜色
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ValidColor(System.Byte)">
            <summary>
            有效颜色
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.RandomColor">
            <summary>
            随机色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ParseColor(System.String,System.Drawing.Color@)">
            <summary>
            解析颜色
            </summary>
            <param name="text"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.PerceivedBrightness(System.Drawing.Color)">
            <summary>
            感知亮度
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.VisibleColor(System.Drawing.Color)">
            <summary>
            可见颜色
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.VisibleColor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            可见颜色
            </summary>
            <param name="color"></param>
            <param name="lightColor"></param>
            <param name="darkColor"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.IsLightColor(System.Drawing.Color)">
            <summary>
            是否为浅色
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.IsDarkColor(System.Drawing.Color)">
            <summary>
            是否为深色
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.Lerp(System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            勒普
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.DeterministicStringToColor(System.String)">
            <summary>
            确定字符串的颜色
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ColorDifference(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            色差
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.ColorsAreClose(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            颜色是否相近
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <param name="threshold"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.LighterColor(System.Drawing.Color,System.Single)">
            <summary>
            浅色
            </summary>
            <param name="color"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.DarkerColor(System.Drawing.Color,System.Single)">
            <summary>
            深色
            </summary>
            <param name="color"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.GetKnownColors">
            <summary>
            获取已知颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.FindClosestKnownColor(System.Drawing.Color)">
            <summary>
            查找最接近的已知颜色
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorHelpers.GetColorName(System.Drawing.Color)">
            <summary>
            获取颜色名称
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ConvertHelpers">
            <summary>
            转换帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.DEC_to_BIN(System.Int64)">
            <summary>
            10进制转2进制
            </summary>
            <param name="Dec"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BIN_to_DEC(System.String)">
            <summary>
            2进制转10进制
            </summary>
            <param name="Bin"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.HEX_to_BIN(System.Int64)">
            <summary>
            16进制转2进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BIN_to_HEX(System.String)">
            <summary>
            2进制转16进制
            </summary>
            <param name="Bin"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.HEX_to_DEC(System.Int64)">
            <summary>
            16进制转10进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.HEX_to_DEC(System.String)">
            <summary>
            16进制转10进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.DEC_to_HEX(System.Int64)">
            <summary>
            10进制转16进制
            </summary>
            <param name="Dec"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.DEC_to_OCT(System.Int64)">
            <summary>
            16进制转8进制
            </summary>
            <param name="Dec"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.OCT_to_DEC(System.String)">
            <summary>
            8进制转10进制
            </summary>
            <param name="Oct"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BIN_to_OCT(System.String)">
            <summary>
            2进制转8进制
            </summary>
            <param name="Bin"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.OCT_to_BIN(System.String)">
            <summary>
            8进制转2进制
            </summary>
            <param name="Oct"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.OCT_to_HEX(System.String)">
            <summary>
            8进制转16进制
            </summary>
            <param name="Oct"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.HEX_to_OCT(System.String)">
            <summary>
            16进制转8进制
            </summary>
            <param name="Hex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BaseConvert(System.String,System.Byte,System.Byte)">
            <summary>
            进制转换
            </summary>
            <param name="input">需要转换的字符串</param>
            <param name="scrType">源字符的进制格式</param>
            <param name="dstType">目标字符的进制格式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BaseConvertFromBinary(System.String,System.Byte)">
            <summary>
            从二进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BaseConvertFromOctal(System.String,System.Byte)">
            <summary>
            从八进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BaseConvertFromDecimal(System.String,System.Int32)">
            <summary>
            从十进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.BaseConvertFromHexadecimal(System.String,System.Int32)">
            <summary>
            从十六进制转换成其他进制
            </summary>
            <param name="input"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.ImageToBase64String(System.Drawing.Image)">
            <summary>
            获取Image的Base64编码字符串
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ConvertHelpers.Base64StringToImage(System.String)">
            <summary>
            将Base64字符串转换为图片
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.Helpers">
            <summary>
            帮助类
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.Numbers">
            <summary>
            数字
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.AlphabetCapital">
            <summary>
            字母大写
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.Alphabet">
            <summary>
            字母小写
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.Alphanumeric">
            <summary>
            数字、字母大写、字母小写
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.AlphanumericInverse">
            <summary>
            数字、字母小写、字母大写
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.Hexadecimal">
            <summary>
            16进制
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.Base58">
            <summary>
            Base58
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.Base56">
            <summary>
            Base56
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.ImageFileExtensions">
            <summary>
            图像文件扩展名
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.TextFileExtensions">
            <summary>
            文本文件扩展名
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.VideoFileExtensions">
            <summary>
            视频文件扩展名
            </summary>
        </member>
        <member name="F:NetumScan.Core.Helpers.OSVersion">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:NetumScan.Core.Helpers.CursorList">
            <summary>
            鼠标列表
            </summary>
        </member>
        <member name="P:NetumScan.Core.Helpers.AppDataPath">
            <summary>
            类库AppData文件夹
            </summary>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetFilenameExtension(System.String,System.Boolean,System.Boolean)">
            <summary>
            获取文件扩展名
            </summary>
            <param name="filePath">文件路径</param>
            <param name="includeDot">是否包括圆点</param>
            <param name="checkSecondExtension">检查第二次扩展名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetFilenameSafe(System.String)">
            <summary>
            获取安全的文件名
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ChangeFilenameExtension(System.String,System.String)">
            <summary>
            更改文件扩展名
            </summary>
            <param name="fileName">文件名</param>
            <param name="extension">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.AppendExtension(System.String,System.String)">
            <summary>
            附加扩展名
            </summary>
            <param name="filePath">文件路径</param>
            <param name="extension">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.CheckExtension(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            检查扩展名
            </summary>
            <param name="filePath">文件路径</param>
            <param name="extensions">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsImageFile(System.String)">
            <summary>
            是否为图像文件
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsTextFile(System.String)">
            <summary>
            是否为文本文件
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsVideoFile(System.String)">
            <summary>
            是否为视频文件
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.FindDataType(System.String)">
            <summary>
            查找数据类型
            </summary>
            <param name="filePath">文件</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.AddZeroes(System.String,System.Int32)">
            <summary>
            添加零
            </summary>
            <param name="input"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.AddZeroes(System.Int32,System.Int32)">
            <summary>
            添加多个零
            </summary>
            <param name="number"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.HourTo12(System.Int32)">
            <summary>
            时间转12小时值
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetRandomChar(System.String)">
            <summary>
            获取随机字符
            </summary>
            <param name="chars">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetRandomString(System.String,System.Int32)">
            <summary>
            获取随机字符串
            </summary>
            <param name="chars"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetRandomNumber(System.Int32)">
            <summary>
            获取随机数字
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetRandomAlphanumeric(System.Int32)">
            <summary>
            获取随机字符串(数字、字母大写、字母小写)
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetRandomKey(System.Int32,System.Int32,System.Char)">
            <summary>
            获取随机密钥
            </summary>
            <param name="length">长度</param>
            <param name="count">次数</param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetAllCharacters">
            <summary>
            获取所有字符字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetRandomLine(System.String)">
            <summary>
            获取随机一行
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetRandomLineFromFile(System.String)">
            <summary>
            从文件中获取随机一行
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetValidFileName(System.String,System.String)">
            <summary>
            获取有效的文件名
            </summary>
            <param name="fileName">文件名</param>
            <param name="separator">分割</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetValidFolderPath(System.String)">
            <summary>
            获取有效的文件夹路径
            </summary>
            <param name="folderPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetValidFilePath(System.String)">
            <summary>
            获取有效的文件路径
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetValidURL(System.String,System.Boolean)">
            <summary>
            获取有效的URL
            </summary>
            <param name="url">统一资源定位器</param>
            <param name="replaceSpace">是否替换空格</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetXMLValue(System.String,System.String)">
            <summary>
            获取XML值
            </summary>
            <param name="input">输入字符串</param>
            <param name="tag">字节值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetEnums``1">
            <summary>
            获取枚举列表
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetEnumDescriptions``1(System.Int32)">
            <summary>
            获取枚举描述列表
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="skip">跳过数量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetLocalizedEnumDescriptions``1">
            <summary>
            获取本地化的枚举描述
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetLocalizedEnumDescriptions``1(System.Resources.ResourceManager)">
            <summary>
            获取本地化的枚举描述
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="resourceManager">资源管理器</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetEnumLength``1">
            <summary>
            获取枚举元素总数
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetEnumFromIndex``1(System.Int32)">
            <summary>
            获取指定索引的枚举值
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="i">索引值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetEnumNamesProper``1">
            <summary>
            获取正确的枚举名称
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetValueFields``1">
            <summary>
            获取值字段
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <returns>返回类类型的公共静态字段列表（类似于枚举值）</returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetProperName(System.String,System.Boolean)">
            <summary>
            获取正确的名称
            </summary>
            <param name="name">名称字符串</param>
            <param name="keepCase"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.OpenFile(System.String)">
            <summary>
            打开文件
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.OpenFolder(System.String)">
            <summary>
            打开文件夹
            </summary>
            <param name="folderPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.OpenFolderWithFile(System.String)">
            <summary>
            打开文件所在的文件夹
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.CompareVersion(System.String,System.String)">
            <summary>
            比较版本
            </summary>
            <param name="version1">版本1</param>
            <param name="version2">版本2</param>
            <returns></returns>
            <remarks>
            If version1 newer than version2 = 1
            If version1 equal to version2 = 0
            If version1 older than version2 = -1
            </remarks>
        </member>
        <member name="M:NetumScan.Core.Helpers.CompareVersion(System.Version,System.Version)">
            <summary>
            比较版本
            </summary>
            <param name="version1">版本1</param>
            <param name="version2">版本2</param>
            <returns></returns>
            <remarks>
            If version1 newer than version2 = 1
            If version1 equal to version2 = 0
            If version1 older than version2 = -1
            </remarks>
        </member>
        <member name="M:NetumScan.Core.Helpers.CompareApplicationVersion(System.String)">
            <summary>
            比较应用程序版本
            </summary>
            <param name="version">版本号</param>
            <returns></returns>
            <remarks>
            If version newer than ApplicationVersion = 1
            If version equal to ApplicationVersion = 0
            If version older than ApplicationVersion = -1
            </remarks>
        </member>
        <member name="M:NetumScan.Core.Helpers.NormalizeVersion(System.String)">
            <summary>
            标准化版本
            </summary>
            <param name="version">版本号字符串</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindowsXP">
            <summary>
            系统是否为Windows XP
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindowsXPOrGreater">
            <summary>
            系统是否为Windows XP或者更高版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindowsVista">
            <summary>
            系统是否为Windows Vista
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindowsVistaOrGreater">
            <summary>
            系统是否为Windows Vista或者更高版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindows7">
            <summary>
            系统是否为Windows 7
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindows7OrGreater">
            <summary>
            系统是否为Windows 7或者更高版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindows8">
            <summary>
            系统是否为Windows 8
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindows8OrGreater">
            <summary>
            系统是否为Windows 8或者更高版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsWindows10OrGreater(System.Int32)">
            <summary>
            系统是否为Windows 10或者更高版本
            </summary>
            <param name="build"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsDefaultInstallDir">
            <summary>
            软件是否在默认的安装目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsValidIPAddress(System.String)">
            <summary>
            是否为有效的IP地址
            </summary>
            <param name="ip">IP地址</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetUniqueFilePath(System.String)">
            <summary>
            获取唯一文件路径
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ProperTimeSpan(System.TimeSpan)">
            <summary>
            正确的时间间隔格式
            </summary>
            <param name="ts">时间间隔</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.Clone(System.Object)">
            <summary>
            复制
            </summary>
            <param name="obj">要被复制的对象</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.PlaySoundAsync(System.IO.Stream)">
            <summary>
            异步播放声音
            </summary>
            <param name="stream">文件流</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.PlaySoundAsync(System.String)">
            <summary>
            异步播放声音
            </summary>
            <param name="filepath">文件路径</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.BrowseFile(System.Windows.Forms.TextBox,System.String,System.Boolean)">
            <summary>
            浏览文件
            </summary>
            <param name="tb">文本框</param>
            <param name="initialDirectory"></param>
            <param name="detectSpecialFolders"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.BrowseFile(System.String,System.Windows.Forms.TextBox,System.String,System.Boolean)">
            <summary>
            浏览文件
            </summary>
            <param name="title">标题</param>
            <param name="tb">文本框</param>
            <param name="initialDirectory">初始目录</param>
            <param name="detectSpecialFolders">是否检测特殊文件夹</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.BrowseFolder(System.Windows.Forms.TextBox,System.String,System.Boolean)">
            <summary>
            浏览文件夹
            </summary>
            <param name="tb">文本框</param>
            <param name="initialDirectory">初始目录</param>
            <param name="detectSpecialFolders">是否检测特殊文件夹</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.BrowseFolder(System.String,System.Windows.Forms.TextBox,System.String,System.Boolean)">
            <summary>
            浏览文件夹
            </summary>
            <param name="title"></param>
            <param name="tb"></param>
            <param name="initialDirectory"></param>
            <param name="detectSpecialFolders"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetVariableFolderPath(System.String,System.Boolean)">
            <summary>
            获取可变文件夹路径
            </summary>
            <param name="path">路径</param>
            <param name="supportCustomSpecialFolders">是否支持自定义特殊文件夹</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ExpandFolderVariables(System.String,System.Boolean)">
            <summary>
            展开文件夹变量
            </summary>
            <param name="path">路径</param>
            <param name="supportCustomSpecialFolders">是否支持自定义特殊文件夹</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.OutputSpecialFolders">
            <summary>
            输出特殊文件夹
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.WaitWhile(System.Func{System.Boolean},System.Int32,System.Int32)">
            <summary>
            循环等待超时
            </summary>
            <param name="check">验证方法</param>
            <param name="interval">循环延时</param>
            <param name="timeout">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.WaitWhileAsync(System.Func{System.Boolean},System.Int32,System.Int32,System.Action,System.Int32)">
            <summary>
            异步循环等待超时
            </summary>
            <param name="check">验证方法</param>
            <param name="interval">选好颜色</param>
            <param name="timeout">超时时间</param>
            <param name="onSuccess">等待执行动作</param>
            <param name="waitStart">等待启动时间</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsFileLocked(System.String)">
            <summary>
            文件被锁定了吗
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetFileSize(System.String)">
            <summary>
            获取文件大小
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetFileSizeReadable(System.String,System.Boolean)">
            <summary>
            获取文件大小可读的字符串
            </summary>
            <param name="filePath">文件路径</param>
            <param name="binaryUnits"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.CreateDirectory(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="directoryPath">目录路径</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.CreateDirectoryFromFilePath(System.String)">
            <summary>
            从文件路径创建目录
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsValidFilePath(System.String)">
            <summary>
            是否为有效的文件路径
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            复制文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="destinationFolder">目标文件夹</param>
            <param name="overwrite">是否覆盖</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.MoveFile(System.String,System.String,System.Boolean)">
            <summary>
            移动文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="destinationFolder">目标文件夹</param>
            <param name="overwrite">是否覆盖</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.RenameFile(System.String,System.String)">
            <summary>
            重命名文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="newFileName">新文件名称</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.BackupFileWeekly(System.String,System.String)">
            <summary>
            每周备份文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="destinationFolder">目标文件夹</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.BackupFileMonthly(System.String,System.String)">
            <summary>
            每月备份文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="destinationFolder">目标文件夹</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetUniqueID">
            <summary>
            获取唯一ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetPosition(System.Drawing.ContentAlignment,System.Int32,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            获得位置
            </summary>
            <param name="placement">对齐方式</param>
            <param name="offset">偏移量</param>
            <param name="backgroundSize">背景大小</param>
            <param name="objectSize">对象大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetPosition(System.Drawing.ContentAlignment,System.Drawing.Point,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            获得位置
            </summary>
            <param name="placement">对齐方式</param>
            <param name="offset">偏移量</param>
            <param name="backgroundSize">背景大小</param>
            <param name="objectSize">对象大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.MeasureText(System.String,System.Drawing.Font)">
            <summary>
            测量文本
            </summary>
            <param name="text">内容</param>
            <param name="font">字体</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.MeasureText(System.String,System.Drawing.Font,System.Int32)">
            <summary>
            测量文本
            </summary>
            <param name="text">内容</param>
            <param name="font">字体</param>
            <param name="width">宽度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.SendPing(System.String)">
            <summary>
            发送Ping指令
            </summary>
            <param name="host">主机地址</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.SendPing(System.String,System.Int32)">
            <summary>
            发送Ping指令
            </summary>
            <param name="host">主机地址</param>
            <param name="count">指令次数</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.DownloadString(System.String)">
            <summary>
            下载字符串
            </summary>
            <param name="url">地址</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.SetDefaultUICulture(System.Globalization.CultureInfo)">
            <summary>
            设置UI默认区域性语言
            </summary>
            <param name="culture"></param>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetAbsolutePath(System.String)">
            <summary>
            获取绝对路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetTempPath(System.String)">
            <summary>
            获取临时路径
            </summary>
            <param name="extension">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsAdministrator">
            <summary>
            是否为管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsMemberOfAdministratorsGroup">
            <summary>
            是否为管理员组的成员
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.RepeatGenerator(System.Int32,System.Func{System.String})">
            <summary>
            重复生成
            </summary>
            <param name="count">次数</param>
            <param name="generator">方法</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.UnixToDateTime(System.Int64)">
            <summary>
            时间从Unix格式到DateTime格式
            </summary>
            <param name="unix">unix时间</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.DateTimeToUnix(System.DateTime)">
            <summary>
            时间从DateTime格式到Unix格式
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsRunning(System.String)">
            <summary>
            是否正在运行
            </summary>
            <param name="name">进程名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.CopyAll(System.String,System.String)">
            <summary>
            复制所有
            </summary>
            <param name="sourceDirectory">来源目录</param>
            <param name="targetDirectory">目标目录</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.CopyAll(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            复制所有
            </summary>
            <param name="source">来源</param>
            <param name="target">目标</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.ByteArrayToStructure``1(System.Byte[])">
            <summary>
            数据从字节数组到结构
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetInstances``1">
            <summary>
            获取实例
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.FindSubclassesOf``1">
            <summary>
            查找子类
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetOperatingSystemProductName(System.Boolean)">
            <summary>
            获取操作系统名称
            </summary>
            <param name="includeBit">是否包含位</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.CreateCursor(System.Byte[])">
            <summary>
            创建光标
            </summary>
            <param name="data">光标数据</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.EscapeCLIText(System.String)">
            <summary>
            转义CLI文本
            </summary>
            <param name="text">CLI文本</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.BytesToHex(System.Byte[])">
            <summary>
            从字节数组到十六进制字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ComputeSHA256(System.Byte[])">
            <summary>
            计算SHA256
            </summary>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ComputeSHA256(System.IO.Stream,System.Int32)">
            <summary>
            计算SHA256
            </summary>
            <param name="stream">文件流</param>
            <param name="bufferSize">缓存大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ComputeSHA256(System.String)">
            <summary>
            计算SHA256
            </summary>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ComputeHMACSHA256(System.Byte[],System.Byte[])">
            <summary>
            计算HMACSHA256
            </summary>
            <param name="data">数据</param>
            <param name="key">key</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ComputeHMACSHA256(System.String,System.String)">
            <summary>
            计算HMACSHA256
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ComputeHMACSHA256(System.Byte[],System.String)">
            <summary>
            计算HMACSHA256
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.ComputeHMACSHA256(System.String,System.Byte[])">
            <summary>
            计算HMACSHA256
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.CreateEmptyFile(System.String)">
            <summary>
            创建空文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:NetumScan.Core.Helpers.SafeStringFormat(System.String,System.Object[])">
            <summary>
            安全字符串格式
            </summary>
            <param name="format">格式</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.SafeStringFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            安全字符串格式
            </summary>
            <param name="provider">机制</param>
            <param name="format">格式</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.NumberToLetters(System.Int32)">
            <summary>
            数字转换成字母
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetNextRomanNumeralStep(System.Int32@,System.Int32,System.String)">
            <summary>
            获得下一个罗马数字步骤
            </summary>
            <param name="num"></param>
            <param name="step"></param>
            <param name="numeral"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.NumberToRomanNumeral(System.Int32)">
            <summary>
            数字转换成罗马数字
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.TryFixHandCursor">
            <summary>
            尝试修复手动光标
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.IsTabletMode">
            <summary>
            是平板电脑模式吗
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.JSONFormat(System.String,Newtonsoft.Json.Formatting)">
            <summary>
            JSON格式
            </summary>
            <param name="json">json字符串</param>
            <param name="formatting"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.XMLFormat(System.String)">
            <summary>
            XML格式
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetFilesByExtensions(System.String,System.String[])">
            <summary>
            按扩展名获取文件
            </summary>
            <param name="directoryPath">文件夹路径</param>
            <param name="extensions">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetFilesByExtensions(System.IO.DirectoryInfo,System.String[])">
            <summary>
            按扩展名获取文件
            </summary>
            <param name="directoryInfo">文件夹</param>
            <param name="extensions">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetProgressIcon(System.Int32)">
            <summary>
            获取进度图标
            </summary>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GetProgressIcon(System.Int32,System.Drawing.Color)">
            <summary>
            获取进度图标
            </summary>
            <param name="percentage">进度</param>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Helpers.GlobalPromptBox(System.String)">
            <summary>
            弹出全局透明提示框
            </summary>
            <param name="msg">消息内容</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.GlobalPromptBox(System.String,System.Drawing.Rectangle)">
            <summary>
            弹出全局透明提示框
            </summary>
            <param name="msg">消息内容</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:NetumScan.Core.Helpers.ActivateExternalProgram(System.String,System.String)">
            <summary>
            打开外部引用程序
            </summary>
            <param name="path"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.HelpersOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HelpersOptions.RecentColorsMax">
            <summary>
            最新颜色最大值
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.CurrentProxy">
            <summary>
            当前代理
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.AcceptInvalidSSLCertificates">
            <summary>
            接受无效的SSL证书
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.DefaultCopyImageFillBackground">
            <summary>
            默认复制图像填充背景
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.UseAlternativeClipboardCopyImage">
            <summary>
            使用备用剪贴板复制图像
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.UseAlternativeClipboardGetImage">
            <summary>
            使用替代剪贴板获取图像
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.RotateImageByExifOrientationData">
            <summary>
            根据现有方向数据旋转图像
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.BrowserPath">
            <summary>
            浏览器路径
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.RecentColors">
            <summary>
            最新颜色
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.LastSaveDirectory">
            <summary>
            上次保存目录
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.URLEncodeIgnoreEmoji">
            <summary>
            URL编码忽略表情符号
            </summary>
        </member>
        <member name="P:NetumScan.Core.HelpersOptions.SpecialFolders">
            <summary>
            特殊文件夹
            </summary>
        </member>
        <member name="T:NetumScan.Core.ImageHelpers">
            <summary>
            图像帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            调整图像大小
            </summary>
            <param name="bmp">源图像</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="interpolationMode">缩放或旋转图像时使用的算法。</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImage(System.Drawing.Bitmap,System.Drawing.Size,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            调整图像大小
            </summary>
            <param name="bmp">源图像</param>
            <param name="size">大小</param>
            <param name="interpolationMode">缩放或旋转图像时使用的算法。</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImage(System.Drawing.Bitmap,System.Drawing.Size,System.Boolean,System.Boolean)">
            <summary>
            调整图像大小
            </summary>
            <param name="bmp">源图像</param>
            <param name="size">大小</param>
            <param name="allowEnlarge">允许放大</param>
            <param name="centerImage">中心图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            调整图像大小
            </summary>
            <param name="bmp">源图像</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="allowEnlarge">允许放大</param>
            <param name="centerImage">中心图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Drawing.Color)">
            <summary>
            调整图像大小
            </summary>
            <param name="bmp">源图像</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="allowEnlarge">允许放大</param>
            <param name="centerImage">中心图像</param>
            <param name="backColor">背景颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CreateThumbnail(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            创建缩略图
            </summary>
            <param name="bmp">源图像</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImageLimit(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            调整图像大小限制
            </summary>
            <param name="bmp">源图像</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns></returns>
            <remarks>若图像大小大于指定大小，则调整其大小并保持纵横比，否则返回图像。</remarks>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImageLimit(System.Drawing.Bitmap,System.Drawing.Size)">
            <summary>
            调整图像大小限制
            </summary>
            <param name="bmp">源图像</param>
            <param name="size">大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ResizeImageLimit(System.Drawing.Bitmap,System.Int32)">
            <summary>
            调整图像大小限制
            </summary>
            <param name="bmp">原图像</param>
            <param name="size">大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CropBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            裁剪位图
            </summary>
            <param name="bmp">源图像</param>
            <param name="rect">矩形区域</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AutoCropTransparent(System.Drawing.Bitmap)">
            <summary>
            自动裁剪透明
            </summary>
            <param name="bmp">原图像</param>
            <returns></returns>
            <remarks>自动裁剪图像以删除透明的外部区域。</remarks>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.QuickAutoCropTransparent(System.Drawing.Bitmap)">
            <summary>
            快速自动裁剪透明
            </summary>
            <param name="bmp"></param>
            <returns></returns>
            <remarks>自动裁剪图像以删除透明的外部区域。仅检查中心像素。</remarks>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddCanvas(System.Drawing.Image,System.Int32)">
            <summary>
            添加画布
            </summary>
            <param name="img">图像</param>
            <param name="margin">边缘宽度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddCanvas(System.Drawing.Image,System.Windows.Forms.Padding)">
            <summary>
            添加画布
            </summary>
            <param name="img">图像</param>
            <param name="margin">边缘宽度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddCanvas(System.Drawing.Image,System.Windows.Forms.Padding,System.Drawing.Color)">
            <summary>
            添加画布
            </summary>
            <param name="img">图像</param>
            <param name="margin">边缘宽度</param>
            <param name="canvasColor">画布颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.RoundedCorners(System.Drawing.Bitmap,System.Int32)">
            <summary>
            添加圆角
            </summary>
            <param name="bmp">图像</param>
            <param name="cornerRadius">圆角半径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.OutlineOld(System.Drawing.Bitmap,System.Int32,System.Drawing.Color)">
            <summary>
            添加外边框线条(旧)
            </summary>
            <param name="bmp">图像</param>
            <param name="borderSize">边框大小</param>
            <param name="borderColor">边框颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.Outline(System.Drawing.Bitmap,System.Int32,System.Drawing.Color,System.Int32,System.Boolean)">
            <summary>
            添加外边框线条
            </summary>
            <param name="bmp">图像</param>
            <param name="borderSize">边框大小</param>
            <param name="borderColor">边框颜色</param>
            <param name="padding">边缘宽度</param>
            <param name="outlineOnly">唯一外围边框</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.MakeOutline(System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            制作外边框线条
            </summary>
            <param name="bmp">图像</param>
            <param name="minRadius">最小半径</param>
            <param name="maxRadius">最大半径</param>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DistanceToThreshold(NetumScan.Core.UnsafeBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            到阈值的距离
            </summary>
            <param name="unsafeBitmap">不安全位图</param>
            <param name="x">x轴值</param>
            <param name="y">y轴值</param>
            <param name="radius">半径</param>
            <param name="threshold">阈值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawReflection(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            绘制倒影
            </summary>
            <param name="bmp">图像</param>
            <param name="percentage">百分比</param>
            <param name="maxAlpha">最大透明通道值</param>
            <param name="minAlpha">最小透明通道值</param>
            <param name="offset">偏移</param>
            <param name="skew">是否倾斜</param>
            <param name="skewSize">倾斜大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddSkew(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            添加倾斜
            </summary>
            <param name="img">图像</param>
            <param name="x">x轴值</param>
            <param name="y">y轴值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddReflection(System.Drawing.Image,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加倒影
            </summary>
            <param name="img">图像</param>
            <param name="percentage">百分比</param>
            <param name="maxAlpha">最大透明通道值</param>
            <param name="minAlpha">最小透明通道值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawBorder(System.Drawing.Bitmap,System.Drawing.Color,System.Int32,NetumScan.Core.BorderType,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            绘制边框
            </summary>
            <param name="bmp">图像</param>
            <param name="borderColor">边框颜色</param>
            <param name="borderSize">边框大小</param>
            <param name="borderType">边框类型</param>
            <param name="dashStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawBorder(System.Drawing.Bitmap,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Int32,NetumScan.Core.BorderType,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            绘制边框
            </summary>
            <param name="bmp">图像</param>
            <param name="fromBorderColor">从边框颜色</param>
            <param name="toBorderColor">到边框颜色</param>
            <param name="gradientType">线性渐变的方向</param>
            <param name="borderSize">边框大小</param>
            <param name="borderType">边框类型</param>
            <param name="dashStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawBorder(System.Drawing.Bitmap,NetumScan.Core.GradientInfo,System.Int32,NetumScan.Core.BorderType,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            绘制边框
            </summary>
            <param name="bmp">图像</param>
            <param name="gradientInfo">颜色渐变信息</param>
            <param name="borderSize">边框大小</param>
            <param name="borderType">边框类型</param>
            <param name="dashStyle">边框样式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawBorder(System.Drawing.Bitmap,System.Drawing.Pen,NetumScan.Core.BorderType)">
            <summary>
            绘制边框
            </summary>
            <param name="bmp">图像</param>
            <param name="borderPen">边框笔刷</param>
            <param name="borderType">边框类型</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CreateBitmap(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            创建图像
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FillBackground(System.Drawing.Image,System.Drawing.Color)">
            <summary>
            填充背景
            </summary>
            <param name="img">图像</param>
            <param name="color">颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FillBackground(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
            <summary>
            填充背景
            </summary>
            <param name="img">图像</param>
            <param name="fromColor">从颜色</param>
            <param name="toColor">到颜色</param>
            <param name="gradientType">线性渐变类型</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FillBackground(System.Drawing.Image,NetumScan.Core.GradientInfo)">
            <summary>
            填充背景
            </summary>
            <param name="img">图像</param>
            <param name="gradientInfo">颜色渐变信息</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FillBackground(System.Drawing.Image,System.Drawing.Brush)">
            <summary>
            填充背景
            </summary>
            <param name="img">图像</param>
            <param name="brush">笔刷</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawCheckers(System.Drawing.Image)">
            <summary>
            绘制方格图像(跳棋）
            </summary>
            <param name="img">图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawCheckers(System.Drawing.Image,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制方格图像(跳棋）
            </summary>
            <param name="img">图像</param>
            <param name="checkerSize">方格大小</param>
            <param name="checkerColor1">方格颜色1</param>
            <param name="checkerColor2">方格颜色2</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawCheckers(System.Int32,System.Int32)">
            <summary>
            绘制方格图像(跳棋）
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawCheckers(System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制方格图像(跳棋）
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="checkerSize">方格大小</param>
            <param name="checkerColor1">方格颜色1</param>
            <param name="checkerColor2">方格颜色2</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CreateCheckerPattern">
            <summary>
            创建棋盘格图案
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CreateCheckerPattern(System.Int32,System.Int32)">
            <summary>
            创建棋盘格图案
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CreateCheckerPattern(System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            创建棋盘格图案
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="checkerColor1">棋盘格颜色1</param>
            <param name="checkerColor2">棋盘格颜色2</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.IsImagesEqual(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            图像是一样的么
            </summary>
            <param name="bmp1">图像1</param>
            <param name="bmp2">图像2</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.IsImageTransparent(System.Drawing.Bitmap)">
            <summary>
            图像是否透明
            </summary>
            <param name="bmp">图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddMetadata(System.Drawing.Image,System.Int32,System.String)">
            <summary>
            添加元数据
            </summary>
            <param name="img">图像</param>
            <param name="id">元素ID</param>
            <param name="text">元素内容</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CopyMetadata(System.Drawing.Image,System.Drawing.Image)">
            <summary>
            复制元数据
            </summary>
            <param name="fromImage">来源图像</param>
            <param name="toImage">目标图像</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.RotateImage(System.Drawing.Bitmap,System.Single,System.Boolean,System.Boolean)">
            <summary>
            方法旋转图像对象。结果可能是以下三种情况之一：
            - upsizeOk = true: 输出图像将大于输入图像，并且不会发生剪切
            - upsizeOk = false  clipOk = true: 输出与输入大小相同，会发生剪切
            - upsizeOk = false  clipOk = false: 输出与输入大小相同，图像缩小，无剪裁
            </summary>
            <param name="bmp">输入图像对象</param>
            <param name="angleDegrees">旋转角度，以度为单位</param>
            <param name="upsize">参见上面的注释</param>
            <param name="clip">参见上面的注释，如果upsizeOk=true，则不使用</param>
            <returns>新位图对象，可能大于输入图像</returns>
            <remarks>请注意，此方法始终返回新的位图对象，即使旋转为零，在这种情况下，返回的对象是输入对象的克隆。</remarks>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddShadow(System.Drawing.Bitmap,System.Single,System.Int32)">
            <summary>
            添加阴影
            </summary>
            <param name="bmp">图像</param>
            <param name="opacity">不透明度</param>
            <param name="size">大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddShadow(System.Drawing.Bitmap,System.Single,System.Int32,System.Single,System.Drawing.Color,System.Drawing.Point)">
            <summary>
            添加阴影
            </summary>
            <param name="bmp">图像</param>
            <param name="opacity">不透明度</param>
            <param name="size">大小</param>
            <param name="darkness">黑暗</param>
            <param name="color">颜色</param>
            <param name="offset">偏移量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AddGlow(System.Drawing.Bitmap,System.Int32,System.Single,System.Drawing.Color,System.Drawing.Point,NetumScan.Core.GradientInfo)">
            <summary>
            添加光辉
            </summary>
            <param name="bmp">图像</param>
            <param name="size">大小</param>
            <param name="strength">光辉透明度</param>
            <param name="color">颜色</param>
            <param name="offset">偏移量</param>
            <param name="gradient">梯度信息</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CreateGradientMask(System.Drawing.Bitmap,NetumScan.Core.GradientInfo,System.Single)">
            <summary>
            创建渐变遮罩
            </summary>
            <param name="bmp">图像</param>
            <param name="gradient">梯度信息</param>
            <param name="opacity">透明度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.Sharpen(System.Drawing.Bitmap,System.Double)">
            <summary>
            锐化
            </summary>
            <param name="bmp">图像</param>
            <param name="strength">力度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.HighlightImage(System.Drawing.Bitmap)">
            <summary>
            高亮度图像
            </summary>
            <param name="bmp">图像</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.HighlightImage(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            高亮度图像
            </summary>
            <param name="bmp">图像</param>
            <param name="highlightColor">高亮颜色</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.HighlightImage(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            高亮度图像
            </summary>
            <param name="bmp">图像</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.HighlightImage(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            高亮度图像
            </summary>
            <param name="bmp">图像</param>
            <param name="rect">矩形区域</param>
            <param name="highlightColor">高亮颜色</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.Pixelate(System.Drawing.Bitmap,System.Int32)">
            <summary>
            像素处理
            </summary>
            <param name="bmp">图像</param>
            <param name="pixelSize">像素大小</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ApplyBoxBlur(System.Drawing.Bitmap,System.Int32)">
            <summary>
            应用方块模糊
            </summary>
            <param name="bmp">图像</param>
            <param name="range">区域</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.BoxBlur(System.Drawing.Bitmap,System.Int32,System.Drawing.Rectangle)">
            <summary>
            方块模糊
            </summary>
            <param name="bmp">图像</param>
            <param name="range">范围</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.BoxBlurHorizontal(NetumScan.Core.UnsafeBitmap,System.Int32,System.Drawing.Rectangle)">
            <summary>
            方块模糊水平方向
            </summary>
            <param name="unsafeBitmap">不安全位图</param>
            <param name="range">范围</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.BoxBlurVertical(NetumScan.Core.UnsafeBitmap,System.Int32,System.Drawing.Rectangle)">
            <summary>
            方块模糊垂直方向
            </summary>
            <param name="unsafeBitmap">不安全位图</param>
            <param name="range">范围</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ColorDepth(System.Drawing.Bitmap,System.Int32)">
            <summary>
            颜色深度
            </summary>
            <param name="bmp">图像</param>
            <param name="bitsPerChannel">每通道位数</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FastBoxBlur(System.Drawing.Bitmap,System.Int32)">
            <summary>
            快速方块模糊
            </summary>
            <param name="bmp">图像</param>
            <param name="radius">圆角角度</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.TornEdges(System.Drawing.Bitmap,System.Int32,System.Int32,System.Windows.Forms.AnchorStyles,System.Boolean)">
            <summary>
            撕边滤镜
            </summary>
            <param name="bmp">图像</param>
            <param name="tornDepth">撕裂深度</param>
            <param name="tornRange">撕裂范围</param>
            <param name="sides">方向</param>
            <param name="curvedEdges">曲线边缘</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.Slice(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            切片
            </summary>
            <param name="bmp">图像</param>
            <param name="minSliceHeight">最小切片高度</param>
            <param name="maxSliceHeight">最大切片高度</param>
            <param name="minSliceShift">最小切片宽度</param>
            <param name="maxSliceShift">最大切片宽度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.OpenImageFileDialog(System.Windows.Forms.Form,System.String)">
            <summary>
            打开图像文件夹对话框
            </summary>
            <param name="form">窗体</param>
            <param name="initialDirectory">初始目录</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.OpenImageFileDialog(System.Boolean,System.Windows.Forms.Form,System.String)">
            <summary>
            打开图像文件夹对话框
            </summary>
            <param name="multiselect">是否多选</param>
            <param name="form">窗体</param>
            <param name="initialDirectory">初始目录</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.GetImageFormat(System.String)">
            <summary>
            获取图像格式
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveImage(System.Drawing.Image,System.String)">
            <summary>
            保存图像
            </summary>
            <param name="img">图像</param>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveImageFileDialog(System.Drawing.Image,System.String,System.Boolean)">
            <summary>
            保存图像文件对话框
            </summary>
            <param name="img">图像</param>
            <param name="filePath">文件路径</param>
            <param name="useLastDirectory">是否使用历史目录</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.LoadImage(System.String)">
            <summary>
            加载图像
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.LoadImageWithFileDialog">
            <summary>
            加载图像对话框
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CombineImages(System.Collections.Generic.List{System.Drawing.Bitmap},System.Windows.Forms.Orientation,NetumScan.Core.ImageCombinerAlignment,System.Int32,System.Boolean)">
            <summary>
            组合图像
            </summary>
            <param name="images">图像集合</param>
            <param name="orientation">组合方向</param>
            <param name="alignment">对齐方式</param>
            <param name="space">空间</param>
            <param name="autoFillBackground">自动填充背景</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CombineImages(System.Collections.Generic.IEnumerable{System.String},System.Windows.Forms.Orientation,NetumScan.Core.ImageCombinerAlignment,System.Int32,System.Boolean)">
            <summary>
            组合图像
            </summary>
            <param name="imageFiles">图像集合</param>
            <param name="orientation">组合方向</param>
            <param name="alignment">对齐方式</param>
            <param name="space">空间</param>
            <param name="autoFillBackground">自动填充背景</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SplitImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            分割图像
            </summary>
            <param name="img">图像</param>
            <param name="rowCount">行数</param>
            <param name="columnCount">列数</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.CreateColorPickerIcon(System.Drawing.Color,System.Drawing.Rectangle,System.Int32)">
            <summary>
            创建颜色选择器图标
            </summary>
            <param name="color">颜色</param>
            <param name="rect">区域</param>
            <param name="holeSize">孔大小</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawColorPickerIcon(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle,System.Int32)">
            <summary>
            绘制颜色选择器图标
            </summary>
            <param name="g">绘图对象</param>
            <param name="color">颜色</param>
            <param name="rect">区域</param>
            <param name="holeSize">孔大小</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FindAutoCropRectangle(System.Drawing.Bitmap,System.Boolean,System.Windows.Forms.AnchorStyles)">
            <summary>
            查找自动裁剪区域
            </summary>
            <param name="bmp">图像</param>
            <param name="sameColorCrop">相同颜色裁剪</param>
            <param name="sides">裁剪边缘</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.AutoCropImage(System.Drawing.Bitmap,System.Boolean,System.Windows.Forms.AnchorStyles)">
            <summary>
            自动裁剪图像
            </summary>
            <param name="bmp">图像</param>
            <param name="sameColorCrop">相同颜色裁剪</param>
            <param name="sides">裁剪边缘</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.RotateImageByExifOrientationData(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            根据现有方向数据旋转图像
            </summary>
            <param name="bmp">图像</param>
            <param name="removeExifOrientationData">移除现有方向数据</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.GetRotateFlipTypeByExifOrientationData(System.Int32)">
            <summary>
            通过现有方向数据获取GetRotateFlipTypeByExifOrientationData
            </summary>
            <param name="orientation">方向</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SelectiveColor(System.Drawing.Bitmap,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            选择性着色
            </summary>
            <param name="bmp">图像</param>
            <param name="lightColor">浅色</param>
            <param name="darkColor">深色</param>
            <param name="paletteSize">调色板大小</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.GetImageFileDimensions(System.String)">
            <summary>
            获取图像文件尺寸
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.GetInterpolationMode(NetumScan.Core.ImageInterpolationMode)">
            <summary>
            获取插值模式
            </summary>
            <param name="interpolationMode">插值模式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ApplyAspectRatio(System.Int32,System.Int32,System.Drawing.Bitmap)">
            <summary>
            应用纵横比
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="bmp">图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.ApplyAspectRatio(System.Drawing.Size,System.Drawing.Bitmap)">
            <summary>
            应用纵横比
            </summary>
            <param name="size">大小</param>
            <param name="bmp">图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.NonIndexedBitmap(System.Drawing.Bitmap)">
            <summary>
            无索引位图
            </summary>
            <param name="bmp">图像</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.DrawGrip(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            绘制
            </summary>
            <param name="color">颜色</param>
            <param name="shadow">阴影颜色</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SavePNG(System.Drawing.Image,NetumScan.Core.PNGBitDepth)">
            <summary>
            保存PNG
            </summary>
            <param name="img">图片</param>
            <param name="bitDepth">位深度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SavePNG(System.Drawing.Image,System.IO.Stream,NetumScan.Core.PNGBitDepth)">
            <summary>
            保存PNG
            </summary>
            <param name="img">图片</param>
            <param name="stream">文件流</param>
            <param name="bitDepth">位深度</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.PNGStripChunks(System.IO.MemoryStream,System.String[])">
            <summary>
            PNG带块
            </summary>
            <param name="stream">文件流</param>
            <param name="chunks">块</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.PNGStripColorSpaceInformation(System.IO.MemoryStream)">
            <summary>
            PNGStripColorSpaceInformation
            </summary>
            <param name="stream">内存流</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveJPEG(System.Drawing.Image,System.Int32)">
            <summary>
            保存JPEG
            </summary>
            <param name="img">图像</param>
            <param name="quality">质量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveJPEG(System.Drawing.Image,System.String,System.Int32)">
            <summary>
            保存JPEG
            </summary>
            <param name="img">图像</param>
            <param name="filePath">文件路径</param>
            <param name="quality">质量</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveJPEG(System.Drawing.Image,System.IO.Stream,System.Int32)">
            <summary>
            保存JPEG
            </summary>
            <param name="img">图像</param>
            <param name="stream">文件流</param>
            <param name="quality">质量</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveJPEGAutoQuality(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            保存JPEG自动质量
            </summary>
            <param name="img">图像</param>
            <param name="sizeLimit">尺寸限制</param>
            <param name="qualityDecrement">质量减量</param>
            <param name="minQuality">最小质量</param>
            <param name="maxQuality">最大质量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveGIF(System.Drawing.Image,NetumScan.Core.GIFQuality)">
            <summary>
            保存GIF
            </summary>
            <param name="img">图像</param>
            <param name="quality">图像质量</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.SaveGIF(System.Drawing.Image,System.IO.Stream,NetumScan.Core.GIFQuality)">
            <summary>
            保存GIF
            </summary>
            <param name="img">图像</param>
            <param name="stream">文件流</param>
            <param name="quality">图像质量</param>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FileToBitmap(System.String)">
            <summary>
            从文件中加载图片,并且不占用图片
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ImageHelpers.FileToImage(System.String)">
            <summary>
            从文件中加载图片,并且不占用图片
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.IniFileHelper">
            <summary>
            调用非托管代码读写INI文件
            </summary>
        </member>
        <member name="M:NetumScan.Core.IniFileHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="IniPath"></param>
        </member>
        <member name="M:NetumScan.Core.IniFileHelper.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            Ini写入值
            </summary>
            <param name="Section">段落</param>
            <param name="Key">键</param>
            <param name="Value">值</param>
        </member>
        <member name="M:NetumScan.Core.IniFileHelper.IniReadValue(System.String,System.String)">
            <summary>
            Ini读取值
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.IniFileHelper.IniReadValue(System.String,System.String,System.String)">
            <summary>
            Ini读取值
            </summary>
            <param name="Section">段落</param>
            <param name="Key">键</param>
            <param name="Default">默认值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.IniFileHelper.IniReadValues(System.String,System.String)">
            <summary>
            Ini读取值
            </summary>
            <param name="section">段落</param>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.IniFileHelper.ClearAllSection">
            <summary>
            删除ini文件中所有段落
            </summary>
        </member>
        <member name="M:NetumScan.Core.IniFileHelper.ClearSection(System.String)">
            <summary>
            删除ini文件指定段落的的所有键值
            </summary>
            <param name="Section"></param>
        </member>
        <member name="T:NetumScan.Core.IniFileHandle">
            <summary>
            读写纯文本Ini文件
            </summary>
        </member>
        <member name="M:NetumScan.Core.IniFileHandle.ReadIniStr(System.String,System.String,System.String,System.String)">
            <summary>
            Ini读取
            </summary>
            <param name="section">段落</param>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <param name="fileName">Ini文件名称</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.IniFileHandle.ReadIniInt(System.String,System.String,System.Int32,System.String)">
            <summary>
            Ini读取
            </summary>
            <param name="section">段落</param>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <param name="fileName">Ini文件名称</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.IniFileHandle.WriteIniInt(System.String,System.String,System.Int32,System.String)">
            <summary>
            Ini写入
            </summary>
            <param name="section">段落</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="fileName">Ini文件名称</param>
        </member>
        <member name="M:NetumScan.Core.IniFileHandle.WriteIniStr(System.String,System.String,System.String,System.String)">
            <summary>
            Ini写入
            </summary>
            <param name="section">段落</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="fileName">Ini文件名称</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.JsonHelpers">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.Serialize``1(``0,System.IO.TextWriter,Newtonsoft.Json.DefaultValueHandling,Newtonsoft.Json.NullValueHandling,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="textWriter"></param>
            <param name="defaultValueHandling"></param>
            <param name="nullValueHandling"></param>
            <param name="serializationBinder"></param>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.SerializeToString``1(``0,Newtonsoft.Json.DefaultValueHandling,Newtonsoft.Json.NullValueHandling,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            序列化到字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="defaultValueHandling"></param>
            <param name="nullValueHandling"></param>
            <param name="serializationBinder"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.SerializeToStream``1(``0,System.IO.Stream,Newtonsoft.Json.DefaultValueHandling,Newtonsoft.Json.NullValueHandling,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            序列化到字节序列
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="stream"></param>
            <param name="defaultValueHandling"></param>
            <param name="nullValueHandling"></param>
            <param name="serializationBinder"></param>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.SerializeToMemoryStream``1(``0,Newtonsoft.Json.DefaultValueHandling,Newtonsoft.Json.NullValueHandling,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            序列化到内存流
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="defaultValueHandling"></param>
            <param name="nullValueHandling"></param>
            <param name="serializationBinder"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.SerializeToFile``1(``0,System.String,Newtonsoft.Json.DefaultValueHandling,Newtonsoft.Json.NullValueHandling,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            序列化到文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="filePath"></param>
            <param name="defaultValueHandling"></param>
            <param name="nullValueHandling"></param>
            <param name="serializationBinder"></param>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.Deserialize``1(System.IO.TextReader,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="textReader"></param>
            <param name="serializationBinder"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.DeserializeFromString``1(System.String,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            从字符串反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <param name="serializationBinder"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.DeserializeFromStream``1(System.IO.Stream,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            从字节序列反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream"></param>
            <param name="serializationBinder"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.DeserializeFromFile``1(System.String,Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>
            从文件反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <param name="serializationBinder"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.QuickVerifyJsonFile(System.String)">
            <summary>
            快速验证Json文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.JsonHelpers.SerializeJson(System.String)">
            <summary>
            将字符串序列化为JSON字符串
            </summary>
            <param name="Text">字符串</param>
            <returns>json字符串</returns>
        </member>
        <member name="T:NetumScan.Core.MathHelpers">
            <summary>
            数学帮助类
            </summary>
        </member>
        <member name="F:NetumScan.Core.MathHelpers.RadianPI">
            <summary>
            180.0 / Math.PI
            </summary>
        </member>
        <member name="F:NetumScan.Core.MathHelpers.DegreePI">
            <summary>
            Math.PI / 180.0
            </summary>
        </member>
        <member name="F:NetumScan.Core.MathHelpers.TwoPI">
            <summary>
            Math.PI * 2
            </summary>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Min``1(``0,``0)">
            <summary>
            获取最小值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num">数值</param>
            <param name="min">最小值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Max``1(``0,``0)">
            <summary>
            获取最大值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num">数值</param>
            <param name="max">最大值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Clamp``1(``0,``0,``0)">
            <summary>
            获取中间值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num">数值</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.IsBetween``1(``0,``0,``0)">
            <summary>
            是否为中间值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num">数值</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.BetweenOrDefault``1(``0,``0,``0,``0)">
            <summary>
            获取中间值或者默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="num">数值</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            重映射
            </summary>
            <param name="value"></param>
            <param name="from1"></param>
            <param name="to1"></param>
            <param name="from2"></param>
            <param name="to2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.IsEvenNumber(System.Int32)">
            <summary>
            是否为偶数
            </summary>
            <param name="num">数值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.IsOddNumber(System.Int32)">
            <summary>
            是否为奇数
            </summary>
            <param name="num">数值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            插值函数
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Lerp(NetumScan.Core.Vector2,NetumScan.Core.Vector2,System.Single)">
            <summary>
            插值函数
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.RadianToDegree(System.Single)">
            <summary>
            弧度度数
            </summary>
            <param name="radian"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.DegreeToRadian(System.Single)">
            <summary>
            弧度角度
            </summary>
            <param name="degree"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.RadianToVector2(System.Single)">
            <summary>
            弧度转换成二维向量
            </summary>
            <param name="radian"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.RadianToVector2(System.Single,System.Single)">
            <summary>
            弧度转换成二维向量
            </summary>
            <param name="radian"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.DegreeToVector2(System.Single)">
            <summary>
            弧度度数转换成二维向量
            </summary>
            <param name="degree"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.DegreeToVector2(System.Single,System.Single)">
            <summary>
            弧度度数转换成二维向量
            </summary>
            <param name="degree"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Vector2ToRadian(NetumScan.Core.Vector2)">
            <summary>
            二维向量转换成弧度
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Vector2ToDegree(NetumScan.Core.Vector2)">
            <summary>
            二维向量转换成弧度度数
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.LookAtRadian(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>
            返回正切值为两个点的商的角度。
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.LookAtVector2(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>
            角度转换成二维向量
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.LookAtDegree(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>角度转换成二维向量
            
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MathHelpers.Distance(NetumScan.Core.Vector2,NetumScan.Core.Vector2)">
            <summary>
            获取两个点之间的球面距离。
            </summary>
            <param name="pos1">点1</param>
            <param name="pos2">点2</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.PingHelper">
            <summary>
            Ping帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.PingHelper.PingHost(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ping主机
            </summary>
            <param name="host">主机地址</param>
            <param name="timeout">超时时间</param>
            <param name="pingCount">Ping次数</param>
            <param name="waitTime">等待时间</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.PingHelper.GetIpFromHost(System.String)">
            <summary>
            从主机获取IP地址
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.PingResult">
            <summary>
            Ping结果
            </summary>
        </member>
        <member name="P:NetumScan.Core.PingResult.PingReplyList">
            <summary>
            Ping结果列表
            </summary>
        </member>
        <member name="P:NetumScan.Core.PingResult.Min">
            <summary>
            最小
            </summary>
        </member>
        <member name="P:NetumScan.Core.PingResult.Max">
            <summary>
            最大
            </summary>
        </member>
        <member name="P:NetumScan.Core.PingResult.Average">
            <summary>
            平均
            </summary>
        </member>
        <member name="M:NetumScan.Core.PingResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.PingResult.ToString">
            <summary>
            重写<see cref="M:NetumScan.Core.PingResult.ToString"/>方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.RegistryHelpers">
            <summary>
            注册表帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.CreateRegistry(System.String,System.String,Microsoft.Win32.RegistryHive)">
            <summary>
            创建注册表
            </summary>
            <param name="path">路径</param>
            <param name="value">值</param>
            <param name="root">顶级节点</param>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.CreateRegistry(System.String,System.String,System.String,Microsoft.Win32.RegistryHive)">
            <summary>
            创建注册表
            </summary>
            <param name="path">路径</param>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="root">顶级节点</param>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.CreateRegistry(System.String,System.Int32,Microsoft.Win32.RegistryHive)">
            <summary>
            创建注册表
            </summary>
            <param name="path">路径</param>
            <param name="value">值</param>
            <param name="root">顶级节点</param>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.CreateRegistry(System.String,System.String,System.Int32,Microsoft.Win32.RegistryHive)">
            <summary>
            创建注册表
            </summary>
            <param name="path">路径</param>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="root">顶级节点</param>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.RemoveRegistry(System.String,System.Boolean,Microsoft.Win32.RegistryHive)">
            <summary>
            删除注册表
            </summary>
            <param name="path">路径</param>
            <param name="recursive">是否递归处理</param>
            <param name="root">顶级节点</param>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.GetRegistryValue(System.String,System.String,Microsoft.Win32.RegistryHive)">
            <summary>
            获取注册表值
            </summary>
            <param name="path">路径</param>
            <param name="name">名称</param>
            <param name="root">顶级节点</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.CheckRegistry(System.String,System.String,System.String,Microsoft.Win32.RegistryHive)">
            <summary>
            检查注册表
            </summary>
            <param name="path">路径</param>
            <param name="name">名称</param>
            <param name="value">值</param>
            <param name="root">顶级节点</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RegistryHelpers.SearchProgramPath(System.String)">
            <summary>
            搜索程序路径
            </summary>
            <param name="fileName">文件名称</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.URLHelpers">
            <summary>
            URL 帮助类
            </summary>
        </member>
        <member name="F:NetumScan.Core.URLHelpers.URLCharacters">
            <summary>
            URL字符
            </summary>
        </member>
        <member name="F:NetumScan.Core.URLHelpers.URLPathCharacters">
            <summary>
            URL路径字符
            </summary>
        </member>
        <member name="F:NetumScan.Core.URLHelpers.ValidURLCharacters">
            <summary>
            有效的URL字符
            </summary>
        </member>
        <member name="F:NetumScan.Core.URLHelpers.BidiControlCharacters">
            <summary>
            控制字符
            </summary>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.OpenURL(System.String)">
            <summary>
            打开URL
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.URLEncode(System.String,System.Boolean,System.Boolean)">
            <summary>
            URL编码
            </summary>
            <param name="text"></param>
            <param name="isPath"></param>
            <param name="ignoreEmoji"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.URLEncodeIgnoreEmoji(System.String,System.Boolean)">
            <summary>
            URL编码忽略表情符号
            </summary>
            <param name="text"></param>
            <param name="isPath"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.RemoveBidiControlCharacters(System.String)">
            <summary>
            删除Bidi控制字符
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.ReplaceReservedCharacters(System.String,System.String)">
            <summary>
            替换保留字符
            </summary>
            <param name="text"></param>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.HtmlEncode(System.String)">
            <summary>
            Html编码
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.JSONEncode(System.String)">
            <summary>
            JSON编码
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.XMLEncode(System.String)">
            <summary>
            XML编码
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.URLDecode(System.String,System.Int32)">
            <summary>
            URL解码
            </summary>
            <param name="url"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.CombineURL(System.String,System.String)">
            <summary>
            合并URL
            </summary>
            <param name="url1"></param>
            <param name="url2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.CombineURL(System.String[])">
            <summary>
            合并URL
            </summary>
            <param name="urls"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.IsValidURL(System.String,System.Boolean)">
            <summary>
            是有效的URL
            </summary>
            <param name="url"></param>
            <param name="useRegex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.AddSlash(System.String,NetumScan.Core.SlashType)">
            <summary>
            加斜杠
            </summary>
            <param name="url"></param>
            <param name="slashType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.AddSlash(System.String,NetumScan.Core.SlashType,System.Int32)">
            <summary>
            加斜杠
            </summary>
            <param name="url"></param>
            <param name="slashType"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.GetFileName(System.String)">
            <summary>
            获取文件名
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.IsFileURL(System.String)">
            <summary>
            是文件URL
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.GetDirectoryPath(System.String)">
            <summary>
            获取目录路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.GetPaths(System.String)">
            <summary>
            获取路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.HasPrefix(System.String)">
            <summary>
            有前缀
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.FixPrefix(System.String,System.String)">
            <summary>
            固定前缀
            </summary>
            <param name="url"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.ForcePrefix(System.String,System.String)">
            <summary>
            强制前缀
            </summary>
            <param name="url"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.RemovePrefixes(System.String)">
            <summary>
            RemovePrefixes
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.GetHostName(System.String)">
            <summary>
            获取主机名
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.CreateQueryString(System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            创建查询字符串
            </summary>
            <param name="args"></param>
            <param name="customEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.CreateQueryString(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            创建查询字符串
            </summary>
            <param name="url"></param>
            <param name="args"></param>
            <param name="customEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.RemoveQueryString(System.String)">
            <summary>
            删除查询字符串
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.ParseQueryString(System.String)">
            <summary>
            解析查询字符串
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.URLHelpers.BuildUri(System.String,System.String,System.String)">
            <summary>
            构建Uri
            </summary>
            <param name="root"></param>
            <param name="path"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.HotkeyForm">
            <summary>
            热键窗体
            </summary>
        </member>
        <member name="T:NetumScan.Core.HotkeyForm.HotkeyEventHandler">
            <summary>
            热键事件委托
            </summary>
            <param name="id">Id</param>
            <param name="key">键值</param>
            <param name="modifier">修改键</param>
        </member>
        <member name="E:NetumScan.Core.HotkeyForm.HotkeyPress">
            <summary>
            热键按下事件
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyForm.HotkeyRepeatLimit">
            <summary>
            热键重复限制
            </summary>
        </member>
        <member name="M:NetumScan.Core.HotkeyForm.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.HotkeyForm.RegisterHotkey(NetumScan.Core.HotkeyInfo)">
            <summary>
            注册热键
            </summary>
            <param name="hotkeyInfo">热键信息</param>
        </member>
        <member name="M:NetumScan.Core.HotkeyForm.UnregisterHotkey(NetumScan.Core.HotkeyInfo)">
            <summary>
            卸载热键
            </summary>
            <param name="hotkeyInfo">热键信息</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HotkeyForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理 Windows 消息。
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:NetumScan.Core.HotkeyForm.OnKeyPressed(System.UInt16,System.Windows.Forms.Keys,NetumScan.Core.Modifiers)">
            <summary>
            热键按下事件
            </summary>
            <param name="id"></param>
            <param name="key"></param>
            <param name="modifier"></param>
        </member>
        <member name="T:NetumScan.Core.HotkeyInfo">
            <summary>
            热键信息
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.Hotkey">
            <summary>
            热键
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.KeyCode">
            <summary>
            键代码
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.ModifiersKeys">
            <summary>
            修改键
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.Control">
            <summary>
            Ctrl 修改键
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.Shift">
            <summary>
            Shift 修改键
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.Alt">
            <summary>
            Alt 修改键
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.Win">
            <summary>
            Win 修改键
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.ModifiersEnum">
            <summary>
            修改键枚举
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.IsOnlyModifiers">
            <summary>
            是否唯一修改键
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeyInfo.IsValidHotkey">
            <summary>
            是否为有效的热键
            </summary>
        </member>
        <member name="M:NetumScan.Core.HotkeyInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.HotkeyInfo.#ctor(System.Windows.Forms.Keys)">
            <summary>
            构造函数
            </summary>
            <param name="hotkey">键值</param>
        </member>
        <member name="M:NetumScan.Core.HotkeyInfo.#ctor(System.Windows.Forms.Keys,System.UInt16)">
            <summary>
            构造函数
            </summary>
            <param name="hotkey">热键</param>
            <param name="id">Id</param>
        </member>
        <member name="M:NetumScan.Core.HotkeyInfo.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.HotkeyInfo.ToStringWithSpaces(System.Windows.Forms.Keys)">
            <summary>
            带空格的字符串
            </summary>
            <param name="key">键值</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.InputHelpers">
            <summary>
            输入帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendKeyDown(NetumScan.Core.VirtualKeyCode)">
            <summary>
            发送键盘按下
            </summary>
            <param name="keyCode">键代码</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendKeyUp(NetumScan.Core.VirtualKeyCode)">
            <summary>
            发送键盘松开
            </summary>
            <param name="keyCode">键代码</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendKeyPress(NetumScan.Core.VirtualKeyCode)">
            <summary>
            发送键盘长按
            </summary>
            <param name="keyCode">键代码</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendKeyPressModifiers(NetumScan.Core.VirtualKeyCode,NetumScan.Core.VirtualKeyCode[])">
            <summary>
            发送键盘长按快捷键
            </summary>
            <param name="keyCode">键代码</param>
            <param name="modifiers"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendKeyPressText(System.String)">
            <summary>
            发送按键并按文本
            </summary>
            <param name="text">文本</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseDown(System.Windows.Forms.MouseButtons)">
            <summary>
            发送鼠标按下
            </summary>
            <param name="button">鼠标按钮</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseUp(System.Windows.Forms.MouseButtons)">
            <summary>
            发送鼠标松开
            </summary>
            <param name="button">鼠标按钮</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseClick(System.Windows.Forms.MouseButtons)">
            <summary>
            发送鼠标点击
            </summary>
            <param name="button">鼠标按钮</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseClick(System.Int32,System.Int32,System.Windows.Forms.MouseButtons)">
            <summary>
            发送鼠标点击
            </summary>
            <param name="x">x坐标</param>
            <param name="y">y坐标</param>
            <param name="button">鼠标按钮</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseClick(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            发送鼠标点击
            </summary>
            <param name="position">位置</param>
            <param name="button">鼠标按钮</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseMove(System.Int32,System.Int32)">
            <summary>
            发送鼠标移动
            </summary>
            <param name="x">x坐标</param>
            <param name="y">y坐标</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseMove(System.Drawing.Point)">
            <summary>
            发送鼠标移动
            </summary>
            <param name="position">位置</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputHelpers.SendMouseWheel(System.Int32)">
            <summary>
            发送鼠标滚轮
            </summary>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.InputManager">
            <summary>
            输入管理器
            </summary>
        </member>
        <member name="P:NetumScan.Core.InputManager.InputList">
            <summary>
            输入列表
            </summary>
        </member>
        <member name="P:NetumScan.Core.InputManager.AutoClearAfterSend">
            <summary>
            发送后自动清除发送后自动清除
            </summary>
        </member>
        <member name="M:NetumScan.Core.InputManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.InputManager.SendInputs">
            <summary>
            发送输入
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputManager.ClearInputs">
            <summary>
            清除输入
            </summary>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddKeyInput(NetumScan.Core.VirtualKeyCode,System.Boolean)">
            <summary>
            添加键输入
            </summary>
            <param name="keyCode">键代码</param>
            <param name="isKeyUp">是否松开按键</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddKeyDown(NetumScan.Core.VirtualKeyCode)">
            <summary>
            添加键按下
            </summary>
            <param name="keyCode">键代码</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddKeyUp(NetumScan.Core.VirtualKeyCode)">
            <summary>
            添加键松开
            </summary>
            <param name="keyCode">键代码</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddKeyPress(NetumScan.Core.VirtualKeyCode)">
            <summary>
            添加键长按
            </summary>
            <param name="keyCode">键代码 </param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddKeyPressModifiers(NetumScan.Core.VirtualKeyCode,NetumScan.Core.VirtualKeyCode[])">
            <summary>
            添加键长按并输入其他键
            </summary>
            <param name="keyCode"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddKeyPressText(System.String)">
            <summary>
            按文本添加按键
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseInput(System.Windows.Forms.MouseButtons,System.Boolean)">
            <summary>
            添加鼠标输入
            </summary>
            <param name="button">鼠标按钮</param>
            <param name="isMouseUp">是否松开</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseDown(System.Windows.Forms.MouseButtons)">
            <summary>
            添加鼠标按下
            </summary>
            <param name="button">鼠标按钮</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseUp(System.Windows.Forms.MouseButtons)">
            <summary>
            添加鼠标松开
            </summary>
            <param name="button">鼠标按钮</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseClick(System.Windows.Forms.MouseButtons)">
            <summary>
            添加鼠标点击
            </summary>
            <param name="button">鼠标按钮</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseClick(System.Int32,System.Int32,System.Windows.Forms.MouseButtons)">
            <summary>
            添加鼠标在指定位置点击
            </summary>
            <param name="x">x坐标</param>
            <param name="y">y坐标</param>
            <param name="button">鼠标按钮</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseClick(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            添加鼠标在指定位置点击
            </summary>
            <param name="position">位置</param>
            <param name="button">鼠标按钮</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseMove(System.Int32,System.Int32)">
            <summary>
            添加鼠标移动
            </summary>
            <param name="x">x坐标</param>
            <param name="y">y坐标</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseMove(System.Drawing.Point)">
            <summary>
            添加鼠标移动
            </summary>
            <param name="position">位置</param>
        </member>
        <member name="M:NetumScan.Core.InputManager.AddMouseWheel(System.Int32)">
            <summary>
            添加鼠标滚轮输入
            </summary>
            <param name="delta"></param>
        </member>
        <member name="T:NetumScan.Core.KeyboardHook">
            <summary>
            键盘钩子
            </summary>
        </member>
        <member name="E:NetumScan.Core.KeyboardHook.KeyDown">
            <summary>
            按下、松开
            </summary>
        </member>
        <member name="E:NetumScan.Core.KeyboardHook.KeyUp">
            <summary>
            按下、松开
            </summary>
        </member>
        <member name="M:NetumScan.Core.KeyboardHook.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.KeyboardHook.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.KeyboardHook.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:NetumScan.Core.CodeMenu">
            <summary>
            代码菜单
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenu.MenuLocation">
            <summary>
            菜单位置
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenu.MenuLocationBottom">
            <summary>
            是否为菜单位置底部
            </summary>
        </member>
        <member name="M:NetumScan.Core.CodeMenu.#ctor(System.Windows.Forms.TextBoxBase,NetumScan.Core.CodeMenuItem[])">
            <summary>
            构造函数
            </summary>
            <param name="tbb">文本输出框</param>
            <param name="items">代码菜单项</param>
        </member>
        <member name="M:NetumScan.Core.CodeMenu.Create``1(System.Windows.Forms.TextBoxBase,``0[],NetumScan.Core.CodeMenuItem[])">
            <summary>
            创建
            </summary>
            <typeparam name="TEntry"></typeparam>
            <param name="tb">文本框</param>
            <param name="ignoreList"></param>
            <param name="extraItems"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CodeMenu.Create``1(System.Windows.Forms.TextBoxBase,``0[])">
            <summary>
            创建
            </summary>
            <typeparam name="TEntry"></typeparam>
            <param name="tb"></param>
            <param name="ignoreList"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.CodeMenuEntry">
            <summary>
            代码菜单输入
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuEntry.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuEntry.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuEntry.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuEntry.Category">
            <summary>
            类别
            </summary>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntry.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="value">值</param>
            <param name="description">描述</param>
            <param name="category">类别</param>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntry.ToPrefixString">
            <summary>
            前缀字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntry.ToPrefixString(System.String)">
            <summary>
            前缀字符串
            </summary>
            <param name="prefix">前缀</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.CodeMenuEntryActions">
            <summary>
            代码菜单输入操作
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuEntryActions.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryActions.input">
            <summary>
            输入操作
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryActions.output">
            <summary>
            输出操作
            </summary>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntryActions.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="value">值</param>
            <param name="description">描述</param>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntryActions.Parse(System.String,System.String,System.String)">
            <summary>
            解析
            </summary>
            <param name="pattern">变量</param>
            <param name="inputPath">输入路径</param>
            <param name="outputPath">输出路径</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.CodeMenuEntryFilename">
            <summary>
            代码菜单输入文件名
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuEntryFilename.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.t">
            <summary>
            活动窗口标题
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.pn">
            <summary>
            活动窗口进程名
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.y">
            <summary>
            当前年份
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.yy">
            <summary>
            当前年份（2位数字）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.mo">
            <summary>
            当前月份
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.mon">
            <summary>
            当前月名称（本地语言）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.mon2">
            <summary>
            当前月名称（英语）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.w">
            <summary>
            当前周（本地语言）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.w2">
            <summary>
            当前周（英语）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.wy">
            <summary>
            周数
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.d">
            <summary>
            当前日
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.h">
            <summary>
            当前小时
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.mi">
            <summary>
            当前分
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.s">
            <summary>
            当前秒
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.ms">
            <summary>
            当前毫米
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.pm">
            <summary>
            获取AM/PM
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.unix">
            <summary>
            Unix时间戳
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.i">
            <summary>
            自动递增数,使用{n}补零
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.ia">
            <summary>
            自动递增的字母数字不区分大小写。0 pad left using {n}
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.iAa">
            <summary>
            自动递增的大小写敏感字母与数字
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.ib">
            <summary>
            由 {n} 为基础制动递增的字母数字 (1 &lt; n &lt; 63)
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.ix">
            <summary>
            自动递增的十六进制
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.rn">
            <summary>
            随机数 0 至 9
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.ra">
            <summary>
            随机字符
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.rna">
            <summary>
            随机的非易混淆字母与数字字符。使用 {n} 表示重复次数
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.rx">
            <summary>
            随机的十六进制字符。重复使用 {n}
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.guid">
            <summary>
            随机 GUID
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.radjective">
            <summary>
            随机形容词
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.ranimal">
            <summary>
            随机动物
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.remoji">
            <summary>
            随机 emoji 表情。用 {n} 标识重复次数
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.rf">
            <summary>
            从文件产生随机线条，使用 {filepath} 选取文件
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.width">
            <summary>
            图像宽度
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.height">
            <summary>
            图像高度
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.un">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.uln">
            <summary>
            用户登录名
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.cn">
            <summary>
            计算机名称
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryFilename.n">
            <summary>
            新线条
            </summary>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntryFilename.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:NetumScan.Core.CodeMenuEntryPixelInfo">
            <summary>
            代码菜单输入像素信息
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuEntryPixelInfo.Prefix">
            <summary>
            前缀
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.r255">
            <summary>
            红色(0-255)
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.g255">
            <summary>
            绿色(0-255)
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.b255">
            <summary>
            蓝色(0-255)
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.r1">
            <summary>
            红色（0-1）。使用{n}指定十进制精度，默认值为3。
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.g1">
            <summary>
            绿色（0-1）。使用{n}指定十进制精度，默认值为3。
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.b1">
            <summary>
            蓝色（0-1）。使用{n}指定十进制精度，默认值为3。
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.hex">
            <summary>
            十六进制颜色值（小写）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.HEX">
            <summary>
            十六进制颜色值（大写）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.c100">
            <summary>
            青色（0-100）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.m100">
            <summary>
            洋红色（0-100）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.y100">
            <summary>
            黄色（0-100）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.k100">
            <summary>
            关键颜色（0-100）
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.name">
            <summary>
            颜色名称
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.x">
            <summary>
            X位置
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.y">
            <summary>
            Y位置
            </summary>
        </member>
        <member name="F:NetumScan.Core.CodeMenuEntryPixelInfo.n">
            <summary>
            新线
            </summary>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntryPixelInfo.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="value">值</param>
            <param name="description">描述</param>
        </member>
        <member name="M:NetumScan.Core.CodeMenuEntryPixelInfo.Parse(System.String,System.Drawing.Color,System.Drawing.Point)">
            <summary>
            解析
            </summary>
            <param name="input">输入</param>
            <param name="color">颜色</param>
            <param name="position">位置</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.CodeMenuItem">
            <summary>
            代码菜单项
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuItem.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:NetumScan.Core.CodeMenuItem.Category">
            <summary>
            类别
            </summary>
        </member>
        <member name="M:NetumScan.Core.CodeMenuItem.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">名称</param>
            <param name="description">描述</param>
            <param name="category">类别</param>
        </member>
        <member name="T:NetumScan.Core.NameParserType">
            <summary>
            名称分析器类型
            </summary>
        </member>
        <member name="F:NetumScan.Core.NameParserType.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:NetumScan.Core.NameParserType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:NetumScan.Core.NameParserType.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="F:NetumScan.Core.NameParserType.FolderPath">
            <summary>
            文件夹路径
            </summary>
        </member>
        <member name="F:NetumScan.Core.NameParserType.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="F:NetumScan.Core.NameParserType.URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="T:NetumScan.Core.NameParser">
            <summary>
            名称分析器
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.MaxNameLength">
            <summary>
            最大命名长度
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.MaxTitleLength">
            <summary>
            最大标题长度
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.AutoIncrementNumber">
            <summary>
            自动递增数
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.ImageWidth">
            <summary>
            图片宽度
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.ImageHeight">
            <summary>
            图片高度
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.WindowText">
            <summary>
            窗体文本
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.ProcessName">
            <summary>
            进程名称
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.CustomTimeZone">
            <summary>
            CustomTimeZone
            </summary>
        </member>
        <member name="P:NetumScan.Core.NameParser.IsPreviewMode">
            <summary>
            是否预览模式
            </summary>
        </member>
        <member name="M:NetumScan.Core.NameParser.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.NameParser.#ctor(NetumScan.Core.NameParserType)">
            <summary>
            构造函数
            </summary>
            <param name="nameParserType">命名分析器类型</param>
        </member>
        <member name="M:NetumScan.Core.NameParser.Parse(NetumScan.Core.NameParserType,System.String)">
            <summary>
            解析
            </summary>
            <param name="nameParserType">命名分析器类型</param>
            <param name="pattern">命名模式</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NameParser.Parse(System.String)">
            <summary>
            解析
            </summary>
            <param name="pattern">命名模式</param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.LayeredForm">
            <summary>
            分层窗体
            </summary>
        </member>
        <member name="M:NetumScan.Core.LayeredForm.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:NetumScan.Core.LayeredForm.CreateParams">
            <summary>
            创建参数
            </summary>
        </member>
        <member name="M:NetumScan.Core.LayeredForm.SelectBitmap(System.Drawing.Bitmap,System.Int32)">
            <summary>
            选择位图
            </summary>
            <param name="bitmap">位图</param>
            <param name="opacity">透明度</param>
        </member>
        <member name="T:NetumScan.Core.NativeConstants">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.GCL_HICONSM">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.GCL_HICON">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ICON_SMALL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ICON_BIG">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ICON_SMALL2">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SC_MINIMIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.HT_CAPTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.CURSOR_SHOWING">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.GWL_STYLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DWM_TNP_RECTDESTINATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DWM_TNP_RECTSOURCE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DWM_TNP_OPACITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DWM_TNP_VISIBLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DWM_TNP_SOURCECLIENTAREAONLY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.WH_KEYBOARD_LL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.WH_MOUSE_LL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ULW_ALPHA">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.AC_SRC_OVER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.AC_SRC_ALPHA">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DI_MASK">
            <summary>
            Draws the icon or cursor using the mask.
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DI_IMAGE">
            <summary>
            Draws the icon or cursor using the image.
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DI_NORMAL">
            <summary>
            Combination of DI_IMAGE and DI_MASK.
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DI_COMPAT">
            <summary>
            Draws the icon or cursor using the system default image rather than the user-specified image.
            For more information, see About Cursors. Windows NT4.0 and later: This flag is ignored.
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DI_DEFAULTSIZE">
            <summary>
            Draws the icon or cursor using the width and height specified by the system metric values for cursors or icons,
            if the cxWidth and cyWidth parameters are set to zero. If this flag is not specified and cxWidth and cyWidth are set to zero,
            the function uses the actual resource size.
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DI_NOMIRROR">
            <summary>
            Windows XP: Draws the icon as an unmirrored icon. By default, the icon is drawn as a mirrored icon if hdc is mirrored.
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ECM_FIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.EM_SETCUEBANNER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.IDC_HAND">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.MA_ACTIVATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.MA_ACTIVATEANDEAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.MA_NOACTIVATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.MA_NOACTIVATEANDEAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.MOUSE_MOVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.IID_IImageList">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.IID_IImageList2">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SHIL_LARGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SHIL_SMALL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SHIL_EXTRALARGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SHIL_SYSSMALL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SHIL_JUMBO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SHIL_LAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ILD_TRANSPARENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ILD_IMAGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.FILE_FLAG_OVERLAPPED">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.FILE_SHARE_READ">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.FILE_SHARE_WRITE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.GENERIC_READ">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.GENERIC_WRITE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.ACCESS_NONE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.INVALID_HANDLE_VALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.OPEN_EXISTING">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.WAIT_TIMEOUT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.WAIT_OBJECT_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.WAIT_FAILED">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.WAIT_INFINITE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DIGCF_PRESENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DIGCF_DEVICEINTERFACE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DIGCF_ALLCLASSES">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_ADDRESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_BUSNUMBER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_BUSTYPEGUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_CAPABILITIES">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_CHARACTERISTICS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_CLASSGUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_COMPATIBLEIDS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_CONFIGFLAGS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_DEVICE_POWER_DATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_DEVICEDESC">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_DEVTYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_DRIVER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_ENUMERATOR_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_EXCLUSIVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_FRIENDLYNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_HARDWAREID">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_LEGACYBUSTYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_LOCATION_INFORMATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_LOWERFILTERS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_MFG">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_PHYSICAL_DEVICE_OBJECT_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_REMOVAL_POLICY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_REMOVAL_POLICY_HW_DEFAULT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_REMOVAL_POLICY_OVERRIDE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_SECURITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_SECURITY_SDS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_SERVICE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_UI_NUMBER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_UI_NUMBER_DESC_FORMAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.SPDRP_UPPERFILTERS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.NativeConstants.DEVPKEY_Device_BusReportedDeviceDesc">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.AnimateWindowFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_HOR_POSITIVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_HOR_NEGATIVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_VER_POSITIVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_VER_NEGATIVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_CENTER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_HIDE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_ACTIVATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_SLIDE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.AnimateWindowFlags.AW_BLEND">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.HRESULT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HRESULT.S_FALSE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HRESULT.S_OK">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HRESULT.E_INVALIDARG">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HRESULT.E_OUTOFMEMORY">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.KeyEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyEvent.WM_KEYDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyEvent.WM_KEYUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyEvent.WM_SYSKEYUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyEvent.WM_SYSKEYDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ThreadAccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.TERMINATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.SUSPEND_RESUME">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.GET_CONTEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.SET_CONTEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.SET_INFORMATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.QUERY_INFORMATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.SET_THREAD_TOKEN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.IMPERSONATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ThreadAccess.DIRECT_IMPERSONATION">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SendMessageTimeoutFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SendMessageTimeoutFlags.SMTO_NORMAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SendMessageTimeoutFlags.SMTO_BLOCK">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SendMessageTimeoutFlags.SMTO_ABORTIFHUNG">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SendMessageTimeoutFlags.SMTO_NOTIMEOUTIFNOTHUNG">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.WindowPlacementFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowPlacementFlags.WPF_SETMINPOSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowPlacementFlags.WPF_RESTORETOMAXIMIZED">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowPlacementFlags.WPF_ASYNCWINDOWPLACEMENT">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.GetWindowConstants">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_HWNDFIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_HWNDLAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_HWNDNEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_HWNDPREV">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_OWNER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_CHILD">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_ENABLEDPOPUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.GetWindowConstants.GW_MAX">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ClassStyles">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_VREDRAW">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_HREDRAW">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_DBLCLKS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_OWNDC">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_CLASSDC">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_PARENTDC">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_NOCLOSE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_SAVEBITS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_BYTEALIGNCLIENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_BYTEALIGNWINDOW">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_GLOBALCLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_IME">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ClassStyles.CS_DROPSHADOW">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.Modifiers">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.Modifiers.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.Modifiers.Alt">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.Modifiers.Control">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.Modifiers.Shift">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.Modifiers.Win">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.RegionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegionType.ERROR">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegionType.NULLREGION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegionType.SIMPLEREGION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegionType.COMPLEXREGION">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.PRF">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PRF.CHECKVISIBLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PRF.NONCLIENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PRF.CLIENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PRF.ERASEBKGND">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PRF.CHILDREN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PRF.OWNED">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ABMsg">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_NEW">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_REMOVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_QUERYPOS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_SETPOS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_GETSTATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_GETTASKBARPOS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_ACTIVATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_GETAUTOHIDEBAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_SETAUTOHIDEBAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_WINDOWPOSCHANGED">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABMsg.ABM_SETSTATE">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ABEdge">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABEdge.ABE_LEFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABEdge.ABE_TOP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABEdge.ABE_RIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABEdge.ABE_BOTTOM">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ABState">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABState.ABS_MANUAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABState.ABS_AUTOHIDE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABState.ABS_ALWAYSONTOP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ABState.ABS_AUTOHIDEANDONTOP">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.TaskBarEdge">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.TaskBarEdge.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.TaskBarEdge.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.TaskBarEdge.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.TaskBarEdge.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DWM_BB">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_BB.Enable">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_BB.BlurRegion">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_BB.TransitionMaximized">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DwmNCRenderingPolicy">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmNCRenderingPolicy.UseWindowStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmNCRenderingPolicy.Disabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmNCRenderingPolicy.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmNCRenderingPolicy.Last">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SystemMetric">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXSCREEN">
            <summary>
             Width of the screen of the primary display monitor, in pixels. This is the same values obtained by calling GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYSCREEN">
            <summary>
            Height of the screen of the primary display monitor, in pixels. This is the same values obtained by calling GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYVSCROLL">
            <summary>
            Height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXVSCROLL">
            <summary>
            Width of a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYCAPTION">
            <summary>
            Height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXBORDER">
            <summary>
            Width of a window border, in pixels. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYBORDER">
            <summary>
            Height of a window border, in pixels. This is equivalent to the SM_CYEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the height of the horizontal border and SM_CYFIXEDFRAME is the width of the vertical border.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the height of the horizontal border and SM_CYFIXEDFRAME is the width of the vertical border.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYVTHUMB">
            <summary>
            Height of the thumb box in a vertical scroll bar, in pixels
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXHTHUMB">
            <summary>
            Width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXICON">
            <summary>
            Default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions specified by SM_CXICON and SM_CYICON
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYICON">
            <summary>
            Default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXCURSOR">
            <summary>
            Width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYCURSOR">
            <summary>
            Height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMENU">
            <summary>
            Height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXFULLSCREEN">
            <summary>
            Width of the client area for a full-screen window on the primary display monitor, in pixels. To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars, call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYFULLSCREEN">
            <summary>
            Height of the client area for a full-screen window on the primary display monitor, in pixels. To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars, call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a wheel is installed; zero otherwise
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYHSCROLL">
            <summary>
            Height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXHSCROLL">
            <summary>
            Width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; zero otherwise.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_SWAPBUTTON">
            <summary>
            Nonzero if the left and right mouse buttons are reversed; zero otherwise.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_RESERVED1">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_RESERVED2">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_RESERVED3">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_RESERVED4">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMIN">
            <summary>
            Minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMIN">
            <summary>
            Minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXSIZE">
            <summary>
            Width of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYSIZE">
            <summary>
            Height of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window that can be resized, in pixels. SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window that can be resized, in pixels. SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMINTRACK">
            <summary>
            Minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMINTRACK">
            <summary>
            Minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXDOUBLECLK">
            <summary>
            Width of the rectangle around the location of a first click in a double-click sequence, in pixels. The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider the two clicks a double-click
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYDOUBLECLK">
            <summary>
            Height of the rectangle around the location of a first click in a double-click sequence, in pixels. The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider the two clicks a double-click. (The two clicks must also occur within a specified time.)
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXICONSPACING">
            <summary>
            Width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CXICON
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYICONSPACING">
            <summary>
            Height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; zero if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; zero otherwise. (WinMe/95/98): Unicode
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CMOUSEBUTTONS">
            <summary>
            Number of buttons on mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_SECURE">
            <summary>
            Nonzero if security is present; zero otherwise.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXEDGE">
            <summary>
            Width of a 3-D border, in pixels. This is the 3-D counterpart of SM_CXBORDER
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYEDGE">
            <summary>
            Height of a 3-D border, in pixels. This is the 3-D counterpart of SM_CYBORDER
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMINSPACING">
            <summary>
            Width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMINSPACING">
            <summary>
            Height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXSMICON">
            <summary>
            Recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYSMICON">
            <summary>
            Recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYSMCAPTION">
            <summary>
            Height of a small caption, in pixels
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXSMSIZE">
            <summary>
            Width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYSMSIZE">
            <summary>
            Height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMENUSIZE">
            <summary>
            Width of menu bar buttons, such as the child window close button used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMENUSIZE">
            <summary>
            Height of menu bar buttons, such as the child window close button used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_ARRANGE">
            <summary>
            Flags specifying how the system arranged minimized windows
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMINIMIZED">
            <summary>
            Width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMINIMIZED">
            <summary>
            Height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMAXTRACK">
            <summary>
            Default maximum width of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMAXTRACK">
            <summary>
            Default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMAXIMIZED">
            <summary>
            Default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMAXIMIZED">
            <summary>
            Default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_NETWORK">
            <summary>
            Least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CLEANBOOT">
            <summary>
            Value that specifies how the system was started: 0-normal, 1-failsafe, 2-failsafe /w net
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXDRAG">
            <summary>
            Width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYDRAG">
            <summary>
            Height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins. This value is in pixels. It allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present the information only in audible form; zero otherwise.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXMENUCHECK">
            <summary>
            Width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYMENUCHECK">
            <summary>
            Height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; zero otherwise
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, zero if not.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; zero otherwise. This value is rarely zero, because of support for virtual mice and because some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_XVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the top of the virtual screen
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_YVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the left of the virtual screen
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Width of the virtual screen
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Height of the virtual screen
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CMONITORS">
            <summary>
            Number of display monitors on the desktop
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_SAMEDISPLAYFORMAT">
            <summary>
            Windows XP (v5.1+) Nonzero if all the display monitors have the same color format, zero otherwise. Note that two displays can have the same bit depth, but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits, or those bits can be located in different places in a pixel's color value.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_IMMENABLED">
            <summary>
            Windows XP (v5.1+) Nonzero if Input Method Manager/Input Method Editor features are enabled; zero otherwise
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CXFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Width of the left and right edges of the focus rectangle drawn by DrawFocusRect. This value is in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CYFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Height of the top and bottom edges of the focus rectangle drawn by DrawFocusRect. This value is in pixels.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition, zero if not.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, zero if not.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CMETRICS_OTHER">
            <summary>
            Metrics Other
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CMETRICS_2000">
            <summary>
            Metrics Windows 2000
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CMETRICS_NT">
            <summary>
            Metrics Windows NT
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_REMOTESESSION">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services client session, the return value is nonzero. If the calling process is associated with the Terminal Server console session, the return value is zero. The console session is not necessarily the physical console - see WTSGetActiveConsoleSessionId for more information.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_SHUTTINGDOWN">
            <summary>
            Windows XP (v5.1+) Nonzero if the current session is shutting down; zero otherwise
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_REMOTECONTROL">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal Services environment. Its value is nonzero if the current session is remotely controlled; zero otherwise
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_CONVERTIBLESLATEMODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SystemMetric.SM_SYSTEMDOCKED">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.TernaryRasterOperations">
            <summary>
                Specifies a raster-operation code. These codes define how the color data for the
                source rectangle is to be combined with the color data for the destination
                rectangle to achieve the final color.
            </summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.SRCCOPY">
            <summary>dest = source</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.SRCPAINT">
            <summary>dest = source OR dest</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.SRCAND">
            <summary>dest = source AND dest</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.SRCINVERT">
            <summary>dest = source XOR dest</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.SRCERASE">
            <summary>dest = source AND (NOT dest)</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.NOTSRCCOPY">
            <summary>dest = (NOT source)</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.NOTSRCERASE">
            <summary>dest = (NOT src) AND (NOT dest)</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.MERGECOPY">
            <summary>dest = (source AND pattern)</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.MERGEPAINT">
            <summary>dest = (NOT source) OR dest</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.PATCOPY">
            <summary>dest = pattern</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.PATPAINT">
            <summary>dest = DPSnoo</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.PATINVERT">
            <summary>dest = pattern XOR dest</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.DSTINVERT">
            <summary>dest = (NOT dest)</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.BLACKNESS">
            <summary>dest = BLACK</summary>
        </member>
        <member name="F:NetumScan.Core.TernaryRasterOperations.WHITENESS">
            <summary>dest = WHITE</summary>
        </member>
        <member name="T:NetumScan.Core.WindowShowStyle">
            <summary>Enumeration of the different ways of showing a window using ShowWindow</summary>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.Hide">
            <summary>Hides the window and activates another window.</summary>
            <remarks>See SW_HIDE</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ShowNormal">
            <summary>Activates and displays a window. If the window is minimized
            or maximized, the system restores it to its original size and
            position. An application should specify this flag when displaying
            the window for the first time.</summary>
            <remarks>See SW_SHOWNORMAL</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ShowMinimized">
            <summary>Activates the window and displays it as a minimized window.</summary>
            <remarks>See SW_SHOWMINIMIZED</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ShowMaximized">
            <summary>Activates the window and displays it as a maximized window.</summary>
            <remarks>See SW_SHOWMAXIMIZED</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.Maximize">
            <summary>Maximizes the specified window.</summary>
            <remarks>See SW_MAXIMIZE</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ShowNormalNoActivate">
            <summary>Displays a window in its most recent size and position.
            This value is similar to "ShowNormal", except the window is not
            actived.</summary>
            <remarks>See SW_SHOWNOACTIVATE</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.Show">
            <summary>Activates the window and displays it in its current size
            and position.</summary>
            <remarks>See SW_SHOW</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.Minimize">
            <summary>Minimizes the specified window and activates the next
            top-level window in the Z order.</summary>
            <remarks>See SW_MINIMIZE</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ShowMinNoActivate">
            <summary>Displays the window as a minimized window. This value is
            similar to "ShowMinimized", except the window is not activated.</summary>
            <remarks>See SW_SHOWMINNOACTIVE</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ShowNoActivate">
            <summary>Displays the window in its current size and position. This
            value is similar to "Show", except the window is not activated.</summary>
            <remarks>See SW_SHOWNA</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.Restore">
            <summary>Activates and displays the window. If the window is
            minimized or maximized, the system restores it to its original size
            and position. An application should specify this flag when restoring
            a minimized window.</summary>
            <remarks>See SW_RESTORE</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ShowDefault">
            <summary>Sets the show state based on the SW_ value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.</summary>
            <remarks>See SW_SHOWDEFAULT</remarks>
        </member>
        <member name="F:NetumScan.Core.WindowShowStyle.ForceMinimized">
            <summary>Windows 2000/XP: Minimizes a window, even if the thread
            that owns the window is hung. This flag should only be used when
            minimizing windows from a different thread.</summary>
            <remarks>See SW_FORCEMINIMIZE</remarks>
        </member>
        <member name="T:NetumScan.Core.WindowsMessages">
            <summary>
            Windows Messages
            Defined in winuser.h from Windows SDK v6.1
            Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen.
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            /// </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application.
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window.
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed.
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_KEYLAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu) or when the user chooses the maximize button, minimize button, restore button, or close button.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.TABLET_FIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.TABLET_LAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette.
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.HANDHELDFIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.HANDHELDLAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.AFXFIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.AFXLAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PENWINFIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.PENWINLAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowsMessages.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="T:NetumScan.Core.WindowStyles">
            <summary>
            Window Styles
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_OVERLAPPED">
            <summary>
            Creates an overlapped window. An overlapped window usually has a caption and a border.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_POPUP">
            <summary>
            Creates a pop-up window. Cannot be used with the <see cref="F:NetumScan.Core.WindowStyles.WS_CHILD"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_CHILD">
            <summary>
            Creates a child window. Cannot be used with the <see cref="F:NetumScan.Core.WindowStyles.WS_POPUP"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_MINIMIZE">
            <summary>
            Creates a window that is initially minimized. For use with the <see cref="F:NetumScan.Core.WindowStyles.WS_OVERLAPPED"/> style only.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_VISIBLE">
            <summary>
            Creates a window that is initially visible.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_DISABLED">
            <summary>
            Creates a window that is initially disabled.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a paint message, the WS_CLIPSIBLINGS style clips all other overlapped child windows out of the region of the child window to be updated. (If WS_CLIPSIBLINGS is not given and child windows overlap, when you draw within the client area of a child window, it is possible to draw within the client area of a neighboring child window.) For use with the <see cref="F:NetumScan.Core.WindowStyles.WS_CHILD"/> style only.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_CLIPCHILDREN">
            <summary>
            Excludes the area occupied by child windows when you draw within the parent window.
            Used when you create the parent window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_MAXIMIZE">
            <summary>
            Creates a window of maximum size.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_BORDER">
            <summary>
            Creates a window that has a border.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_DLGFRAME">
            <summary>
            Creates a window with a double border but no title.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_VSCROLL">
            <summary>
            Creates a window that has a vertical scroll bar.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_HSCROLL">
            <summary>
            Creates a window that has a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_SYSMENU">
            <summary>
            Creates a window that has a Control-menu box in its title bar. Used only for windows with title bars.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_THICKFRAME">
            <summary>
            Creates a window with a thick frame that can be used to size the window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_GROUP">
            <summary>
            Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys. All controls defined with the WS_GROUP style FALSE after the first control belong to the same group. The next control with the WS_GROUP style starts the next group (that is, one group ends where the next begins).
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_TABSTOP">
            <summary>
            Specifies one of any number of controls through which the user can move by using the TAB key. The TAB key moves the user to the next control specified by the WS_TABSTOP style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_MINIMIZEBOX">
            <summary>
            Creates a window that has a Minimize button.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_MAXIMIZEBOX">
            <summary>
            Creates a window that has a Maximize button.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_CAPTION">
            <summary>
            Creates a window that has a title bar (implies the <see cref="F:NetumScan.Core.WindowStyles.WS_BORDER"/> style).
            Cannot be used with the <see cref="F:NetumScan.Core.WindowStyles.WS_DLGFRAME"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_TILED">
            <summary>
            Creates an overlapped window. An overlapped window has a title bar and a border. Same as the <see cref="F:NetumScan.Core.WindowStyles.WS_OVERLAPPED"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_ICONIC">
            <summary>
            Creates a window that is initially minimized. Same as the <see cref="F:NetumScan.Core.WindowStyles.WS_MINIMIZE"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_SIZEBOX">
            <summary>
            Creates a window that has a sizing border. Same as the <see cref="F:NetumScan.Core.WindowStyles.WS_THICKFRAME"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_TILEDWINDOW">
            <summary>
            Creates an overlapped window with the <see cref="F:NetumScan.Core.WindowStyles.WS_OVERLAPPED"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_CAPTION"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_SYSMENU"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_THICKFRAME"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_MINIMIZEBOX"/>, and <see cref="F:NetumScan.Core.WindowStyles.WS_MAXIMIZEBOX"/> styles. Same as the <see cref="F:NetumScan.Core.WindowStyles.WS_OVERLAPPEDWINDOW"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>
            Creates an overlapped window with the <see cref="F:NetumScan.Core.WindowStyles.WS_OVERLAPPED"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_CAPTION"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_SYSMENU"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_THICKFRAME"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_MINIMIZEBOX"/>, and <see cref="F:NetumScan.Core.WindowStyles.WS_MAXIMIZEBOX"/> styles.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_POPUPWINDOW">
            <summary>
            Creates a pop-up window with the <see cref="F:NetumScan.Core.WindowStyles.WS_BORDER"/>, <see cref="F:NetumScan.Core.WindowStyles.WS_POPUP"/>, and <see cref="F:NetumScan.Core.WindowStyles.WS_SYSMENU"/> styles. The WS_CAPTION style must be combined with the <see cref="F:NetumScan.Core.WindowStyles.WS_POPUPWINDOW"/> style to make the Control menu visible.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_CHILDWINDOW">
            <summary>
            Same as the <see cref="F:NetumScan.Core.WindowStyles.WS_CHILD"/> style.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_DLGMODALFRAME">
            <summary>
            Designates a window with a double border that may (optionally) be created with a title bar when you specify the <see cref="F:NetumScan.Core.WindowStyles.WS_CAPTION"/> style flag in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style will not send the WM_PARENTNOTIFY message to its parent window when the child window is created or destroyed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all nontopmost windows and stay above them even when the window is deactivated. An application can use the <see cref="M:NetumScan.Core.NativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,NetumScan.Core.SetWindowPosFlags)"/> member function to add or remove this attribute.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-and-drop files.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style is to be transparent. That is, any windows that are beneath the window are not obscured by the window. A window created with this style receives WM_PAINT messages only after all sibling windows beneath it have been updated.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_MDICHILD">
            <summary>
            Creates an MDI child window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window, which is a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the task bar or in the window that appears when the user presses ALT+TAB.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a 3D look — that is, a border with a sunken edge.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_RIGHT">
            <summary>
            Gives a window generic right-aligned properties. This depends on the window class.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_LEFT">
            <summary>
            Gives window generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_RTLREADING">
            <summary>
            Displays the window text using right-to-left reading order properties.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_LTRREADING">
            <summary>
            Displays the window text using left-to-right reading order properties. This is the default.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_LEFTSCROLLBAR">
            <summary>
            Places a vertical scroll bar to the left of the client area.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Places a vertical scroll bar (if present) to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_CONTROLPARENT">
            <summary>
            Allows the user to navigate among the child windows of the window by using the TAB key.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the <see cref="F:NetumScan.Core.WindowStyles.WS_EX_CLIENTEDGE"/> and <see cref="F:NetumScan.Core.WindowStyles.WS_EX_WINDOWEDGE"/> styles.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the <see cref="F:NetumScan.Core.WindowStyles.WS_EX_WINDOWEDGE"/> and <see cref="F:NetumScan.Core.WindowStyles.WS_EX_TOPMOST"/> styles.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either <see cref="F:NetumScan.Core.ClassStyles.CS_OWNDC"/> or <see cref="F:NetumScan.Core.ClassStyles.CS_CLASSDC"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either <see cref="F:NetumScan.Core.ClassStyles.CS_OWNDC"/> or <see cref="F:NetumScan.Core.ClassStyles.CS_CLASSDC"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.WindowStyles.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
            To activate the window, use the <see cref="M:NetumScan.Core.NativeMethods.SetActiveWindow(System.IntPtr)"/> or <see cref="M:NetumScan.Core.NativeMethods.SetForegroundWindow(System.IntPtr)"/> function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the <see cref="F:NetumScan.Core.WindowStyles.WS_EX_APPWINDOW"/> style.
            </summary>
        </member>
        <member name="T:NetumScan.Core.OpenFileMode">
            <summary>
            File access modes.
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Read">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Write">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.ReadWrite">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.ShareCompat">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.ShareExclusive">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.ShareDenyWrite">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.ShareDenyRead">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.ShareDenyNone">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Parse">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Delete">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Verify">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Cancel">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Create">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Prompt">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Exist">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.OpenFileMode.Reopen">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SpecialWindowHandles">
            <summary>
            Special window handles
            </summary>
        </member>
        <member name="F:NetumScan.Core.SpecialWindowHandles.HWND_TOP">
            <summary>
            Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SpecialWindowHandles.HWND_BOTTOM">
            <summary>
            Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SpecialWindowHandles.HWND_TOPMOST">
            <summary>
            Places the window at the top of the Z order.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SpecialWindowHandles.HWND_NOTOPMOST">
            <summary>
            Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.
            </summary>
        </member>
        <member name="T:NetumScan.Core.SetWindowPosFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_ASYNCWINDOWPOS">
            <summary>
            If the calling thread and the thread that owns the window are attached to different input queues, the system posts the request to the thread that owns the window. This prevents the calling thread from blocking its execution while other threads process the request.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_DEFERERASE">
            <summary>
            Prevents generation of the WM_SYNCPAINT message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_DRAWFRAME">
            <summary>
            Draws a frame (defined in the window's class description) around the window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_FRAMECHANGED">
            <summary>
            Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE is sent only when the window's size is being changed.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_HIDEWINDOW">
            <summary>
            Hides the window.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. If this flag is not set, the window is activated and moved to the top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOCOPYBITS">
            <summary>
            Discards the entire contents of the client area. If this flag is not specified, the valid contents of the client area are saved and copied back into the client area after the window is sized or repositioned.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOMOVE">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOOWNERZORDER">
            <summary>
            Does not change the owner window's position in the Z order.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent window uncovered as a result of the window being moved. When this flag is set, the application must explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOREPOSITION">
            <summary>
            Same as the SWP_NOOWNERZORDER flag.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOSENDCHANGING">
            <summary>
            Prevents the window from receiving the WM_WINDOWPOSCHANGING message.
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOSIZE">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_NOZORDER">
            <summary>
            Retains the current Z order (ignores the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:NetumScan.Core.SetWindowPosFlags.SWP_SHOWWINDOW">
            <summary>
            Displays the window.
            </summary>
        </member>
        <member name="T:NetumScan.Core.BitmapCompressionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BitmapCompressionMode.BI_RGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BitmapCompressionMode.BI_RLE8">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BitmapCompressionMode.BI_RLE4">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BitmapCompressionMode.BI_BITFIELDS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BitmapCompressionMode.BI_JPEG">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BitmapCompressionMode.BI_PNG">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.CompositionAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CompositionAction.DWM_EC_DISABLECOMPOSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CompositionAction.DWM_EC_ENABLECOMPOSITION">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DwmWindowAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_NCRENDERING_ENABLED">
            <summary>
            Use with DwmGetWindowAttribute. Discovers whether non-client rendering is enabled. The retrieved value is of type BOOL. TRUE if non-client rendering is enabled; otherwise, FALSE.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_NCRENDERING_POLICY">
            <summary>
            Use with DwmSetWindowAttribute. Sets the non-client rendering policy. The pvAttribute parameter points to a value from the DWMNCRENDERINGPOLICY enumeration.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_TRANSITIONS_FORCEDISABLED">
            <summary>
            Use with DwmSetWindowAttribute. Enables or forcibly disables DWM transitions. The pvAttribute parameter points to a value of TRUE to disable transitions or FALSE to enable transitions.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_ALLOW_NCPAINT">
            <summary>
            Use with DwmSetWindowAttribute. Enables content rendered in the non-client area to be visible on the frame drawn by DWM. The pvAttribute parameter points to a value of TRUE to enable content rendered in the non-client area to be visible on the frame; otherwise, it points to FALSE.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_CAPTION_BUTTON_BOUNDS">
            <summary>
            Use with DwmGetWindowAttribute. Retrieves the bounds of the caption button area in the window-relative space. The retrieved value is of type RECT.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_NONCLIENT_RTL_LAYOUT">
            <summary>
            Use with DwmSetWindowAttribute. Specifies whether non-client content is right-to-left (RTL) mirrored. The pvAttribute parameter points to a value of TRUE if the non-client content is right-to-left (RTL) mirrored; otherwise, it points to FALSE.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_FORCE_ICONIC_REPRESENTATION">
            <summary>
            Use with DwmSetWindowAttribute. Forces the window to display an iconic thumbnail or peek representation (a static bitmap), even if a live or snapshot representation of the window is available. This value normally is set during a window's creation and not changed throughout the window's lifetime. Some scenarios, however, might require the value to change over time. The pvAttribute parameter points to a value of TRUE to require a iconic thumbnail or peek representation; otherwise, it points to FALSE.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_FLIP3D_POLICY">
            <summary>
            Use with DwmSetWindowAttribute. Sets how Flip3D treats the window. The pvAttribute parameter points to a value from the DWMFLIP3DWINDOWPOLICY enumeration.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_EXTENDED_FRAME_BOUNDS">
            <summary>
            Use with DwmGetWindowAttribute. Retrieves the extended frame bounds rectangle in screen space. The retrieved value is of type RECT.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_HAS_ICONIC_BITMAP">
            <summary>
            Use with DwmSetWindowAttribute. The window will provide a bitmap for use by DWM as an iconic thumbnail or peek representation (a static bitmap) for the window. DWMWA_HAS_ICONIC_BITMAP can be specified with DWMWA_FORCE_ICONIC_REPRESENTATION. DWMWA_HAS_ICONIC_BITMAP normally is set during a window's creation and not changed throughout the window's lifetime. Some scenarios, however, might require the value to change over time. The pvAttribute parameter points to a value of TRUE to inform DWM that the window will provide an iconic thumbnail or peek representation; otherwise, it points to FALSE.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_DISALLOW_PEEK">
            <summary>
            Use with DwmSetWindowAttribute. Do not show peek preview for the window. The peek view shows a full-sized preview of the window when the mouse hovers over the window's thumbnail in the taskbar. If this attribute is set, hovering the mouse pointer over the window's thumbnail dismisses peek (in case another window in the group has a peek preview showing). The pvAttribute parameter points to a value of TRUE to prevent peek functionality or FALSE to allow it.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_EXCLUDED_FROM_PEEK">
            <summary>
            Use with DwmSetWindowAttribute. Prevents a window from fading to a glass sheet when peek is invoked. The pvAttribute parameter points to a value of TRUE to prevent the window from fading during another window's peek or FALSE for normal behavior.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_CLOAK">
            <summary>
            Use with DwmSetWindowAttribute. Cloaks the window such that it is not visible to the user. The window is still composed by DWM.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_CLOAKED">
            <summary>
            Use with DwmGetWindowAttribute.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_FREEZE_REPRESENTATION">
            <summary>
            Use with DwmSetWindowAttribute. Freeze the window's thumbnail image with its current visuals. Do no further live updates on the thumbnail image to match the window's contents.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_LAST">
            <summary>
            The maximum recognized DWMWINDOWATTRIBUTE value, used for validation purposes.
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_USE_IMMERSIVE_DARK_MODE_BEFORE_20H1">
            <summary>
            Undocumented, available since October 2018 update (build 17763)
            </summary>
        </member>
        <member name="F:NetumScan.Core.DwmWindowAttribute.DWMWA_USE_IMMERSIVE_DARK_MODE">
            <summary>
            Windows 10 20H1 changed the value of the constant
            </summary>
        </member>
        <member name="T:NetumScan.Core.InputType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.InputType.InputMouse">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.InputType.InputKeyboard">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.InputType.InputHardware">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.MouseEventFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_MOVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_LEFTDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_LEFTUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_RIGHTDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_RIGHTUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_MIDDLEDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_MIDDLEUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_XDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_XUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_WHEEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_VIRTUALDESK">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventFlags.MOUSEEVENTF_ABSOLUTE">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.MouseEventDataXButtons">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventDataXButtons.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventDataXButtons.XBUTTON1">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MouseEventDataXButtons.XBUTTON2">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.KeyboardEventFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyboardEventFlags.KEYEVENTF_EXTENDEDKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyboardEventFlags.KEYEVENTF_KEYUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyboardEventFlags.KEYEVENTF_UNICODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KeyboardEventFlags.KEYEVENTF_SCANCODE">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.VirtualKeyCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LBUTTON">
            <summary>
            Left mouse button
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.RBUTTON">
            <summary>
            Right mouse button
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.CANCEL">
            <summary>
            Control-break processing
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MBUTTON">
            <summary>
            Middle mouse button (three-button mouse)
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.XBUTTON1">
            <summary>
            Windows 2000/XP: X1 mouse button
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.XBUTTON2">
            <summary>
            Windows 2000/XP: X2 mouse button
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BACK">
            <summary>
            BACKSPACE key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.TAB">
            <summary>
            TAB key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.CLEAR">
            <summary>
            CLEAR key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.RETURN">
            <summary>
            ENTER key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SHIFT">
            <summary>
            SHIFT key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.CONTROL">
            <summary>
            CTRL key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MENU">
            <summary>
            ALT key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.PAUSE">
            <summary>
            PAUSE key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.CAPITAL">
            <summary>
            CAPS LOCK key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KANA">
            <summary>
            Input Method Editor (IME) Kana mode
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.HANGUL">
            <summary>
            IME Hangul mode
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.JUNJA">
            <summary>
            IME Junja mode
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.FINAL">
            <summary>
            IME final mode
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.HANJA">
            <summary>
            IME Hanja mode
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KANJI">
            <summary>
            IME Kanji mode
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.ESCAPE">
            <summary>
            ESC key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.CONVERT">
            <summary>
            IME convert
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NONCONVERT">
            <summary>
            IME nonconvert
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.ACCEPT">
            <summary>
            IME accept
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MODECHANGE">
            <summary>
            IME mode change request
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SPACE">
            <summary>
            SPACEBAR
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.PRIOR">
            <summary>
            PAGE UP key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NEXT">
            <summary>
            PAGE DOWN key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.END">
            <summary>
            END key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.HOME">
            <summary>
            HOME key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LEFT">
            <summary>
            LEFT ARROW key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.UP">
            <summary>
            UP ARROW key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.RIGHT">
            <summary>
            RIGHT ARROW key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.DOWN">
            <summary>
            DOWN ARROW key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SELECT">
            <summary>
            SELECT key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.PRINT">
            <summary>
            PRINT key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.EXECUTE">
            <summary>
            EXECUTE key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SNAPSHOT">
            <summary>
            PRINT SCREEN key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.INSERT">
            <summary>
            INS key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.DELETE">
            <summary>
            DEL key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.HELP">
            <summary>
            HELP key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_0">
            <summary>
            0 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_1">
            <summary>
            1 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_2">
            <summary>
            2 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_3">
            <summary>
            3 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_4">
            <summary>
            4 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_5">
            <summary>
            5 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_6">
            <summary>
            6 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_7">
            <summary>
            7 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_8">
            <summary>
            8 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_9">
            <summary>
            9 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_A">
            <summary>
            A key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_B">
            <summary>
            B key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_C">
            <summary>
            C key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_D">
            <summary>
            D key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_E">
            <summary>
            E key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_F">
            <summary>
            F key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_G">
            <summary>
            G key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_H">
            <summary>
            H key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_I">
            <summary>
            I key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_J">
            <summary>
            J key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_K">
            <summary>
            K key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_L">
            <summary>
            L key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_M">
            <summary>
            M key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_N">
            <summary>
            N key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_O">
            <summary>
            O key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_P">
            <summary>
            P key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_Q">
            <summary>
            Q key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_R">
            <summary>
            R key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_S">
            <summary>
            S key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_T">
            <summary>
            T key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_U">
            <summary>
            U key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_V">
            <summary>
            V key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_W">
            <summary>
            W key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_X">
            <summary>
            X key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_Y">
            <summary>
            Y key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.KEY_Z">
            <summary>
            Z key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LWIN">
            <summary>
            Left Windows key (Microsoft Natural keyboard)
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.RWIN">
            <summary>
            Right Windows key (Natural keyboard)
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.APPS">
            <summary>
            Applications key (Natural keyboard)
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SLEEP">
            <summary>
            Computer Sleep key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD0">
            <summary>
            Numeric keypad 0 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD1">
            <summary>
            Numeric keypad 1 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD2">
            <summary>
            Numeric keypad 2 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD3">
            <summary>
            Numeric keypad 3 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD4">
            <summary>
            Numeric keypad 4 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD5">
            <summary>
            Numeric keypad 5 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD6">
            <summary>
            Numeric keypad 6 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD7">
            <summary>
            Numeric keypad 7 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD8">
            <summary>
            Numeric keypad 8 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMPAD9">
            <summary>
            Numeric keypad 9 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MULTIPLY">
            <summary>
            Multiply key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.ADD">
            <summary>
            Add key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SEPARATOR">
            <summary>
            Separator key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SUBTRACT">
            <summary>
            Subtract key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.DECIMAL">
            <summary>
            Decimal key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.DIVIDE">
            <summary>
            Divide key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F1">
            <summary>
            F1 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F2">
            <summary>
            F2 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F3">
            <summary>
            F3 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F4">
            <summary>
            F4 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F5">
            <summary>
            F5 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F6">
            <summary>
            F6 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F7">
            <summary>
            F7 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F8">
            <summary>
            F8 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F9">
            <summary>
            F9 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F10">
            <summary>
            F10 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F11">
            <summary>
            F11 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F12">
            <summary>
            F12 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F13">
            <summary>
            F13 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F14">
            <summary>
            F14 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F15">
            <summary>
            F15 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F16">
            <summary>
            F16 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F17">
            <summary>
            F17 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F18">
            <summary>
            F18 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F19">
            <summary>
            F19 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F20">
            <summary>
            F20 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F21">
            <summary>
            F21 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F22">
            <summary>
            F22 key, (PPC only) Key used to lock device.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F23">
            <summary>
            F23 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.F24">
            <summary>
            F24 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NUMLOCK">
            <summary>
            NUM LOCK key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.SCROLL">
            <summary>
            SCROLL LOCK key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LSHIFT">
            <summary>
            Left SHIFT key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.RSHIFT">
            <summary>
            Right SHIFT key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LCONTROL">
            <summary>
            Left CONTROL key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.RCONTROL">
            <summary>
            Right CONTROL key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LMENU">
            <summary>
            Left MENU key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.RMENU">
            <summary>
            Right MENU key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BROWSER_BACK">
            <summary>
            Windows 2000/XP: Browser Back key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BROWSER_FORWARD">
            <summary>
            Windows 2000/XP: Browser Forward key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BROWSER_REFRESH">
            <summary>
            Windows 2000/XP: Browser Refresh key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BROWSER_STOP">
            <summary>
            Windows 2000/XP: Browser Stop key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BROWSER_SEARCH">
            <summary>
            Windows 2000/XP: Browser Search key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BROWSER_FAVORITES">
            <summary>
            Windows 2000/XP: Browser Favorites key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.BROWSER_HOME">
            <summary>
            Windows 2000/XP: Browser Start and Home key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.VOLUME_MUTE">
            <summary>
            Windows 2000/XP: Volume Mute key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.VOLUME_DOWN">
            <summary>
            Windows 2000/XP: Volume Down key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.VOLUME_UP">
            <summary>
            Windows 2000/XP: Volume Up key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MEDIA_NEXT_TRACK">
            <summary>
            Windows 2000/XP: Next Track key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MEDIA_PREV_TRACK">
            <summary>
            Windows 2000/XP: Previous Track key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MEDIA_STOP">
            <summary>
            Windows 2000/XP: Stop Media key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.MEDIA_PLAY_PAUSE">
            <summary>
            Windows 2000/XP: Play/Pause Media key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LAUNCH_MAIL">
            <summary>
            Windows 2000/XP: Start Mail key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LAUNCH_MEDIA_SELECT">
            <summary>
            Windows 2000/XP: Select Media key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LAUNCH_APP1">
            <summary>
            Windows 2000/XP: Start Application 1 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.LAUNCH_APP2">
            <summary>
            Windows 2000/XP: Start Application 2 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_1">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_PLUS">
            <summary>
            Windows 2000/XP: For any country/region, the '+' key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_COMMA">
            <summary>
            Windows 2000/XP: For any country/region, the ',' key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_MINUS">
            <summary>
            Windows 2000/XP: For any country/region, the '-' key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_PERIOD">
            <summary>
            Windows 2000/XP: For any country/region, the '.' key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_2">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_3">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_4">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_5">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_6">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_7">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_8">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_102">
            <summary>
            Windows 2000/XP: Either the angle bracket key or the backslash key on the RT 102-key keyboard
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.PROCESSKEY">
            <summary>
            Windows 95/98/Me, Windows NT 4.0, Windows 2000/XP: IME PROCESS key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.PACKET">
            <summary>
            Windows 2000/XP: Used to pass Unicode characters as if they were keystrokes.
            The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information,
            see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.ATTN">
            <summary>
            Attn key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.CRSEL">
            <summary>
            CrSel key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.EXSEL">
            <summary>
            ExSel key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.EREOF">
            <summary>
            Erase EOF key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.PLAY">
            <summary>
            Play key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.ZOOM">
            <summary>
            Zoom key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.NONAME">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.PA1">
            <summary>
            PA1 key
            </summary>
        </member>
        <member name="F:NetumScan.Core.VirtualKeyCode.OEM_CLEAR">
            <summary>
            Clear key
            </summary>
        </member>
        <member name="T:NetumScan.Core.FlashWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.FlashWindow.FLASHW_STOP">
            <summary>
            Stop flashing. The system restores the window to its original state.
            </summary>
        </member>
        <member name="F:NetumScan.Core.FlashWindow.FLASHW_CAPTION">
            <summary>
            Flash the window caption
            </summary>
        </member>
        <member name="F:NetumScan.Core.FlashWindow.FLASHW_TRAY">
            <summary>
            Flash the taskbar button.
            </summary>
        </member>
        <member name="F:NetumScan.Core.FlashWindow.FLASHW_ALL">
            <summary>
            Flash both the window caption and taskbar button.
            This is equivalent to setting the FLASHW_CAPTION | FLASHW_TRAY flags.
            </summary>
        </member>
        <member name="F:NetumScan.Core.FlashWindow.FLASHW_TIMER">
            <summary>
            Flash continuously, until the FLASHW_STOP flag is set.
            </summary>
        </member>
        <member name="F:NetumScan.Core.FlashWindow.FLASHW_TIMERNOFG">
            <summary>
            Flash continuously until the window comes to the foreground.
            </summary>
        </member>
        <member name="T:NetumScan.Core.ScrollBarCommands">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_LINEUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_LINELEFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_LINEDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_LINERIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_PAGEUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_PAGELEFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_PAGEDOWN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_PAGERIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_THUMBPOSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_THUMBTRACK">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_TOP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_LEFT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_BOTTOM">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_RIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollBarCommands.SB_ENDSCROLL">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SBOrientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SBOrientation.SB_HORZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SBOrientation.SB_VERT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SBOrientation.SB_CTL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SBOrientation.SB_BOTH">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ScrollInfoMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollInfoMask.SIF_RANGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollInfoMask.SIF_PAGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollInfoMask.SIF_POS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollInfoMask.SIF_DISABLENOSCROLL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollInfoMask.SIF_TRACKPOS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ScrollInfoMask.SIF_ALL">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.BI_COMPRESSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BI_COMPRESSION.BI_RGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BI_COMPRESSION.BI_RLE8">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BI_COMPRESSION.BI_RLE4">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BI_COMPRESSION.BI_BITFIELDS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BI_COMPRESSION.BI_JPEG">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BI_COMPRESSION.BI_PNG">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.HChangeNotifyEventID">
            <summary>
            Describes the event that has occurred.
            Typically, only one event is specified at a time.
            If more than one event is specified, the values contained
            in the <i>dwItem1</i> and <i>dwItem2</i>
            parameters must be the same, respectively, for all specified events.
            This parameter can be one or more of the following values.
            </summary>
            <remarks>
            <para><b>Windows NT/2000/XP:</b> <i>dwItem2</i> contains the index
            in the system image list that has changed.
            <i>dwItem1</i> is not used and should be <see langword="null"/>.</para>
            <para><b>Windows 95/98:</b> <i>dwItem1</i> contains the index
            in the system image list that has changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.</para>
            </remarks>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_ALLEVENTS">
            <summary>
            All events have occurred.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_ASSOCCHANGED">
            <summary>
            A file type association has changed. <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/>
            must be specified in the <i>uFlags</i> parameter.
            <i>dwItem1</i> and <i>dwItem2</i> are not used and must be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_ATTRIBUTES">
            <summary>
            The attributes of an item or folder have changed.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the item or folder that has changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_CREATE">
            <summary>
            A nonfolder item has been created.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the item that was created.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_DELETE">
            <summary>
            A nonfolder item has been deleted.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the item that was deleted.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_DRIVEADD">
            <summary>
            A drive has been added.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that was added.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_DRIVEADDGUI">
            <summary>
            A drive has been added and the Shell should create a new window for the drive.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that was added.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_DRIVEREMOVED">
            <summary>
            A drive has been removed. <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that was removed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_EXTENDED_EVENT">
            <summary>
            Not currently used.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_FREESPACE">
            <summary>
            The amount of free space on a drive has changed.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive on which the free space changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_MEDIAINSERTED">
            <summary>
            Storage media has been inserted into a drive.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive that contains the new media.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_MEDIAREMOVED">
            <summary>
            Storage media has been removed from a drive.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the root of the drive from which the media was removed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_MKDIR">
            <summary>
            A folder has been created. <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/>
            or <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that was created.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_NETSHARE">
            <summary>
            A folder on the local computer is being shared via the network.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that is being shared.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_NETUNSHARE">
            <summary>
            A folder on the local computer is no longer being shared via the network.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that is no longer being shared.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_RENAMEFOLDER">
            <summary>
            The name of a folder has changed.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the previous pointer to an item identifier list (PIDL) or name of the folder.
            <i>dwItem2</i> contains the new PIDL or name of the folder.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_RENAMEITEM">
            <summary>
            The name of a nonfolder item has changed.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the previous PIDL or name of the item.
            <i>dwItem2</i> contains the new PIDL or name of the item.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_RMDIR">
            <summary>
            A folder has been removed.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that was removed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_SERVERDISCONNECT">
            <summary>
            The computer has disconnected from a server.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the server from which the computer was disconnected.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_UPDATEDIR">
            <summary>
            The contents of an existing folder have changed,
            but the folder still exists and has not been renamed.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST"/> or
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA"/> must be specified in <i>uFlags</i>.
            <i>dwItem1</i> contains the folder that has changed.
            <i>dwItem2</i> is not used and should be <see langword="null"/>.
            If a folder has been created, deleted, or renamed, use SHCNE_MKDIR, SHCNE_RMDIR, or
            SHCNE_RENAMEFOLDER, respectively, instead.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyEventID.SHCNE_UPDATEIMAGE">
            <summary>
            An image in the system image list has changed.
            <see cref="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_DWORD"/> must be specified in <i>uFlags</i>.
            </summary>
        </member>
        <member name="T:NetumScan.Core.HChangeNotifyFlags">
            <summary>
            Flags that indicate the meaning of the <i>dwItem1</i> and <i>dwItem2</i> parameters.
            The uFlags parameter must be one of the following values.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_DWORD">
            <summary>
            The <i>dwItem1</i> and <i>dwItem2</i> parameters are DWORD values.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_IDLIST">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of ITEMIDLIST structures that
            represent the item(s) affected by the change.
            Each ITEMIDLIST must be relative to the desktop folder.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PATHW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PRINTERA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_PRINTERW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_FLUSH">
            <summary>
            The function should not return until the notification
            has been delivered to all affected components.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="F:NetumScan.Core.HChangeNotifyFlags.SHCNF_FLUSHNOWAIT">
            <summary>
            The function should begin delivering notifications to all affected components
            but should return as soon as the notification process has begun.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="T:NetumScan.Core.CreateProcessFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.DEBUG_PROCESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.DEBUG_ONLY_THIS_PROCESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_SUSPENDED">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.DETACHED_PROCESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_NEW_CONSOLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.NORMAL_PRIORITY_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.IDLE_PRIORITY_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.HIGH_PRIORITY_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.REALTIME_PRIORITY_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_NEW_PROCESS_GROUP">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_UNICODE_ENVIRONMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_SEPARATE_WOW_VDM">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_SHARED_WOW_VDM">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_FORCEDOS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.BELOW_NORMAL_PRIORITY_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.ABOVE_NORMAL_PRIORITY_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.INHERIT_PARENT_AFFINITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.INHERIT_CALLER_PRIORITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_PROTECTED_PROCESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.EXTENDED_STARTUPINFO_PRESENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.PROCESS_MODE_BACKGROUND_BEGIN">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.PROCESS_MODE_BACKGROUND_END">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_BREAKAWAY_FROM_JOB">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_PRESERVE_CODE_AUTHZ_LEVEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_DEFAULT_ERROR_MODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_NO_WINDOW">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.PROFILE_USER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.PROFILE_KERNEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.PROFILE_SERVER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CreateProcessFlags.CREATE_IGNORE_SYSTEM_DEFAULT">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.RegisterApplicationRestartFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegisterApplicationRestartFlags.RESTART_NO_CRASH">
            <summary>
            Do not restart the process if it terminates due to an unhandled exception.
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegisterApplicationRestartFlags.RESTART_NO_HANG">
            <summary>
            Do not restart the process if it terminates due to the application not responding.
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegisterApplicationRestartFlags.RESTART_NO_PATCH">
            <summary>
            Do not restart the process if it terminates due to the installation of an update.
            </summary>
        </member>
        <member name="F:NetumScan.Core.RegisterApplicationRestartFlags.RESTART_NO_REBOOT">
            <summary>
            Do not restart the process if the computer is restarted as the result of an update.
            </summary>
        </member>
        <member name="T:NetumScan.Core.EndSessionReasons">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.EndSessionReasons.ENDSESSION_CLOSEAPP">
            <summary>
            The application is using a file that must be replaced, the system is being serviced, or system resources are exhausted.
            </summary>
        </member>
        <member name="F:NetumScan.Core.EndSessionReasons.ENDSESSION_CRITICAL">
            <summary>
            The application is forced to shut down.
            </summary>
        </member>
        <member name="F:NetumScan.Core.EndSessionReasons.ENDSESSION_LOGOFF">
            <summary>
            The user is logging off.
            </summary>
        </member>
        <member name="T:NetumScan.Core.SHGFI">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.Icon">
            <summary>get icon</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.DisplayName">
            <summary>get display name</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.TypeName">
            <summary>get type name</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.Attributes">
            <summary>get attributes</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.IconLocation">
            <summary>get icon location</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.ExeType">
            <summary>return exe type</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.SysIconIndex">
            <summary>get system icon index</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.LinkOverlay">
            <summary>put a link overlay on icon</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.Selected">
            <summary>show icon in selected state</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.Attr_Specified">
            <summary>get only specified attributes</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.LargeIcon">
            <summary>get large icon</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.SmallIcon">
            <summary>get small icon</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.OpenIcon">
            <summary>get open icon</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.ShellIconSize">
            <summary>get shell size icon</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.PIDL">
            <summary>pszPath is a pidl</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.UseFileAttributes">
            <summary>use passed dwFileAttribute</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.AddOverlays">
            <summary>apply the appropriate overlays</summary>
        </member>
        <member name="F:NetumScan.Core.SHGFI.OverlayIndex">
            <summary>Get the index of the overlay in the upper 8 bits of the iIcon</summary>
        </member>
        <member name="T:NetumScan.Core.DeviceCap">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.DRIVERVERSION">
            <summary>
            Device driver version
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.TECHNOLOGY">
            <summary>
            Device classification
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.HORZSIZE">
            <summary>
            Horizontal size in millimeters
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.VERTSIZE">
            <summary>
            Vertical size in millimeters
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.HORZRES">
            <summary>
            Horizontal width in pixels
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.VERTRES">
            <summary>
            Vertical height in pixels
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.BITSPIXEL">
            <summary>
            Number of bits per pixel
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.NUMBRUSHES">
            <summary>
            Number of brushes the device has
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.NUMPENS">
            <summary>
            Number of pens the device has
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.NUMMARKERS">
            <summary>
            Number of markers the device has
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.NUMFONTS">
            <summary>
            Number of fonts the device has
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.NUMCOLORS">
            <summary>
            Number of colors the device supports
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.PDEVICESIZE">
            <summary>
            Size required for device descriptor
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.CURVECAPS">
            <summary>
            Curve capabilities
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.LINECAPS">
            <summary>
            Line capabilities
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.POLYGONALCAPS">
            <summary>
            Polygonal capabilities
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.TEXTCAPS">
            <summary>
            Text capabilities
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.CLIPCAPS">
            <summary>
            Clipping capabilities
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.RASTERCAPS">
            <summary>
            Bitblt capabilities
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.ASPECTX">
            <summary>
            Length of the X leg
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.ASPECTY">
            <summary>
            Length of the Y leg
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.ASPECTXY">
            <summary>
            Length of the hypotenuse
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.SHADEBLENDCAPS">
            <summary>
            Shading and Blending caps
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.SIZEPALETTE">
            <summary>
            Number of entries in physical palette
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.NUMRESERVED">
            <summary>
            Number of reserved entries in palette
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.COLORRES">
            <summary>
            Actual color resolution
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.PHYSICALWIDTH">
            <summary>
            Physical Width in device units
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.PHYSICALHEIGHT">
            <summary>
            Physical Height in device units
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.PHYSICALOFFSETX">
            <summary>
            Physical Printable Area x margin
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.PHYSICALOFFSETY">
            <summary>
            Physical Printable Area y margin
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.SCALINGFACTORX">
            <summary>
            Scaling factor x
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.SCALINGFACTORY">
            <summary>
            Scaling factor y
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.VREFRESH">
            <summary>
            Current vertical refresh rate of the display device (for displays only) in Hz
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.DESKTOPVERTRES">
            <summary>
            Vertical height of entire desktop in pixels
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.DESKTOPHORZRES">
            <summary>
            Horizontal width of entire desktop in pixels
            </summary>
        </member>
        <member name="F:NetumScan.Core.DeviceCap.BLTALIGNMENT">
            <summary>
            Preferred blt alignment
            </summary>
        </member>
        <member name="T:NetumScan.Core.EnumWindowsProc">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.HookProc">
            <summary>
            
            </summary>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.NativeMethods">
            <summary>
            本机方法
            </summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SwitchToThisWindow(System.IntPtr,System.Boolean)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="state"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AnimateWindow(System.IntPtr,System.Int32,NetumScan.Core.AnimateWindowFlags)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="time"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.BringWindowToTop(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CopyIcon(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hIcon"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DefWindowProc(System.IntPtr,System.UInt32,System.UIntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="uMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DestroyIcon(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hIcon"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.EnumWindows(NetumScan.Core.EnumWindowsProc,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="lpEnumFunc"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.EnumChildWindows(System.IntPtr,NetumScan.Core.EnumWindowsProc,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hwndParent"></param>
            <param name="lpEnumFunc"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.EnumThreadWindows(System.UInt32,NetumScan.Core.EnumWindowsProc,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="dwThreadId"></param>
            <param name="lpfn"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpClassName"></param>
            <param name="nMaxCount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ClientToScreen(System.IntPtr,System.Drawing.Point@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpPoint"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DrawIcon(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hDC"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="hIcon"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DrawIconEx(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="xLeft"></param>
            <param name="yTop"></param>
            <param name="hIcon"></param>
            <param name="cxWidth"></param>
            <param name="cyHeight"></param>
            <param name="istepIfAniCur"></param>
            <param name="hbrFlickerFreeDraw"></param>
            <param name="diFlags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.FindWindow(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="lpClassName"></param>
            <param name="lpWindowName"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="hwndParent"></param>
            <param name="hwndChildAfter"></param>
            <param name="lpszClass"></param>
            <param name="lpszWindow"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.FindWindowEx(System.IntPtr,System.IntPtr,System.IntPtr,System.String)">
            <summary>
            
            </summary>
            <param name="parentHwnd"></param>
            <param name="childAfterHwnd"></param>
            <param name="className"></param>
            <param name="windowText"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.FlashWindowEx(NetumScan.Core.FLASHWINFO@)">
            <summary>
            
            </summary>
            <param name="pwfi"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetActiveWindow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetClassLong(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="nIndex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetClassLongPtr(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="nIndex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetClientRect(System.IntPtr,NetumScan.Core.RECT@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpRect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetCursorInfo(NetumScan.Core.CursorInfo@)">
            <summary>
            
            </summary>
            <param name="pci"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetCursorPos(NetumScan.Core.POINT@)">
            <summary>
            
            </summary>
            <param name="lpPoint"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetDesktopWindow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetForegroundWindow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetIconInfo(System.IntPtr,NetumScan.Core.IconInfo@)">
            <summary>
            
            </summary>
            <param name="hIcon"></param>
            <param name="piconinfo"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateIconIndirect(NetumScan.Core.IconInfo@)">
            <summary>
            
            </summary>
            <param name="piconinfo"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetKeyState(System.Int32)">
            <summary>
            
            </summary>
            <param name="keyCode"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowPlacement(System.IntPtr,NetumScan.Core.WINDOWPLACEMENT@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpwndpl"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindow(System.IntPtr,NetumScan.Core.GetWindowConstants)">
            <summary>
            The GetNextWindow function retrieves a handle to the next or previous window in the Z-Order.
            The next window is below the specified window; the previous window is above.
            If the specified window is a topmost window, the function retrieves a handle to the next (or previous) topmost window.
            If the specified window is a top-level window, the function retrieves a handle to the next (or previous) top-level window.
            If the specified window is a child window, the function searches for a handle to the next (or previous) child window.
            </summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetScrollInfo(System.IntPtr,System.Int32,NetumScan.Core.SCROLLINFO@)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="fnBar"></param>
            <param name="lpsi"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetSystemMetrics(System.Int32)">
            <summary>
            
            </summary>
            <param name="smIndex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetSystemMetrics(NetumScan.Core.SystemMetric)">
            <summary>
            
            </summary>
            <param name="smIndex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="nIndex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowRect(System.IntPtr,NetumScan.Core.RECT@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpRect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowRgn(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="hRgn"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpString"></param>
            <param name="nMaxCount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowTextLength(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowThreadProcessId(System.IntPtr,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpdwProcessId"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.IsWindowVisible(System.IntPtr)">
            <summary>Determines the visibility state of the specified window.</summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.IsIconic(System.IntPtr)">
            <summary>Determines whether the specified window is minimized (iconic).</summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.IsZoomed(System.IntPtr)">
            <summary>Determines whether a window is maximized.</summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.LoadCursor(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hInstance"></param>
            <param name="iconId"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.PrintWindow(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="hDC"></param>
            <param name="nFlags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ReleaseCapture">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ReleaseCapture(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="hDC"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SendInput(System.UInt32,NetumScan.Core.INPUT@,System.Int32)">
            <summary>
            
            </summary>
            <param name="nInputs"></param>
            <param name="pInputs"></param>
            <param name="cbSize"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SendInput(System.UInt32,NetumScan.Core.INPUT[],System.Int32)">
            <summary>
            
            </summary>
            <param name="nInputs"></param>
            <param name="pInputs"></param>
            <param name="cbSize"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SendMessageTimeout(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr,NetumScan.Core.SendMessageTimeoutFlags,System.UInt32,System.UIntPtr@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="fuFlags"></param>
            <param name="uTimeout"></param>
            <param name="lpdwResult"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SendMessageTimeout(System.IntPtr,System.Int32,System.Int32,System.Int32,NetumScan.Core.SendMessageTimeoutFlags,System.UInt32,System.IntPtr@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="fuFlags"></param>
            <param name="uTimeout"></param>
            <param name="lpdwResult"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetActiveWindow(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetForegroundWindow(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,NetumScan.Core.SetWindowPosFlags)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="hWndInsertAfter"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetWindowPlacement(System.IntPtr,NetumScan.Core.WINDOWPLACEMENT@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="lpwndpl"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="nCmdShow"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.UpdateLayeredWindow(System.IntPtr,System.IntPtr,NetumScan.Core.POINT@,NetumScan.Core.SIZE@,System.IntPtr,NetumScan.Core.POINT@,System.UInt32,NetumScan.Core.BLENDFUNCTION@,System.UInt32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="hdcDst"></param>
            <param name="pptDst"></param>
            <param name="psize"></param>
            <param name="hdcSrc"></param>
            <param name="pptSrc"></param>
            <param name="crKey"></param>
            <param name="pblend"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.RegisterHotKey(System.IntPtr,System.Int32,System.UInt32,System.UInt32)">
            <summary> The RegisterHotKey function defines a system-wide hot key </summary>
            <param name="hWnd">Handle to the window that will receive WM_HOTKEY messages generated by the hot key.</param>
            <param name="id">Specifies the identifier of the hot key.</param>
            <param name="fsModifiers">Specifies keys that must be pressed in combination with the key
            specified by the 'vk' parameter in order to generate the WM_HOTKEY message.</param>
            <param name="vk">Specifies the virtual-key code of the hot key</param>
            <returns><c>true</c> if the function succeeds, otherwise <c>false</c></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.UnregisterHotKey(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowInfo(System.IntPtr,NetumScan.Core.WINDOWINFO@)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="pwi"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetWindowsHookEx(System.Int32,NetumScan.Core.HookProc,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="idHook"></param>
            <param name="lpfn"></param>
            <param name="hMod"></param>
            <param name="dwThreadId"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hhk"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hhk"></param>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateProcess(System.String,System.String,NetumScan.Core.SECURITY_ATTRIBUTES@,NetumScan.Core.SECURITY_ATTRIBUTES@,System.Boolean,System.UInt32,System.IntPtr,System.String,NetumScan.Core.STARTUPINFO@,NetumScan.Core.PROCESS_INFORMATION@)">
            <summary>
            
            </summary>
            <param name="lpApplicationName"></param>
            <param name="lpCommandLine"></param>
            <param name="lpProcessAttributes"></param>
            <param name="lpThreadAttributes"></param>
            <param name="bInheritHandles"></param>
            <param name="dwCreationFlags"></param>
            <param name="lpEnvironment"></param>
            <param name="lpCurrentDirectory"></param>
            <param name="lpStartupInfo"></param>
            <param name="lpProcessInformation"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ResumeThread(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hThread"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SuspendThread(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hThread"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.OpenThread(NetumScan.Core.ThreadAccess,System.Boolean,System.UInt32)">
            <summary>
            
            </summary>
            <param name="dwDesiredAccess"></param>
            <param name="bInheritHandle"></param>
            <param name="dwThreadId"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetProcessWorkingSetSize(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GlobalAddAtom(System.String)">
            <summary>
            
            </summary>
            <param name="lpString"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GlobalDeleteAtom(System.UInt16)">
            <summary>
            
            </summary>
            <param name="nAtom"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetModuleHandle(System.String)">
            <summary>
            
            </summary>
            <param name="lpModuleName"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.IsWow64Process(System.IntPtr,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="hProcess"></param>
            <param name="lpSystemInfo"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.RegisterApplicationRestart(System.String,NetumScan.Core.RegisterApplicationRestartFlags)">
            <summary>
            
            </summary>
            <param name="pwzCommandline"></param>
            <param name="dwFlags"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CancelIoEx(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hFile"></param>
            <param name="lpOverlapped"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CloseHandle(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateEvent(NetumScan.Core.SECURITY_ATTRIBUTES@,System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="securityAttributes"></param>
            <param name="bManualReset"></param>
            <param name="bInitialState"></param>
            <param name="lpName"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateFile(System.String,System.UInt32,System.Int32,NetumScan.Core.SECURITY_ATTRIBUTES@,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="lpFileName"></param>
            <param name="dwDesiredAccess"></param>
            <param name="dwShareMode"></param>
            <param name="lpSecurityAttributes"></param>
            <param name="dwCreationDisposition"></param>
            <param name="dwFlagsAndAttributes"></param>
            <param name="hTemplateFile"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ReadFile(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,System.Threading.NativeOverlapped@)">
            <summary>
            
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="nNumberOfBytesToRead"></param>
            <param name="lpNumberOfBytesRead"></param>
            <param name="lpOverlapped"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.WaitForSingleObject(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hHandle"></param>
            <param name="dwMilliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetOverlappedResult(System.IntPtr,System.Threading.NativeOverlapped@,System.UInt32@,System.Boolean)">
            <summary>
            
            </summary>
            <param name="hFile"></param>
            <param name="lpOverlapped"></param>
            <param name="lpNumberOfBytesTransferred"></param>
            <param name="bWait"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.WriteFile(System.IntPtr,System.Byte[],System.UInt32,System.UInt32@,System.Threading.NativeOverlapped@)">
            <summary>
            
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="nNumberOfBytesToWrite"></param>
            <param name="lpNumberOfBytesWritten"></param>
            <param name="lpOverlapped"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.LoadLibrary(System.String)">
            <summary>
            
            </summary>
            <param name="lpFileName"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            
            </summary>
            <param name="hModule"></param>
            <param name="lpProcName"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.FreeLibrary(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hModule"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CopyMemory(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="Destination"></param>
            <param name="Source"></param>
            <param name="Length"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Drawing.CopyPixelOperation)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="nXDest"></param>
            <param name="nYDest"></param>
            <param name="nWidth"></param>
            <param name="nHeight"></param>
            <param name="hdcSrc"></param>
            <param name="nXSrc"></param>
            <param name="nYSrc"></param>
            <param name="dwRop"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="nWidth"></param>
            <param name="nHeight"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateCompatibleDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateDC(System.String,System.String,System.String,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="lpszDriver"></param>
            <param name="lpszDevice"></param>
            <param name="lpszOutput"></param>
            <param name="lpInitData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateRectRgn(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="nLeftRect"></param>
            <param name="nTopRect"></param>
            <param name="nReghtRect"></param>
            <param name="nBottomRect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateRoundRectRgn(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="nLeftRect"></param>
            <param name="nTopRect"></param>
            <param name="nReghtRect"></param>
            <param name="nBottomRect"></param>
            <param name="nWidthEllipse"></param>
            <param name="nHeightEllipse"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DeleteDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hDC"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DeleteObject(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="hgdiobj"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateDIBSection(System.IntPtr,NetumScan.Core.BITMAPINFOHEADER@,System.UInt32,System.IntPtr@,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="pbmi"></param>
            <param name="pila"></param>
            <param name="ppvBits"></param>
            <param name="hSection"></param>
            <param name="dwOffset"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetDeviceCaps(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="nIndex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetPixel(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="nXPos"></param>
            <param name="nYPos"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GdipGetImageType(System.Runtime.InteropServices.HandleRef,System.Int32@)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GdipImageForceValidation(System.Runtime.InteropServices.HandleRef)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GdipLoadImageFromFile(System.String,System.IntPtr@)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GdipDisposeImage(System.Runtime.InteropServices.HandleRef)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GdipWindingModeOutline(System.Runtime.InteropServices.HandleRef,System.IntPtr,System.Single)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="matrix"></param>
            <param name="flatness"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SHAppBarMessage(System.UInt32,NetumScan.Core.APPBARDATA@)">
            <summary>
            
            </summary>
            <param name="dwMessage"></param>
            <param name="pData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SHGetImageList(System.Int32,System.Guid@,NetumScan.Core.IImageList@)">
            <summary>
            
            </summary>
            <param name="iImageList"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SHGetFileInfo(System.String,System.UInt32,NetumScan.Core.SHFILEINFO@,System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="pszPath"></param>
            <param name="dwFileAttributes"></param>
            <param name="psfi"></param>
            <param name="cbFileInfo"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SHOpenFolderAndSelectItems(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="pidlFolder"></param>
            <param name="cild"></param>
            <param name="apidl"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SHChangeNotify(NetumScan.Core.HChangeNotifyEventID,NetumScan.Core.HChangeNotifyFlags,System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="wEventId"></param>
            <param name="uFlags"></param>
            <param name="dwItem1"></param>
            <param name="dwItem2"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ILCreateFromPathW(System.String)">
            <summary>
            
            </summary>
            <param name="pszPath"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ILFree(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="pidl"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmGetWindowAttribute(System.IntPtr,System.Int32,NetumScan.Core.RECT@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="dwAttribute"></param>
            <param name="pvAttribute"></param>
            <param name="cbAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmGetWindowAttribute(System.IntPtr,System.Int32,System.Boolean@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="dwAttribute"></param>
            <param name="pvAttribute"></param>
            <param name="cbAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmGetWindowAttribute(System.IntPtr,System.Int32,System.Int32@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="dwAttribute"></param>
            <param name="pvAttribute"></param>
            <param name="cbAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmEnableBlurBehindWindow(System.IntPtr,NetumScan.Core.DWM_BLURBEHIND@)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="blurBehind"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmEnableComposition(NetumScan.Core.CompositionAction)">
            <summary>
            
            </summary>
            <param name="uCompositionAction"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmExtendFrameIntoClientArea(System.IntPtr,NetumScan.Core.MARGINS@)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="margins"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmIsCompositionEnabled">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmSetWindowAttribute(System.IntPtr,System.Int32,System.Int32@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="attr"></param>
            <param name="attrValue"></param>
            <param name="attrSize"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmQueryThumbnailSourceSize(System.IntPtr,NetumScan.Core.SIZE@)">
            <summary>
            
            </summary>
            <param name="thumb"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmRegisterThumbnail(System.IntPtr,System.IntPtr,System.IntPtr@)">
            <summary>
            
            </summary>
            <param name="dest"></param>
            <param name="src"></param>
            <param name="thumb"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmSetDxFrameDuration(System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="cRefreshes"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmUnregisterThumbnail(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="thumb"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DwmUpdateThumbnailProperties(System.IntPtr,NetumScan.Core.DWM_THUMBNAIL_PROPERTIES@)">
            <summary>
            
            </summary>
            <param name="hThumb"></param>
            <param name="props"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.memcpy(System.Int32,System.Int32,System.Int32)">
             <summary>
             Copy a block of memory.
             </summary>
            
             <param name="dst">Destination pointer.</param>
             <param name="src">Source pointer.</param>
             <param name="count">Memory block's length to copy.</param>
            
             <returns>Return's the value of <b>dst</b> - pointer to destination.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIFileInit">
            <summary>
            Initialize the AVIFile library.
            </summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIFileExit">
            <summary>
            Exit the AVIFile library.
            </summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIFileOpen(System.IntPtr@,System.String,NetumScan.Core.OpenFileMode,System.IntPtr)">
             <summary>
             Open an AVI file.
             </summary>
            
             <param name="aviHandler">Opened AVI file interface.</param>
             <param name="fileName">AVI file name.</param>
             <param name="mode">Opening mode (see <see cref="T:NetumScan.Core.OpenFileMode"/>).</param>
             <param name="handler">Handler to use (<b>null</b> to use default).</param>
            
             <returns>Returns zero on success or error code otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIFileRelease(System.IntPtr)">
             <summary>
             Release an open AVI stream.
             </summary>
            
             <param name="aviHandler">Open AVI file interface.</param>
            
             <returns>Returns the reference count of the file.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIFileGetStream(System.IntPtr,System.IntPtr@,System.Int32,System.Int32)">
             <summary>
             Get stream interface that is associated with a specified AVI file
             </summary>
            
             <param name="aviHandler">Handler to an open AVI file.</param>
             <param name="streamHandler">Stream interface.</param>
             <param name="streamType">Stream type to open.</param>
             <param name="streamNumner">Count of the stream type. Identifies which occurrence of the specified stream type to access. </param>
            
             <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIFileCreateStream(System.IntPtr,System.IntPtr@,NetumScan.Core.AVISTREAMINFO@)">
             <summary>
             Create a new stream in an existing file and creates an interface to the new stream.
             </summary>
            
             <param name="aviHandler">Handler to an open AVI file.</param>
             <param name="streamHandler">Stream interface.</param>
             <param name="streamInfo">Pointer to a structure containing information about the new stream.</param>
            
             <returns>Returns zero if successful or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamRelease(System.IntPtr)">
             <summary>
             Release an open AVI stream.
             </summary>
            
             <param name="streamHandler">Handle to an open stream.</param>
            
             <returns>Returns the current reference count of the stream.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamSetFormat(System.IntPtr,System.Int32,NetumScan.Core.BITMAPINFOHEADER@,System.Int32)">
             <summary>
             Set the format of a stream at the specified position.
             </summary>
            
             <param name="streamHandler">Handle to an open stream.</param>
             <param name="position">Position in the stream to receive the format.</param>
             <param name="format">Pointer to a structure containing the new format.</param>
             <param name="formatSize">Size, in bytes, of the block of memory referenced by <b>format</b>.</param>
            
             <returns>Returns zero if successful or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamStart(System.IntPtr)">
             <summary>
             Get the starting sample number for the stream.
             </summary>
            
             <param name="streamHandler">Handle to an open stream.</param>
            
             <returns>Returns the number if successful or  1 otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamLength(System.IntPtr)">
             <summary>
             Get the length of the stream.
             </summary>
            
             <param name="streamHandler">Handle to an open stream.</param>
            
             <returns>Returns the stream's length, in samples, if successful or -1 otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamInfo(System.IntPtr,NetumScan.Core.AVISTREAMINFO@,System.Int32)">
             <summary>
             Obtain stream header information.
             </summary>
            
             <param name="streamHandler">Handle to an open stream.</param>
             <param name="streamInfo">Pointer to a structure to contain the stream information.</param>
             <param name="infoSize">Size, in bytes, of the structure used for <b>streamInfo</b>.</param>
            
             <returns>Returns zero if successful or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamGetFrameOpen(System.IntPtr,NetumScan.Core.BITMAPINFOHEADER@)">
             <summary>
             Prepare to decompress video frames from the specified video stream
             </summary>
            
             <param name="streamHandler">Pointer to the video stream used as the video source.</param>
             <param name="wantedFormat">Pointer to a structure that defines the desired video format. Specify NULL to use a default format.</param>
            
             <returns>Returns an object that can be used with the <see cref="M:NetumScan.Core.NativeMethods.AVIStreamGetFrame(System.IntPtr,System.Int32)"/> function.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamGetFrameOpen(System.IntPtr,System.Int32)">
             <summary>
             Prepare to decompress video frames from the specified video stream.
             </summary>
            
             <param name="streamHandler">Pointer to the video stream used as the video source.</param>
             <param name="wantedFormat">Pointer to a structure that defines the desired video format. Specify NULL to use a default format.</param>
            
             <returns>Returns a <b>GetFrame</b> object that can be used with the <see cref="M:NetumScan.Core.NativeMethods.AVIStreamGetFrame(System.IntPtr,System.Int32)"/> function.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamGetFrameClose(System.IntPtr)">
             <summary>
             Releases resources used to decompress video frames.
             </summary>
            
             <param name="getFrameObject">Handle returned from the <see cref="M:NetumScan.Core.NativeMethods.AVIStreamGetFrameOpen(System.IntPtr,System.Int32)"/> function.</param>
            
             <returns>Returns zero if successful or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamGetFrame(System.IntPtr,System.Int32)">
             <summary>
             Return the address of a decompressed video frame.
             </summary>
            
             <param name="getFrameObject">Pointer to a GetFrame object.</param>
             <param name="position">Position, in samples, within the stream of the desired frame.</param>
            
             <returns>Returns a pointer to the frame data if successful or NULL otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIStreamWrite(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
             <summary>
             Write data to a stream.
             </summary>
            
             <param name="streamHandler">Handle to an open stream.</param>
             <param name="start">First sample to write.</param>
             <param name="samples">Number of samples to write.</param>
             <param name="buffer">Pointer to a buffer containing the data to write. </param>
             <param name="bufferSize">Size of the buffer referenced by <b>buffer</b>.</param>
             <param name="flags">Flag associated with this data.</param>
             <param name="samplesWritten">Pointer to a buffer that receives the number of samples written. This can be set to NULL.</param>
             <param name="bytesWritten">Pointer to a buffer that receives the number of bytes written. This can be set to NULL.</param>
            
             <returns>Returns zero if successful or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVISaveOptions(System.IntPtr,System.Int32,System.Int32,System.IntPtr[],System.IntPtr[])">
             <summary>
             Retrieve the save options for a file and returns them in a buffer.
             </summary>
            
             <param name="window">Handle to the parent window for the Compression Options dialog box.</param>
             <param name="flags">Flags for displaying the Compression Options dialog box.</param>
             <param name="streams">Number of streams that have their options set by the dialog box.</param>
             <param name="streamInterfaces">Pointer to an array of stream interface pointers.</param>
             <param name="options">Pointer to an array of pointers to AVICOMPRESSOPTIONS structures.</param>
            
             <returns>Returns TRUE if the user pressed OK, FALSE for CANCEL, or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVISaveOptionsFree(System.Int32,System.IntPtr[])">
             <summary>
             Free the resources allocated by the AVISaveOptions function.
             </summary>
            
             <param name="streams">Count of the AVICOMPRESSOPTIONS structures referenced in <b>options</b>.</param>
             <param name="options">Pointer to an array of pointers to AVICOMPRESSOPTIONS structures.</param>
            
             <returns>Returns 0.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVIMakeCompressedStream(System.IntPtr@,System.IntPtr,NetumScan.Core.AVICOMPRESSOPTIONS@,System.IntPtr)">
             <summary>
             Create a compressed stream from an uncompressed stream and a
             compression filter, and returns the address of a pointer to
             the compressed stream.
             </summary>
            
             <param name="compressedStream">Pointer to a buffer that receives the compressed stream pointer.</param>
             <param name="sourceStream">Pointer to the stream to be compressed.</param>
             <param name="options">Pointer to a structure that identifies the type of compression to use and the options to apply.</param>
             <param name="clsidHandler">Pointer to a class identifier used to create the stream.</param>
            
             <returns>Returns 0 if successful or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.DnsFlushResolverCache">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiGetDeviceRegistryProperty(System.IntPtr,NetumScan.Core.SP_DEVINFO_DATA@,System.Int32,System.Int32@,System.Byte[],System.Int32,System.Int32@)">
            <summary>
            获取指定设备的属性
            </summary>
            <param name="deviceInfoSet">设备信息集合</param>
            <param name="deviceInfoData">表示该设备</param>
            <param name="propertyVal">表示要获取哪项属性</param>
            <param name="propertyRegDataType">注册类型</param>
            <param name="propertyBuffer">属性（输出）</param>
            <param name="propertyBufferSize">存储属性的字节大小</param>
            <param name="requiredSize">需要的字节大小</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiGetDeviceProperty(System.IntPtr,NetumScan.Core.SP_DEVINFO_DATA@,NetumScan.Core.DEVPROPKEY@,System.UInt32@,System.Byte[],System.Int32,System.Int32@,System.UInt32)">
            <summary>
            
            </summary>
            <param name="deviceInfo"></param>
            <param name="deviceInfoData"></param>
            <param name="propkey"></param>
            <param name="propertyDataType"></param>
            <param name="propertyBuffer"></param>
            <param name="propertyBufferSize"></param>
            <param name="requiredSize"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiEnumDeviceInfo(System.IntPtr,System.Int32,NetumScan.Core.SP_DEVINFO_DATA@)">
            <summary>
            枚举指定设备信息集合的成员，并将数据放在SP_DEVINFO_DATA中
            </summary>
            <param name="deviceInfoSet">设备信息集合句柄</param>
            <param name="memberIndex">元素索引</param>
            <param name="deviceInfoData">表示一个设备（作为输出）</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiDestroyDeviceInfoList(System.IntPtr)">
            <summary>
            销毁一个设备信息集合，并且释放所有关联的内存
            </summary>
            <param name="deviceInfoSet">设备信息集合</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiEnumDeviceInterfaces(System.IntPtr,NetumScan.Core.SP_DEVINFO_DATA@,System.Guid@,System.Int32,NetumScan.Core.SP_DEVICE_INTERFACE_DATA@)">
            <summary>
            
            </summary>
            <param name="deviceInfoSet"></param>
            <param name="deviceInfoData"></param>
            <param name="interfaceClassGuid"></param>
            <param name="memberIndex"></param>
            <param name="deviceInterfaceData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiGetClassDevs(System.Guid@,System.String,System.IntPtr,System.Int32)">
            <summary>
            获取一个指定类别或全部类别的所有已安装设备的信息
            </summary>
            <param name="classGuid">该类别对应的guid</param>
            <param name="enumerator">类别名称（在HKLMSYSTEMCurrentControlSetEnum内获取）</param>
            <param name="hwndParent">应用程序定义的窗口句柄</param>
            <param name="flags">获取的模式</param>
            <returns>设备信息集合的句柄</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiGetDeviceInterfaceDetailBuffer(System.IntPtr,NetumScan.Core.SP_DEVICE_INTERFACE_DATA@,System.IntPtr,System.Int32,System.Int32@,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="deviceInfoSet"></param>
            <param name="deviceInterfaceData"></param>
            <param name="deviceInterfaceDetailData"></param>
            <param name="deviceInterfaceDetailDataSize"></param>
            <param name="requiredSize"></param>
            <param name="deviceInfoData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetupDiGetDeviceInterfaceDetail(System.IntPtr,NetumScan.Core.SP_DEVICE_INTERFACE_DATA@,NetumScan.Core.SP_DEVICE_INTERFACE_DETAIL_DATA@,System.Int32,System.Int32@,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="deviceInfoSet"></param>
            <param name="deviceInterfaceData"></param>
            <param name="deviceInterfaceDetailData"></param>
            <param name="deviceInterfaceDetailDataSize"></param>
            <param name="requiredSize"></param>
            <param name="deviceInfoData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetAttributes(System.IntPtr,NetumScan.Core.HIDD_ATTRIBUTES@)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetFeature(System.IntPtr,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="lpReportBuffer"></param>
            <param name="reportBufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetInputReport(System.IntPtr,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="lpReportBuffer"></param>
            <param name="reportBufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetHidGuid(System.Guid@)">
            <summary>
            
            </summary>
            <param name="hidGuid"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetPreparsedData(System.IntPtr,System.IntPtr@)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="preparsedData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_FreePreparsedData(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="preparsedData"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_SetFeature(System.IntPtr,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="lpReportBuffer"></param>
            <param name="reportBufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_SetOutputReport(System.IntPtr,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="lpReportBuffer"></param>
            <param name="reportBufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidP_GetCaps(System.IntPtr,NetumScan.Core.HIDP_CAPS@)">
            <summary>
            
            </summary>
            <param name="preparsedData"></param>
            <param name="capabilities"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetProductString(System.IntPtr,System.Byte@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="lpReportBuffer"></param>
            <param name="ReportBufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetManufacturerString(System.IntPtr,System.Byte@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="lpReportBuffer"></param>
            <param name="ReportBufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.HidD_GetSerialNumberString(System.IntPtr,System.Byte@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hidDeviceObject"></param>
            <param name="lpReportBuffer"></param>
            <param name="reportBufferLength"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetForegroundWindowText">
            <summary>
            获取前景窗口文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowText(System.IntPtr)">
            <summary>
            获取窗口文本
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetForegroundWindowProcess">
            <summary>
            获取前景窗口进程
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetForegroundWindowProcessName">
            <summary>
            获取前景窗口进程名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetProcessByWindowHandle(System.IntPtr)">
            <summary>
            通过窗体句柄获取进程
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetClassName(System.IntPtr)">
            <summary>
            获取类名
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetClassLongPtrSafe(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="nIndex"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetSmallApplicationIcon(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetApplicationIcon(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetBorderSize(System.IntPtr,System.Drawing.Size@)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowRegion(System.IntPtr,System.Drawing.Region@)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.IsDWMEnabled">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetExtendedFrameBounds(System.IntPtr,System.Drawing.Rectangle@)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetNCRenderingEnabled(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetNCRenderingPolicy(System.IntPtr,NetumScan.Core.DwmNCRenderingPolicy)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="renderingPolicy"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.UseImmersiveDarkMode(System.IntPtr,System.Boolean)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetWindowRect(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetClientRect(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.MaximizedWindowFix(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="windowRect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.ActivateWindowRepeat(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="count"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetTaskbarRectangle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetTaskbarVisibilityIfIntersect(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="visible"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.SetTaskbarVisibility(System.Boolean)">
            <summary>
            
            </summary>
            <param name="visible"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.TrimMemoryUse">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.IsWindowCloaked(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.IsActive(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.RestoreWindow(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.AVISaveOptions(System.IntPtr,NetumScan.Core.AVICOMPRESSOPTIONS@,System.IntPtr)">
             <summary>
             Version of <see cref="M:NetumScan.Core.NativeMethods.AVISaveOptions(System.IntPtr,System.Int32,System.Int32,System.IntPtr[],System.IntPtr[])"/> for one stream only.
             </summary>
            
             <param name="stream">Stream to configure.</param>
             <param name="options">Stream options.</param>
             <param name="parentWindow"></param>
            
             <returns>Returns TRUE if the user pressed OK, FALSE for CANCEL, or an error otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.MmioFOURCC(System.String)">
             <summary>
             .NET replacement of mmioFOURCC macros. Converts four characters to code.
             </summary>
            
             <param name="str">Four characters string.</param>
            
             <returns>Returns the code created from provided characters.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.Decode_mmioFOURCC(System.Int32)">
             <summary>
             Inverse to <see cref="M:NetumScan.Core.NativeMethods.MmioFOURCC(System.String)"/>. Converts code to fout characters string.
             </summary>
            
             <param name="code">Code to convert.</param>
            
             <returns>Returns four characters string.</returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.Is64Bit">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.FlashWindowEx(System.Windows.Forms.Form,System.UInt32)">
            <summary>
            
            </summary>
            <param name="frm"></param>
            <param name="flashCount"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.OpenFolderAndSelectFile(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.CreateProcess(System.String,System.String,NetumScan.Core.CreateProcessFlags)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="arguments"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetFileIcon(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <param name="isSmallIcon"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetJumboFileIcon(System.String,System.Boolean)">
            <summary>
            /
            </summary>
            <param name="filePath"></param>
            <param name="jumboSize"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NativeMethods.GetScreenScalingFactor">
            <summary>
            /
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.RECT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RECT.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RECT.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RECT.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.RECT.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RECT.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RECT.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RECT.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RECT.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RECT.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RECT.Size">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:NetumScan.Core.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:NetumScan.Core.RECT.op_Implicit(NetumScan.Core.RECT)~System.Drawing.Rectangle">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:NetumScan.Core.RECT.op_Implicit(System.Drawing.Rectangle)~NetumScan.Core.RECT">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:NetumScan.Core.RECT.op_Equality(NetumScan.Core.RECT,NetumScan.Core.RECT)">
            <summary>
            
            </summary>
            <param name="r1"></param>
            <param name="r2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RECT.op_Inequality(NetumScan.Core.RECT,NetumScan.Core.RECT)">
            <summary>
            
            </summary>
            <param name="r1"></param>
            <param name="r2"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RECT.Equals(NetumScan.Core.RECT)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RECT.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RECT.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RECT.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SIZE.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SIZE.Height">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.SIZE.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.SIZE.op_Explicit(NetumScan.Core.SIZE)~System.Drawing.Size">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.SIZE.op_Explicit(System.Drawing.Size)~NetumScan.Core.SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.SIZE.ToString">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.POINT.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.POINT.Y">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.POINT.op_Explicit(NetumScan.Core.POINT)~System.Drawing.Point">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.POINT.op_Explicit(System.Drawing.Point)~NetumScan.Core.POINT">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.WINDOWINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.cbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.rcWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.rcClient">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.dwStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.dwExStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.dwWindowStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.cxWindowBorders">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.cyWindowBorders">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.atomWindowType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWINFO.wCreatorVersion">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.WINDOWINFO.Create">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.WINDOWPLACEMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWPLACEMENT.length">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWPLACEMENT.flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWPLACEMENT.showCmd">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWPLACEMENT.ptMinPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWPLACEMENT.ptMaxPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.WINDOWPLACEMENT.rcNormalPosition">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.BLENDFUNCTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BLENDFUNCTION.BlendOp">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BLENDFUNCTION.BlendFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BLENDFUNCTION.SourceConstantAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BLENDFUNCTION.AlphaFormat">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.APPBARDATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.APPBARDATA.cbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.APPBARDATA.hWnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.APPBARDATA.uCallbackMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.APPBARDATA.uEdge">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.APPBARDATA.rc">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.APPBARDATA.lParam">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.APPBARDATA.NewAPPBARDATA">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DWM_BLURBEHIND">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_BLURBEHIND.dwFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_BLURBEHIND.fEnable">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_BLURBEHIND.hRgnBlur">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_BLURBEHIND.fTransitionOnMaximized">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.MARGINS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MARGINS.leftWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MARGINS.rightWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MARGINS.topHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MARGINS.bottomHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DWM_THUMBNAIL_PROPERTIES">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_THUMBNAIL_PROPERTIES.dwFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_THUMBNAIL_PROPERTIES.rcDestination">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_THUMBNAIL_PROPERTIES.rcSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_THUMBNAIL_PROPERTIES.opacity">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_THUMBNAIL_PROPERTIES.fVisible">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DWM_THUMBNAIL_PROPERTIES.fSourceClientAreaOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.CursorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CursorInfo.cbSize">
            <summary>
            The size of the structure, in bytes. The caller must set this to sizeof(CURSORINFO).
            </summary>
        </member>
        <member name="F:NetumScan.Core.CursorInfo.flags">
            <summary>
            The cursor state. This parameter can be one of the following values:
            0 (The cursor is hidden.)
            CURSOR_SHOWING 0x00000001 (The cursor is showing.)
            CURSOR_SUPPRESSED 0x00000002 (Windows 8: The cursor is suppressed.This flag indicates that the system is not drawing the cursor because the user is providing input through touch or pen instead of the mouse.)
            </summary>
        </member>
        <member name="F:NetumScan.Core.CursorInfo.hCursor">
            <summary>
            A handle to the cursor.
            </summary>
        </member>
        <member name="F:NetumScan.Core.CursorInfo.ptScreenPos">
            <summary>
            A structure that receives the screen coordinates of the cursor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.IconInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IconInfo.fIcon">
            <summary>
            Specifies whether this structure defines an icon or a cursor. A value of TRUE specifies an icon; FALSE specifies a cursor.
            </summary>
        </member>
        <member name="F:NetumScan.Core.IconInfo.xHotspot">
            <summary>
            The x-coordinate of a cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.
            </summary>
        </member>
        <member name="F:NetumScan.Core.IconInfo.yHotspot">
            <summary>
            The y-coordinate of the cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.
            </summary>
        </member>
        <member name="F:NetumScan.Core.IconInfo.hbmMask">
            <summary>
            The icon bitmask bitmap. If this structure defines a black and white icon, this bitmask is formatted so that the upper half is the icon AND bitmask and the lower half is the icon XOR bitmask. Under this condition, the height should be an even multiple of two. If this structure defines a color icon, this mask only defines the AND bitmask of the icon.
            </summary>
        </member>
        <member name="F:NetumScan.Core.IconInfo.hbmColor">
            <summary>
            A handle to the icon color bitmap. This member can be optional if this structure defines a black and white icon. The AND bitmask of hbmMask is applied with the SRCAND flag to the destination; subsequently, the color bitmap is applied (using XOR) to the destination by using the SRCINVERT flag.
            </summary>
        </member>
        <member name="T:NetumScan.Core.AVISTREAMINFO">
            <summary>
            Structure, which contains information for a single stream .
            </summary>
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.type">
             <summary>
             Four-character code indicating the stream type.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.handler">
             <summary>
             Four-character code of the compressor handler that will compress this video stream when it is saved.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.flags">
             <summary>
             Applicable flags for the stream.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.Capabilities">
             <summary>
             Capability flags; currently unused.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.priority">
             <summary>
             Priority of the stream.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.language">
             <summary>
             Language of the stream.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.scale">
             <summary>
             Time scale applicable for the stream.
             </summary>
            
             <remarks>Dividing <b>rate</b> by <b>scale</b> gives the playback rate in number of samples per second.</remarks>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.rate">
             <summary>
             Rate in an integer format.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.start">
             <summary>
             Sample number of the first frame of the AVI file.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.length">
             <summary>
             Length of this stream.
             </summary>
            
             <remarks>The units are defined by <b>rate</b> and <b>scale</b>.</remarks>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.initialFrames">
             <summary>
             Audio skew. This member specifies how much to skew the audio data ahead of the video frames in interleaved files.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.suggestedBufferSize">
             <summary>
             Recommended buffer size, in bytes, for the stream.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.quality">
             <summary>
             Quality indicator of the video data in the stream.
             </summary>
            
             <remarks>Quality is represented as a number between 0 and 10,000.</remarks>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.sampleSize">
             <summary>
             Size, in bytes, of a single data sample.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.rectFrame">
             <summary>
             Dimensions of the video destination rectangle.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.editCount">
             <summary>
             Number of times the stream has been edited.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.formatChangeCount">
             <summary>
             Number of times the stream format has changed.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVISTREAMINFO.name">
             <summary>
             Description of the stream.
             </summary>
            
        </member>
        <member name="T:NetumScan.Core.AVICOMPRESSOPTIONS">
            <summary>
            Structure, which contains information about a stream and how it is compressed and saved.
            </summary>
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.type">
             <summary>
             Four-character code indicating the stream type.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.handler">
             <summary>
             Four-character code for the compressor handler that will compress this video stream when it is saved.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.keyFrameEvery">
             <summary>
             Maximum period between video key frames.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.quality">
             <summary>
             Quality value passed to a video compressor.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.bytesPerSecond">
             <summary>
             Video compressor data rate.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.flags">
             <summary>
             Flags used for compression.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.format">
             <summary>
             Pointer to a structure defining the data format.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.formatSize">
             <summary>
             Size, in bytes, of the data referenced by <b>format</b>.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.parameters">
             <summary>
             Video-compressor-specific data; used internally.
             </summary>
            
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.parametersSize">
            <summary>
            Size, in bytes, of the data referenced by <b>parameters</b>.
            </summary>
        </member>
        <member name="F:NetumScan.Core.AVICOMPRESSOPTIONS.interleaveEvery">
             <summary>
             Interleave factor for interspersing stream data with data from the first stream.
             </summary>
            
        </member>
        <member name="T:NetumScan.Core.BITMAPFILEHEADER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPFILEHEADER.BM">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPFILEHEADER.bfType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPFILEHEADER.bfSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPFILEHEADER.bfReserved1">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPFILEHEADER.bfReserved2">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPFILEHEADER.bfOffBits">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.BITMAPINFOHEADER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biPlanes">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biBitCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biCompression">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biSizeImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biXPelsPerMeter">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biYPelsPerMeter">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biClrUsed">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.biClrImportant">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5RedMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5GreenMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5BlueMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5AlphaMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5CSType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5Endpoints">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5GammaRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5GammaGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5GammaBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5Intent">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5ProfileData">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5ProfileSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.bV5Reserved">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPINFOHEADER.DIB_RGB_COLORS">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BITMAPINFOHEADER.#ctor(System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="bpp"></param>
        </member>
        <member name="P:NetumScan.Core.BITMAPINFOHEADER.OffsetToPixels">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.CIEXYZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CIEXYZ.ciexyzX">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CIEXYZ.ciexyzY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CIEXYZ.ciexyzZ">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.CIEXYZ.#ctor(System.UInt32)">
            <summary>
            
            </summary>
            <param name="FXPT2DOT30"></param>
        </member>
        <member name="T:NetumScan.Core.CIEXYZTRIPLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CIEXYZTRIPLE.ciexyzRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CIEXYZTRIPLE.ciexyzGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.CIEXYZTRIPLE.ciexyzBlue">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.INPUT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.INPUT.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.INPUT.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.InputUnion">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.InputUnion.Mouse">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.InputUnion.Keyboard">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.InputUnion.Hardware">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.MOUSEINPUT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MOUSEINPUT.dx">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MOUSEINPUT.dy">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MOUSEINPUT.mouseData">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MOUSEINPUT.dwFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MOUSEINPUT.time">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MOUSEINPUT.dwExtraInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.KEYBDINPUT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KEYBDINPUT.wVk">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KEYBDINPUT.wScan">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KEYBDINPUT.dwFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KEYBDINPUT.time">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.KEYBDINPUT.dwExtraInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.HARDWAREINPUT">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HARDWAREINPUT.uMsg">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HARDWAREINPUT.wParamL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HARDWAREINPUT.wParamH">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.IViewObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IViewObject.Draw(System.UInt32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,NetumScan.Core.RECT@,System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="dwAspect"></param>
            <param name="lindex"></param>
            <param name="pvAspect"></param>
            <param name="ptd"></param>
            <param name="hdcTargetDev"></param>
            <param name="hdcDraw"></param>
            <param name="lprcBounds"></param>
            <param name="lprcWBounds"></param>
            <param name="pfnContinue"></param>
            <param name="dwContinue"></param>
        </member>
        <member name="T:NetumScan.Core.FLASHWINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.FLASHWINFO.cbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.FLASHWINFO.hwnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.FLASHWINFO.dwFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.FLASHWINFO.uCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.FLASHWINFO.dwTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SCROLLINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SCROLLINFO.cbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SCROLLINFO.fMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SCROLLINFO.nMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SCROLLINFO.nMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SCROLLINFO.nPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SCROLLINFO.nPos">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SCROLLINFO.nTrackPos">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SECURITY_ATTRIBUTES">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SECURITY_ATTRIBUTES.nLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SECURITY_ATTRIBUTES.lpSecurityDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SECURITY_ATTRIBUTES.bInheritHandle">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.STARTUPINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.cb">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.lpReserved">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.lpDesktop">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.lpTitle">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwX">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwXSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwYSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwXCountChars">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwYCountChars">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwFillAttribute">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.dwFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.wShowWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.cbReserved2">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.lpReserved2">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.hStdInput">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.hStdOutput">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.STARTUPINFO.hStdError">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.PROCESS_INFORMATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PROCESS_INFORMATION.hProcess">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PROCESS_INFORMATION.hThread">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PROCESS_INFORMATION.dwProcessId">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.PROCESS_INFORMATION.dwThreadId">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SHFILEINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SHFILEINFO.NAMESIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SHFILEINFO.hIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SHFILEINFO.iIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SHFILEINFO.dwAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SHFILEINFO.szDisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SHFILEINFO.szTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.IMAGELISTDRAWPARAMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.cbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.himl">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.i">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.hdcDst">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.x">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.y">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.cx">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.cy">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.xBitmap">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.yBitmap">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.rgbBk">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.rgbFg">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.fStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.dwRop">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.fState">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.Frame">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGELISTDRAWPARAMS.crEffect">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.IMAGEINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGEINFO.hbmImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGEINFO.hbmMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGEINFO.Unused1">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGEINFO.Unused2">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.IMAGEINFO.rcImage">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.IImageList">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.Add(System.IntPtr,System.IntPtr,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.ReplaceIcon(System.Int32,System.IntPtr,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.SetOverlayImage(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.Replace(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.AddMasked(System.IntPtr,System.Int32,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.Draw(NetumScan.Core.IMAGELISTDRAWPARAMS@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.Remove(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetIcon(System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetImageInfo(System.Int32,NetumScan.Core.IMAGEINFO@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.Copy(System.Int32,NetumScan.Core.IImageList,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.Merge(System.Int32,NetumScan.Core.IImageList,System.Int32,System.Int32,System.Int32,System.Guid@,System.IntPtr@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.Clone(System.Guid@,System.IntPtr@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetImageRect(System.Int32,NetumScan.Core.RECT@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetIconSize(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.SetIconSize(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetImageCount(System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.SetImageCount(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.SetBkColor(System.Int32,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetBkColor(System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.BeginDrag(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.EndDrag">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.DragEnter(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.DragLeave(System.IntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.DragMove(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.SetDragCursorImage(NetumScan.Core.IImageList@,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.DragShowNolock(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetDragImage(NetumScan.Core.POINT@,NetumScan.Core.POINT@,System.Guid@,System.IntPtr@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetItemFlags(System.Int32,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.IImageList.GetOverlayImage(System.Int32,System.Int32@)">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.BITMAPV5HEADER">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Height">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Planes">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5BitCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Compression">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5SizeImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5XPelsPerMeter">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5YPelsPerMeter">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5ClrUsed">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5ClrImportant">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5RedMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5GreenMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5BlueMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5AlphaMask">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5CSType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Endpoints">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5GammaRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5GammaGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5GammaBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Intent">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5ProfileData">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5ProfileSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.BITMAPV5HEADER.bV5Reserved">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SP_DEVICE_INTERFACE_DATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVICE_INTERFACE_DATA.cbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVICE_INTERFACE_DATA.InterfaceClassGuid">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVICE_INTERFACE_DATA.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVICE_INTERFACE_DATA.Reserved">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SP_DEVINFO_DATA">
            <summary>
            设备信息数据
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVINFO_DATA.cbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVINFO_DATA.ClassGuid">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVINFO_DATA.DevInst">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVINFO_DATA.Reserved">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.SP_DEVICE_INTERFACE_DETAIL_DATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVICE_INTERFACE_DETAIL_DATA.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.SP_DEVICE_INTERFACE_DETAIL_DATA.DevicePath">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DEVPROPKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DEVPROPKEY.fmtid">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DEVPROPKEY.pid">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.HIDD_ATTRIBUTES">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDD_ATTRIBUTES.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDD_ATTRIBUTES.VendorID">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDD_ATTRIBUTES.ProductID">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDD_ATTRIBUTES.VersionNumber">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.HIDP_CAPS">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.Usage">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.UsagePage">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.InputReportByteLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.OutputReportByteLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.FeatureReportByteLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.Reserved">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberLinkCollectionNodes">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberInputButtonCaps">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberInputValueCaps">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberInputDataIndices">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberOutputButtonCaps">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberOutputValueCaps">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberOutputDataIndices">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberFeatureButtonCaps">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberFeatureValueCaps">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HIDP_CAPS.NumberFeatureDataIndices">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.WindowInfo">
            <summary>
            窗口信息
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.Handle">
            <summary>
            句柄
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.IsHandleCreated">
            <summary>
            IsHandleCreated
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.Process">
            <summary>
            进程
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.ProcessName">
            <summary>
            进程名
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.ProcessFilePath">
            <summary>
            进程文件路径
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.ProcessFileName">
            <summary>
            进程文件名称
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.ProcessId">
            <summary>
            进程ID 
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.Rectangle">
            <summary>
            矩形区域
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.ClientRectangle">
            <summary>
            客户矩形区域
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.Styles">
            <summary>
            窗口样式
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.IsMaximized">
            <summary>
            是否最大化
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.IsMinimized">
            <summary>
            是否最小化
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.IsVisible">
            <summary>
            是否显示
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.IsCloaked">
            <summary>
            是否遮盖
            </summary>
        </member>
        <member name="P:NetumScan.Core.WindowInfo.IsActive">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="M:NetumScan.Core.WindowInfo.#ctor(System.IntPtr)">
            <summary>
            构造函数
            </summary>
            <param name="handle">句柄</param>
        </member>
        <member name="M:NetumScan.Core.WindowInfo.Activate">
            <summary>
            激活窗口
            </summary>
        </member>
        <member name="M:NetumScan.Core.WindowInfo.Restore">
            <summary>
            恢复
            </summary>
        </member>
        <member name="M:NetumScan.Core.WindowInfo.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.DebugHelper">
            <summary>
            调试帮助类
            </summary>
        </member>
        <member name="P:NetumScan.Core.DebugHelper.Logger">
            <summary>
            记录器
            </summary>
        </member>
        <member name="M:NetumScan.Core.DebugHelper.Init(System.String)">
            <summary>
            初始化
            </summary>
            <param name="logFilePath"></param>
        </member>
        <member name="M:NetumScan.Core.DebugHelper.WriteLine(System.String)">
            <summary>
            写入一行
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:NetumScan.Core.DebugHelper.WriteLine(System.String,System.Object[])">
            <summary>
            写入一行
            </summary>
            <param name="format">格式</param>
            <param name="args">参数</param>
        </member>
        <member name="M:NetumScan.Core.DebugHelper.WriteException(System.String,System.String)">
            <summary>
            写入异常
            </summary>
            <param name="exception">异常</param>
            <param name="message">消息</param>
        </member>
        <member name="M:NetumScan.Core.DebugHelper.WriteException(System.Exception,System.String)">
            <summary>
            写入异常
            </summary>
            <param name="exception">异常</param>
            <param name="message">消息</param>
        </member>
        <member name="T:NetumScan.Core.DebugTimer">
            <summary>
            调试计时器
            </summary>
        </member>
        <member name="P:NetumScan.Core.DebugTimer.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="M:NetumScan.Core.DebugTimer.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:NetumScan.Core.DebugTimer.WriteElapsedMilliseconds(System.String)">
            <summary>
            写入延时毫秒
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:NetumScan.Core.DebugTimer.WriteElapsedSeconds(System.String)">
            <summary>
            写入延时秒
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:NetumScan.Core.DebugTimer.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="T:NetumScan.Core.Logger">
            <summary>
            记录器
            </summary>
        </member>
        <member name="T:NetumScan.Core.Logger.MessageAddedEventHandler">
            <summary>
            消息添加事件处理程序
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="E:NetumScan.Core.Logger.MessageAdded">
            <summary>
            消息添加事件处理事件
            </summary>
        </member>
        <member name="P:NetumScan.Core.Logger.MessageFormat">
            <summary>
            消息格式
            </summary>
        </member>
        <member name="P:NetumScan.Core.Logger.AsyncWrite">
            <summary>
            异步写入
            </summary>
        </member>
        <member name="P:NetumScan.Core.Logger.DebugWrite">
            <summary>
            调试写入
            </summary>
        </member>
        <member name="P:NetumScan.Core.Logger.StringWrite">
            <summary>
            字符串写入
            </summary>
        </member>
        <member name="P:NetumScan.Core.Logger.FileWrite">
            <summary>
            文件写入
            </summary>
        </member>
        <member name="P:NetumScan.Core.Logger.LogFilePath">
            <summary>
            日志文件路径
            </summary>
        </member>
        <member name="M:NetumScan.Core.Logger.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:NetumScan.Core.Logger.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="logFilePath">日志文件路径</param>
        </member>
        <member name="M:NetumScan.Core.Logger.OnMessageAdded(System.String)">
            <summary>
            消息添加方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NetumScan.Core.Logger.ProcessMessageQueue">
            <summary>
            处理消息队列
            </summary>
        </member>
        <member name="M:NetumScan.Core.Logger.Write(System.String)">
            <summary>
            写入
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:NetumScan.Core.Logger.Write(System.String,System.Object[])">
            <summary>
            写入
            </summary>
            <param name="format">格式</param>
            <param name="args">参数</param>
        </member>
        <member name="M:NetumScan.Core.Logger.WriteLine(System.String)">
            <summary>
            写入一行
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:NetumScan.Core.Logger.WriteLine(System.String,System.Object[])">
            <summary>
            写入一行
            </summary>
            <param name="format">格式</param>
            <param name="args">参数</param>
        </member>
        <member name="M:NetumScan.Core.Logger.WriteException(System.String,System.String)">
            <summary>
            写入异常
            </summary>
            <param name="exception">异常</param>
            <param name="message">信息</param>
        </member>
        <member name="M:NetumScan.Core.Logger.WriteException(System.Exception,System.String)">
            <summary>
            写入异常
            </summary>
            <param name="exception">异常</param>
            <param name="message">信息</param>
        </member>
        <member name="M:NetumScan.Core.Logger.Clear">
            <summary>
            清除
            </summary>
        </member>
        <member name="M:NetumScan.Core.Logger.ToString">
            <summary>
            重写<see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.RecordManager">
            <summary>
            消息管理器
            </summary>
        </member>
        <member name="T:NetumScan.Core.RecordManager.DataDisplayEventHandler">
            <summary>
            消息显示委托
            </summary>
            <param name="description">描述</param>
            <param name="level">消息级别</param>
        </member>
        <member name="E:NetumScan.Core.RecordManager.DataDisplayEvent">
            <summary>
            消息显示事件
            </summary>
        </member>
        <member name="M:NetumScan.Core.RecordManager.Log(NetumScan.Core.RecordLevel,System.Exception,System.String,System.Object[])">
            <summary>
            在指定的日志级别格式化和写入日志消息。
            </summary>
            <param name="level">消息级别</param>
            <param name="exception">异常内容</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.Log(NetumScan.Core.RecordLevel,System.String,System.Object[])">
            <summary>
            在指定的日志级别格式化和写入日志消息。
            </summary>
            <param name="level">消息级别</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogCritical(System.Exception,System.String,System.Object[])">
            <summary>
            格式化并写入关键日志消息。
            </summary>
            <param name="exception">异常内容</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogCritical(System.String,System.Object[])">
            <summary>
            格式化并写入关键日志消息。
            </summary>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogDebug(System.Exception,System.String,System.Object[])">
            <summary>
            格式化并写入调试日志消息。
            </summary>
            <param name="exception">异常内容</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogDebug(System.String,System.Object[])">
            <summary>
            格式化并写入调试日志消息。
            </summary>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogError(System.Exception,System.String,System.Object[])">
            <summary>
            格式化并写入错误日志消息。
            </summary>
            <param name="exception">异常内容</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogError(System.String,System.Object[])">
            <summary>
            格式化并写入错误日志消息。
            </summary>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogInformation(System.Exception,System.String,System.Object[])">
            <summary>
            格式化并写入信息性日志消息。
            </summary>
            <param name="exception">异常内容</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogInformation(System.String,System.Object[])">
            <summary>
            格式化并写入信息性日志消息。
            </summary>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogTrace(System.Exception,System.String,System.Object[])">
            <summary>
            格式化并写入跟踪日志消息。
            </summary>
            <param name="exception">异常内容</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogTrace(System.String,System.Object[])">
            <summary>
            格式化并写入跟踪日志消息。
            </summary>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogWarning(System.Exception,System.String,System.Object[])">
            <summary>
            格式化并写入警告日志消息。
            </summary>
            <param name="exception">异常内容</param>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="M:NetumScan.Core.RecordManager.LogWarning(System.String,System.Object[])">
            <summary>
            格式化并写入警告日志消息。
            </summary>
            <param name="message">消息内容</param>
            <param name="args">格式化参数</param>
        </member>
        <member name="T:NetumScan.Core.CssFileNameEditor">
            <summary>
            CSS文件名编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.CssFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context">上下文</param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.DirectoryNameEditor">
            <summary>
            文件夹名称编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.DirectoryNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.EnumDescriptionConverter">
            <summary>
            枚举描述转换器
            </summary>
        </member>
        <member name="M:NetumScan.Core.EnumDescriptionConverter.#ctor(System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:NetumScan.Core.EnumDescriptionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回此转换器是否可将该对象转换为指定的类型。
            </summary>
            <param name="context"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumDescriptionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            使用参数将给定的值对象转换为指定的类型。
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumDescriptionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回此转换器能否使用指定上下文将对象转换为指定类型。
            </summary>
            <param name="context"></param>
            <param name="srcType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumDescriptionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            将给定值转换为此转换器的类型。
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.EnumProperNameConverter">
            <summary>
            枚举属性名称转换器
            </summary>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameConverter.#ctor(System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回此转换器是否可将该对象转换为指定的类型。
            </summary>
            <param name="context"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            使用参数将给定的值对象转换为指定的类型。
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回此转换器能否使用指定上下文将对象转换为指定类型。
            </summary>
            <param name="context"></param>
            <param name="srcType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            将给定值转换为此转换器的类型。
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.EnumProperNameKeepCaseConverter">
            <summary>
            枚举属性名称保留大小写转换器
            </summary>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameKeepCaseConverter.#ctor(System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameKeepCaseConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回此转换器是否可将该对象转换为指定的类型。
            </summary>
            <param name="context"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameKeepCaseConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            使用参数将给定的值对象转换为指定的类型。
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameKeepCaseConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            返回此转换器能否使用指定上下文将对象转换为指定类型。
            </summary>
            <param name="context"></param>
            <param name="srcType"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.EnumProperNameKeepCaseConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            将给定值转换为此转换器的类型。
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.ExeFileNameEditor">
            <summary>
            EXE文件名编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.ExeFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.GradientEditor">
            <summary>
            渐变编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            获取编辑样式
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GradientEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GradientEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            获取支持的绘制值
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.GradientEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            绘制值
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ImageFileNameEditor">
            <summary>
            图像文件名编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.ImageFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.JsonFileNameEditor">
            <summary>
            Json文件名编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.JsonFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.MyColorConverter">
            <summary>
            我的颜色转换器
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            获取支持的标准值
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.MyColorEditor">
            <summary>
            我的颜色编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            获取编辑样式
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MyColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MyColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            获取支持的绘制值
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.MyColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            绘制值
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.NameParserEditor">
            <summary>
            名称分析器编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.NameParserEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            获取编辑样式
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.NameParserEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.StringCollectionToStringTypeConverter">
            <summary>
            StringCollectionToStringTypeConverter
            </summary>
        </member>
        <member name="M:NetumScan.Core.StringCollectionToStringTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            使用指定的上下文和区域性信息将给定值对象转换为指定的类型。
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.WavFileNameEditor">
            <summary>
            WAV文件名编辑器
            </summary>
        </member>
        <member name="M:NetumScan.Core.WavFileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            编辑值
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.BlackStyleButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleButton.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleButton.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleButton.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleButton.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleButton.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.BlackStyleCheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleCheckBox.Checked">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleCheckBox.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleCheckBox.SpaceAfterCheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleCheckBox.IgnoreClick">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.BlackStyleCheckBox.CheckedChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleCheckBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleCheckBox.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleCheckBox.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleCheckBox.OnClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleCheckBox.OnCheckedChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.BlackStyleCheckBox.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.BlackStyleForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.BlackStyleLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleLabel.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleLabel.TextAlign">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleLabel.TextShadowColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleLabel.DrawBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleLabel.AutoEllipsis">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleLabel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pe"></param>
        </member>
        <member name="T:NetumScan.Core.BlackStyleProgressBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleProgressBar.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleProgressBar.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleProgressBar.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleProgressBar.ShowPercentageText">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.BlackStyleProgressBar.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleProgressBar.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.BlackStyleProgressBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pe"></param>
        </member>
        <member name="T:NetumScan.Core.UpdatePanel">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.UpdatePanel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.UpdatePanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:NetumScan.Core.UpdatePanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.UpdatePanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.UpdatePanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.Canvas">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.Canvas.DrawEventHandler">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="E:NetumScan.Core.Canvas.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.Canvas.Interval">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.Canvas.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.Canvas.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.Canvas.Start(System.Int32)">
            <summary>
            
            </summary>
            <param name="interval"></param>
        </member>
        <member name="M:NetumScan.Core.Canvas.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.Canvas.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NetumScan.Core.Canvas.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.Canvas.OnDraw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:NetumScan.Core.ColorBox">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.DrawCrosshair(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:NetumScan.Core.ColorBox.DrawHue">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.DrawSaturation">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.DrawBrightness">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.DrawRed">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.DrawGreen">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorBox.DrawBlue">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ColorButton">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ColorButton.ColorChangedEventHandler">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="E:NetumScan.Core.ColorButton.ColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorButton.Color">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorButton.BorderColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorButton.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorButton.HoverEffect">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorButton.ManualButtonClick">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorButton.OnColorChanged(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:NetumScan.Core.ColorButton.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="mevent"></param>
        </member>
        <member name="M:NetumScan.Core.ColorButton.ShowColorDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorButton.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ColorButton.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ColorButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:NetumScan.Core.ColorPicker">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.ColorPicker.ColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorPicker.SelectedColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorPicker.DrawStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorPicker.CrosshairVisible">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorPicker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorPicker.ChangeColor(System.Drawing.Color,NetumScan.Core.ColorType)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="colorType"></param>
        </member>
        <member name="M:NetumScan.Core.ColorPicker.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.ColorSlider">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawCrosshair(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawCrosshair(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="pen"></param>
            <param name="offset"></param>
            <param name="height"></param>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawHue">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawSaturation">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawBrightness">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawRed">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawGreen">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorSlider.DrawBlue">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ColorUserControl">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.ColorUserControl.ColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorUserControl.CrosshairVisible">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorUserControl.SelectedColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorUserControl.DrawStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.bmp">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.clientWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.clientHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.drawStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.selectedColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.mouseDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.lastPos">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorUserControl.mouseMoveTimer">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.OnColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawColors">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.SetBoxMarker">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.GetBoxColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.SetSliderMarker">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.GetSliderColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawCrosshair(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawHue">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawSaturation">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawBrightness">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawRed">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawGreen">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.DrawBlue">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.GetPointColor(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.GetPoint(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorUserControl.Round(System.Double)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.DarkColorTable">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonSelectedHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonSelectedHighlightBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonPressedHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonPressedHighlightBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonCheckedHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonCheckedHighlightBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonPressedBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonSelectedBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonCheckedGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonCheckedGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonCheckedGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonSelectedGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonSelectedGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonSelectedGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonPressedGradientBegin">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonPressedGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ButtonPressedGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.CheckBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.CheckSelectedBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.CheckPressedBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.GripDark">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.GripLight">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ImageMarginGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ImageMarginGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ImageMarginGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ImageMarginRevealedGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ImageMarginRevealedGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ImageMarginRevealedGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuStripGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuStripGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuItemSelected">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuItemBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuItemSelectedGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuItemSelectedGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuItemPressedGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuItemPressedGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.MenuItemPressedGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.RaftingContainerGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.RaftingContainerGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.SeparatorDark">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.SeparatorLight">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.StatusStripGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.StatusStripGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripDropDownBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripContentPanelGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripContentPanelGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripPanelGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.ToolStripPanelGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.OverflowButtonGradientBegin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.OverflowButtonGradientMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DarkColorTable.OverflowButtonGradientEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DoubleLabeledNumericUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DoubleLabeledNumericUpDown.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DoubleLabeledNumericUpDown.Text2">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DoubleLabeledNumericUpDown.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DoubleLabeledNumericUpDown.Value2">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DoubleLabeledNumericUpDown.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DoubleLabeledNumericUpDown.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DoubleLabeledNumericUpDown.Increment">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DoubleLabeledNumericUpDown.ValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.DoubleLabeledNumericUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DoubleLabeledNumericUpDown.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.DoubleLabeledNumericUpDown.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.DoubleLabeledNumericUpDown.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.ExportImportControl">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ExportImportControl.ExportEventHandler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:NetumScan.Core.ExportImportControl.ExportRequested">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ExportImportControl.ImportEventHandler">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="E:NetumScan.Core.ExportImportControl.ImportRequested">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.ExportImportControl.ImportCompleted">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ExportImportControl.UploadEventHandler">
            <summary>
            
            </summary>
            <param name="json"></param>
        </member>
        <member name="E:NetumScan.Core.ExportImportControl.UploadRequested">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExportImportControl.ObjectType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExportImportControl.SerializationBinder">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExportImportControl.ExportIgnoreDefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExportImportControl.ExportIgnoreNull">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExportImportControl.CustomFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ExportImportControl.DefaultFileName">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ExportImportControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ExportImportControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.ExportImportControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.ExportImportControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.HotkeySelectionButton">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.HotkeySelectionButton.HotkeyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeySelectionButton.HotkeyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeySelectionButton.EditingHotkey">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HotkeySelectionButton.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.UpdateHotkey(NetumScan.Core.HotkeyInfo)">
            <summary>
            
            </summary>
            <param name="hotkeyInfo"></param>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.OnLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="kevent"></param>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="kevent"></param>
        </member>
        <member name="M:NetumScan.Core.HotkeySelectionButton.OnHotkeyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.LabeledComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledComboBox.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledComboBox.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.LabeledComboBox.SelectedIndexChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.LabeledComboBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.LabeledComboBox.Add(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:NetumScan.Core.LabeledComboBox.AddRange(System.Object[])">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="F:NetumScan.Core.LabeledComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.LabeledComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.LabeledComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.LabeledNumericUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledNumericUpDown.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledNumericUpDown.Text2">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledNumericUpDown.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledNumericUpDown.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledNumericUpDown.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabeledNumericUpDown.Increment">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.LabeledNumericUpDown.ValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.LabeledNumericUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.LabeledNumericUpDown.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.LabeledNumericUpDown.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.LabeledNumericUpDown.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.LabelNoCopy">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.LabelNoCopy.Text">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.MenuButton">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MenuButton.Menu">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MenuButton.ShowMenuUnderCursor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MenuButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="mevent"></param>
        </member>
        <member name="M:NetumScan.Core.MenuButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:NetumScan.Core.MyListView">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.MyListView.ListViewItemMovedEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="E:NetumScan.Core.MyListView.ItemMoving">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.MyListView.ItemMoved">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyListView.AutoFillColumn">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyListView.AutoFillColumnIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyListView.AllowColumnSort">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyListView.AllowItemDrag">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyListView.DisableDeselect">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyListView.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyListView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyListView.FillColumn(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.FillLastColumn">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyListView.Select(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.SelectLast">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyListView.SelectSingle(System.Windows.Forms.ListViewItem)">
            <summary>
            
            </summary>
            <param name="lvi"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.UnselectAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyListView.EnsureSelectedVisible">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnItemMoving(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnItemMoved(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnDragLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.MyListView.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>
            
            </summary>
            <param name="factor"></param>
            <param name="specified"></param>
        </member>
        <member name="T:NetumScan.Core.MyPictureBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.PictureBoxBackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.DrawCheckeredBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.FullscreenOnClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.EnableRightClickMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.ShowImageSizeLabel">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.MyPictureBox.MouseDown">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.MyPictureBox.MouseUp">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.MyPictureBox.MouseClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.MyPictureBox.IsValidImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.UpdateTheme">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.UpdateCheckers(System.Boolean)">
            <summary>
            
            </summary>
            <param name="forceUpdate"></param>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.LoadImage(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.LoadImageFromFile(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.LoadImageFromFileAsync(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.LoadImageFromURLAsync(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.MyPictureBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.MyPictureBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.NoFocusBorderButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.NoFocusBorderButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.NoFocusBorderButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ObjectListView">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ObjectListView.ObjectType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ObjectListView.ObjectType.Fields">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ObjectListView.ObjectType.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ObjectListView.SetObjectType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ObjectListView.SelectedObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ObjectListView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.RoundedCornerPanel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RoundedCornerPanel.Radius">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.RoundedCornerPanel.PanelColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.RoundedCornerPanel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.RoundedCornerPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.SplitContainerCustomSplitter">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.SplitContainerCustomSplitter.SplitterColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.SplitContainerCustomSplitter.SplitterLineColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.SplitContainerCustomSplitter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="T:NetumScan.Core.TablessControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TablessControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="T:NetumScan.Core.TabToListView">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToListView.MainTabControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToListView.ListViewSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToListView.ImageList">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToListView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToListView.NavigateToTabPage(System.Windows.Forms.TabPage)">
            <summary>
            
            </summary>
            <param name="tabPage"></param>
        </member>
        <member name="M:NetumScan.Core.TabToListView.FocusListView">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToListView.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>
            
            </summary>
            <param name="factor"></param>
            <param name="specified"></param>
        </member>
        <member name="F:NetumScan.Core.TabToListView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToListView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.TabToListView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.TabToTreeView">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.TabToTreeView.TabChangedEventHandler">
            <summary>
            
            </summary>
            <param name="tabPage"></param>
        </member>
        <member name="E:NetumScan.Core.TabToTreeView.TabChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToTreeView.MainTabControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToTreeView.TreeViewSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToTreeView.TreeViewFont">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToTreeView.ImageList">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToTreeView.LeftPanelBackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToTreeView.SeparatorColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.TabToTreeView.AutoSelectChild">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToTreeView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToTreeView.NavigateToTabPage(System.Windows.Forms.TabPage)">
            <summary>
            
            </summary>
            <param name="tabPage"></param>
        </member>
        <member name="M:NetumScan.Core.TabToTreeView.SelectChildNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToTreeView.OnTabChanged(System.Windows.Forms.TabPage)">
            <summary>
            
            </summary>
            <param name="tabPage"></param>
        </member>
        <member name="M:NetumScan.Core.TabToTreeView.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>
            
            </summary>
            <param name="factor"></param>
            <param name="specified"></param>
        </member>
        <member name="F:NetumScan.Core.TabToTreeView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.TabToTreeView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.TabToTreeView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.ToolStripBorderRight">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripBorderRight.DrawCustomBorder">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripBorderRight.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripBorderRight.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripButtonColorAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripButtonColorAnimation.FromColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripButtonColorAnimation.ToColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripButtonColorAnimation.AnimationSpeed">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripButtonColorAnimation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripButtonColorAnimation.StartAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripButtonColorAnimation.StopAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripButtonColorAnimation.ResetAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripButtonColorAnimation.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripButtonCounter">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripButtonCounter.Counter">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.ToolStripButtonExtraImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripButtonExtraImage.ShowExtraImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripButtonExtraImage.ExtraImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripButtonExtraImage.ExtraImagePadding">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripButtonExtraImage.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripButtonExtraImage.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripCustomRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripCustomRenderer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripCustomRenderer.#ctor(System.Windows.Forms.ProfessionalColorTable)">
            <summary>
            
            </summary>
            <param name="professionalColorTable"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripCustomRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripCustomRenderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripDarkRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripDarkRenderer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripDarkRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripDarkRenderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripDoubleLabeledNumericUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripDoubleLabeledNumericUpDown.Content">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripDoubleLabeledNumericUpDown.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="text2"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripEx">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripEx.ClickThrough">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripEx.WndProc(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripLabeledComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripLabeledComboBox.Content">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripLabeledComboBox.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripLabeledNumericUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripLabeledNumericUpDown.Content">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripLabeledNumericUpDown.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripNumericUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="E:NetumScan.Core.ToolStripNumericUpDown.ValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ToolStripNumericUpDown.NumericUpDownControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripNumericUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripNumericUpDown.OnSubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripNumericUpDown.OnUnsubscribeControlEvents(System.Windows.Forms.Control)">
            <summary>
            
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripNumericUpDown.OnValueChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripRadioButtonMenuItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor(System.String,System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="image"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="image"></param>
            <param name="onClick"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="image"></param>
            <param name="onClick"></param>
            <param name="name"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor(System.String,System.Drawing.Image,System.Windows.Forms.ToolStripItem[])">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="image"></param>
            <param name="dropDownItems"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler,System.Windows.Forms.Keys)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="image"></param>
            <param name="onClick"></param>
            <param name="shortcutKeys"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnCheckedChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NetumScan.Core.ToolStripRadioButtonMenuItem.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripRadioButtonMenuItem.OnOwnerChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.ToolStripRoundedEdgeRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripRoundedEdgeRenderer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ToolStripRoundedEdgeRenderer.#ctor(System.Windows.Forms.ProfessionalColorTable)">
            <summary>
            
            </summary>
            <param name="professionalColorTable"></param>
        </member>
        <member name="T:NetumScan.Core.ColorPickerForm">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.ColorPickerForm.OpenScreenColorPicker">
            <summary>
            /
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorPickerForm.NewColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorPickerForm.OldColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ColorPickerForm.IsScreenColorPickerMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorPickerForm.#ctor(System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="currentColor"></param>
            <param name="isScreenColorPickerMode"></param>
            <param name="checkClipboard"></param>
        </member>
        <member name="M:NetumScan.Core.ColorPickerForm.EnableScreenColorPickerButton(System.Func{NetumScan.Core.PointInfo})">
            <summary>
            
            </summary>
            <param name="openScreenColorPicker"></param>
        </member>
        <member name="M:NetumScan.Core.ColorPickerForm.CheckClipboard">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorPickerForm.PickColor(System.Drawing.Color,System.Drawing.Color@,System.Windows.Forms.Form,System.Func{NetumScan.Core.PointInfo})">
            <summary>
            
            </summary>
            <param name="currentColor"></param>
            <param name="newColor"></param>
            <param name="owner"></param>
            <param name="openScreenColorPicker"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.ColorPickerForm.SetCurrentColor(System.Drawing.Color,System.Boolean)">
            <summary>
            
            </summary>
            <param name="currentColor"></param>
            <param name="keepPreviousColor"></param>
        </member>
        <member name="F:NetumScan.Core.ColorPickerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.ColorPickerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.ColorPickerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.DebugForm">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.DebugForm.EventHandler">
            <summary>
            
            </summary>
            <param name="log"></param>
        </member>
        <member name="E:NetumScan.Core.DebugForm.UploadRequested">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DebugForm.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DebugForm.HasUploadRequested">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.DebugForm.GetFormInstance(NetumScan.Core.Logger)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="F:NetumScan.Core.DebugForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.DebugForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.DebugForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.ErrorForm">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ErrorForm.IsUnhandledException">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ErrorForm.LogPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.ErrorForm.BugReportPath">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ErrorForm.#ctor(System.Exception,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="error"></param>
            <param name="logPath"></param>
            <param name="bugReportPath"></param>
        </member>
        <member name="M:NetumScan.Core.ErrorForm.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="errorTitle"></param>
            <param name="errorMessage"></param>
            <param name="logPath"></param>
            <param name="bugReportPath"></param>
            <param name="unhandledException"></param>
        </member>
        <member name="F:NetumScan.Core.ErrorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.ErrorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.ErrorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.GradientPickerForm">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.GradientPickerForm.Gradient">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientPickerForm.#ctor(NetumScan.Core.GradientInfo)">
            <summary>
            
            </summary>
            <param name="gradient"></param>
        </member>
        <member name="F:NetumScan.Core.GradientPickerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.GradientPickerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.GradientPickerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.HashCheckForm">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.HashCheckForm.CompareTwoFiles">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.HashCheckForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.HashCheckForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.HashCheckForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.HashCheckForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.ImageViewer">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.ImageViewer.ShowImage(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:NetumScan.Core.ImageViewer.ShowImage(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="F:NetumScan.Core.ImageViewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.ImageViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.ImageViewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.InputBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.InputBox.InputText">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.InputBox.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="inputText"></param>
            <param name="okText"></param>
            <param name="cancelText"></param>
        </member>
        <member name="M:NetumScan.Core.InputBox.GetInputText(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="inputText"></param>
            <param name="okText"></param>
            <param name="cancelText"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.InputBox.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.TransparentForm">
            <summary>
            透明提示显示窗体
            </summary>
        </member>
        <member name="F:NetumScan.Core.TransparentForm.Factor">
            <summary>
            因素
            </summary>
        </member>
        <member name="F:NetumScan.Core.TransparentForm.bmp">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:NetumScan.Core.TransparentForm.g">
            <summary>
            画布
            </summary>
        </member>
        <member name="M:NetumScan.Core.TransparentForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TransparentForm.Display(System.String,System.Boolean,System.Drawing.Rectangle)">
            <summary>
            显示
            </summary>
            <param name="content"></param>
            <param name="middle"></param>
            <param name="rect"></param>
        </member>
        <member name="P:NetumScan.Core.TransparentForm.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.TransparentForm.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:NetumScan.Core.Network.CallDockingHelper">
            <summary>
            调用对接帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.Network.CallDockingHelper.HttpRequestMultipartPostMethod(System.String,System.Int32)">
            <summary>
            基于multipart/form-data的Http Post请求方法
            </summary>
            <param name="url">请求URL</param>
            <param name="timeout">响应的超时值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Network.CallDockingHelper.HttpRequestMultipartPostMethod(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            基于multipart/form-data的Http Post请求方法
            </summary>
            <param name="url">请求URL</param>
            <param name="timeout">响应的超时值</param>
            <param name="keyValues">参数键值</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.Network.CallDockingHelper.HttpRequestPostMethod(System.String,System.Int32,System.String,System.String)">
            <summary>
            通用POST请求方法
            </summary>
            <param name="url">请求URL</param>
            <param name="timeout">响应的超时值</param>
            <param name="contentType">HTTP标头的值</param>
            <param name="postString">请求数据</param>
            <returns>API反馈请求数据</returns>
        </member>
        <member name="M:NetumScan.Core.Network.CallDockingHelper.HttpRequestPostMethod(System.String,System.Int32,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            通用POST请求方法
            </summary>
            <param name="url">请求URL</param>
            <param name="timeout">响应的超时值</param>
            <param name="contentType">HTTP标头的值</param>
            <param name="postString">请求数据</param>
            <param name="headers">表头数据</param>
            <returns>API反馈请求数据</returns>
        </member>
        <member name="M:NetumScan.Core.Network.CallDockingHelper.HttpRequestGetMethod(System.String,System.Int32,System.String)">
            <summary>
            通用GET请求方法
            </summary>
            <param name="url">请求URL</param>
            <param name="timeout">响应的超时值</param>
            <param name="contentType">HTTP标头的值</param>
            <returns>API反馈请求数据</returns>
        </member>
        <member name="M:NetumScan.Core.Network.CallDockingHelper.HttpRequestGetMethod(System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            通用GET请求方法
            </summary>
            <param name="url">请求URL</param>
            <param name="timeout">响应的超时值</param>
            <param name="contentType">HTTP标头的值</param>
            <param name="headers">头部数据</param>
            <returns>API反馈请求数据</returns>
        </member>
        <member name="T:NetumScan.Core.IncrementHelper">
            <summary>
            递增计数
            </summary>
        </member>
        <member name="M:NetumScan.Core.IncrementHelper.Next(System.String,System.Int32)">
            <summary>Returns a non-negative random integer.</summary>
            <returns>A 32-bit signed integer that is greater than or equal to 0 and less than <c>System.Int32.MaxValue.</c></returns>
        </member>
        <member name="T:NetumScan.Core.QuickDisplay">
            <summary>
            快速显示
            </summary>
        </member>
        <member name="P:NetumScan.Core.QuickDisplay.Stride">
            <summary>
            宽距
            </summary>
        </member>
        <member name="P:NetumScan.Core.QuickDisplay.BufferSize">
            <summary>
            缓存大小
            </summary>
        </member>
        <member name="P:NetumScan.Core.QuickDisplay.Size">
            <summary>
            图片大小
            </summary>
        </member>
        <member name="P:NetumScan.Core.QuickDisplay.Rect">
            <summary>
            区域图片
            </summary>
        </member>
        <member name="P:NetumScan.Core.QuickDisplay.Buffer">
            <summary>
            缓存指针
            </summary>
        </member>
        <member name="P:NetumScan.Core.QuickDisplay.VideoFrame">
            <summary>
            图像帧
            </summary>
        </member>
        <member name="P:NetumScan.Core.QuickDisplay.ImageFrame">
            <summary>
            位图帧
            </summary>
        </member>
        <member name="M:NetumScan.Core.QuickDisplay.InitFrame(System.Int32,System.Int32)">
            <summary>
            初始化帧
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.QuickDisplay.DrawFrame(System.IntPtr)">
            <summary>
            绘制帧
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:NetumScan.Core.QuickDisplay.DrawFrame(System.Drawing.Bitmap)">
            <summary>
            绘制帧
            </summary>
            <param name="bitmap"></param>
        </member>
        <member name="M:NetumScan.Core.QuickDisplay.Apply(System.Drawing.Bitmap)">
            <summary>
            应用
            </summary>
            <param name="bitmap"></param>
        </member>
        <member name="T:NetumScan.Core.VSProjectSettings">
            <summary>
            VS临时项目清理类
            </summary>
        </member>
        <member name="M:NetumScan.Core.VSProjectSettings.ClearRecord">
            <summary>
            清理记录
            </summary>
        </member>
        <member name="T:NetumScan.Core.VSProjectSettings.Para">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Para.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Para.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.VSProjectSettings.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Model.LocalProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Model.Remote">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Model.IsFavorite">
            <summary>
            置顶标志
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Model.LastAccessed">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Model.IsLocal">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Model.HasRemote">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.VSProjectSettings.Model.IsSourceControlled">
            <summary>
            
            </summary>
        </member>
        <member name="T:NetumScan.Core.WiFiContentView">
            <summary>
            Windows WiFi帮助类
            </summary>
        </member>
        <member name="M:NetumScan.Core.WiFiContentView.GainWiFiInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.WiFiContentView.GainWiFiKey(System.String)">
            <summary>
            获取指定WiFi密码
            </summary>
            <param name="ssid"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.WiFiContentView.GainWiFiSSID">
            <summary>
            获取Wifi名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.WiFiContentView.RunCommand(System.String)">
            <summary>
            调用Netsh查询WiFi信息
            </summary>
            <param name="command">命令</param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.WiFiContentView.GainLocalIpAddress">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.AdapterInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.#ctor(System.Management.ManagementObject)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.GetEnabledAdapters">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.IsEnabled">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.GetCaption">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.GetDescription">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.GetDNS">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.SetDNS(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="primary"></param>
            <param name="secondary"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.SetDNSAutomatic">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.AdapterInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.DNSChangerForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.DNSChangerForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetumScan.Core.DNSChangerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.DNSChangerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NetumScan.Core.DNSChangerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.DNSInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DNSInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DNSInfo.PrimaryDNS">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.DNSInfo.SecondaryDNS">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.DNSInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="primaryDNS"></param>
            <param name="secondaryDNS"></param>
        </member>
        <member name="M:NetumScan.Core.DNSInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.PrintForm">
            <summary>
            /
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintForm.#ctor(System.Drawing.Image,NetumScan.Core.PrintSettings,System.Boolean)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="settings"></param>
            <param name="previewOnly"></param>
        </member>
        <member name="M:NetumScan.Core.PrintForm.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="F:NetumScan.Core.PrintForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.PrintHelper">
            <summary>
            打印帮助类
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintHelper.PrintType">
            <summary>
            打印类型
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintHelper.Image">
            <summary>
            图像
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintHelper.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintHelper.Settings">
            <summary>
            打印设置
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintHelper.Printable">
            <summary>
            是否可打印
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintHelper.#ctor(System.Drawing.Image)">
            <summary>
            构造函数
            </summary>
            <param name="image">图像</param>
        </member>
        <member name="M:NetumScan.Core.PrintHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:NetumScan.Core.PrintHelper.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintHelper.ShowPreview">
            <summary>
            显示预览
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintHelper.Print">
            <summary>
            打印
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetumScan.Core.PrintSettings">
            <summary>
            打印配置
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintSettings.Margin">
            <summary>
            边缘
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintSettings.AutoRotateImage">
            <summary>
            是否自动旋转图像
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintSettings.AutoScaleImage">
            <summary>
            是否自动缩放图像
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintSettings.AllowEnlargeImage">
            <summary>
            是否允许放大图像
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintSettings.CenterImage">
            <summary>
            图像居中
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintSettings.TextFont">
            <summary>
            文本字体
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintSettings.ShowPrintDialog">
            <summary>
            是否显示打印对话框
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintSettings.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:NetumScan.Core.PrintTextForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintTextForm.#ctor(System.String,NetumScan.Core.PrintSettings)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="settings"></param>
        </member>
        <member name="M:NetumScan.Core.PrintTextForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:NetumScan.Core.PrintTextForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintTextForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NetumScan.Core.PrintTextHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintTextHelper.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:NetumScan.Core.PrintTextHelper.Font">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintTextHelper.BeginPrint">
            <summary>
            
            </summary>
        </member>
        <member name="M:NetumScan.Core.PrintTextHelper.PrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NetumScan.Core.RandomCrypto">
            <summary>
            随机密码
            </summary>
        </member>
        <member name="M:NetumScan.Core.RandomCrypto.Next">
            <summary>Returns a non-negative random integer.</summary>
            <returns>A 32-bit signed integer that is greater than or equal to 0 and less than <c>System.Int32.MaxValue.</c></returns>
        </member>
        <member name="M:NetumScan.Core.RandomCrypto.Next(System.Int32)">
            <summary>Returns a non-negative random integer that is less than or equal to <paramref name="maxValue"/>.</summary>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A 32-bit signed integer that is greater than or equal to 0 and less than or equal to <paramref name="maxValue"/>.</returns>
        </member>
        <member name="M:NetumScan.Core.RandomCrypto.Next(System.Int32,System.Int32)">
            <summary>Returns a random integer that is within a specified range.</summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A 32-bit signed integer that is greater than or equal to <paramref name="minValue"/> and less than or equal to <paramref name="maxValue"/>.</returns>
        </member>
        <member name="M:NetumScan.Core.RandomCrypto.NextDouble">
            <summary>Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</summary>
            <returns>A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</returns>
        </member>
        <member name="M:NetumScan.Core.RandomCrypto.NextBytes(System.Byte[])">
            <summary>Fills the elements of a specified array of bytes with random numbers.</summary>
            <param name="buffer">An array of bytes to contain random numbers.</param>
        </member>
        <member name="M:NetumScan.Core.RandomCrypto.Pick``1(``0[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RandomCrypto.Run(System.Action[])">
            <summary>
            
            </summary>
            <param name="actions"></param>
        </member>
        <member name="T:NetumScan.Core.RandomFast">
            <summary>
            随机快速
            </summary>
        </member>
        <member name="M:NetumScan.Core.RandomFast.Next">
            <summary>Returns a non-negative random integer.</summary>
            <returns>A 32-bit signed integer that is greater than or equal to 0 and less than <c>System.Int32.MaxValue.</c></returns>
        </member>
        <member name="M:NetumScan.Core.RandomFast.Next(System.Int32)">
            <summary>Returns a non-negative random integer that is less than or equal to <paramref name="maxValue"/>.</summary>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A 32-bit signed integer that is greater than or equal to 0 and less than or equal to <paramref name="maxValue"/>.</returns>
        </member>
        <member name="M:NetumScan.Core.RandomFast.Next(System.Int32,System.Int32)">
            <summary>Returns a random integer that is within a specified range.</summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A 32-bit signed integer that is greater than or equal to <paramref name="minValue"/> and less than or equal to <paramref name="maxValue"/>.</returns>
        </member>
        <member name="M:NetumScan.Core.RandomFast.NextDouble">
            <summary>Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.</summary>
            <returns>A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.</returns>
        </member>
        <member name="M:NetumScan.Core.RandomFast.NextBytes(System.Byte[])">
            <summary>Fills the elements of a specified array of bytes with random numbers.</summary>
            <param name="buffer">An array of bytes to contain random numbers.</param>
        </member>
        <member name="M:NetumScan.Core.RandomFast.Pick``1(``0[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Core.RandomFast.Run(System.Action[])">
            <summary>
            
            </summary>
            <param name="actions"></param>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Command.EventToCommand">
            <summary>
            This <see cref="T:System.Windows.Interactivity.TriggerAction`1" /> can be
            used to bind any event on any FrameworkElement to an <see cref="T:System.Windows.Input.ICommand" />.
            Typically, this element is used in XAML to connect the attached element
            to a command located in a ViewModel. This trigger can only be attached
            to a FrameworkElement or a class deriving from FrameworkElement.
            <para>To access the EventArgs of the fired event, use a RelayCommand&lt;EventArgs&gt;
            and leave the CommandParameter and CommandParameterValue empty!</para>
            </summary>
        </member>
        <member name="F:NetumScan.Core.MvvmLight.Command.EventToCommand.CommandParameterProperty">
            <summary>
            Identifies the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.CommandParameter" /> dependency property
            </summary>
        </member>
        <member name="F:NetumScan.Core.MvvmLight.Command.EventToCommand.CommandProperty">
            <summary>
            Identifies the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.Command" /> dependency property
            </summary>
        </member>
        <member name="F:NetumScan.Core.MvvmLight.Command.EventToCommand.MustToggleIsEnabledProperty">
            <summary>
            Identifies the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.MustToggleIsEnabled" /> dependency property
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.Command">
            <summary>
            Gets or sets the ICommand that this trigger is bound to. This
            is a DependencyProperty.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.CommandParameter">
            <summary>
            Gets or sets an object that will be passed to the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.Command" />
            attached to this trigger. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.CommandParameterValue">
            <summary>
            Gets or sets an object that will be passed to the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.Command" />
            attached to this trigger. This property is here for compatibility
            with the Silverlight version. This is NOT a DependencyProperty.
            For databinding, use the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.CommandParameter" /> property.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.MustToggleIsEnabled">
            <summary>
            Gets or sets a value indicating whether the attached element must be
            disabled when the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.Command" /> property's CanExecuteChanged
            event fires. If this property is true, and the command's CanExecute 
            method returns false, the element will be disabled. If this property
            is false, the element will not be disabled when the command's
            CanExecute method changes. This is a DependencyProperty.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.MustToggleIsEnabledValue">
            <summary>
            Gets or sets a value indicating whether the attached element must be
            disabled when the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.Command" /> property's CanExecuteChanged
            event fires. If this property is true, and the command's CanExecute 
            method returns false, the element will be disabled. This property is here for
            compatibility with the Silverlight version. This is NOT a DependencyProperty.
            For databinding, use the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.MustToggleIsEnabled" /> property.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.EventToCommand.OnAttached">
            <summary>
            Called when this trigger is attached to a FrameworkElement.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.EventToCommand.GetAssociatedObject">
            <summary>
            This method is here for compatibility
            with the Silverlight version.
            </summary>
            <returns>The FrameworkElement to which this trigger
            is attached.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.EventToCommand.GetCommand">
            <summary>
            This method is here for compatibility
            with the Silverlight 3 version.
            </summary>
            <returns>The command that must be executed when
            this trigger is invoked.</returns>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.PassEventArgsToCommand">
            <summary>
            Specifies whether the EventArgs of the event that triggered this
            action should be passed to the bound RelayCommand. If this is true,
            the command should accept arguments of the corresponding
            type (for example RelayCommand&lt;MouseButtonEventArgs&gt;).
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverter">
            <summary>
            Gets or sets a converter used to convert the EventArgs when using
            <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.PassEventArgsToCommand"/>. If PassEventArgsToCommand is false,
            this property is never used.
            </summary>
        </member>
        <member name="F:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverterParameterPropertyName">
            <summary>
            The <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverterParameter" /> dependency property's name.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverterParameter">
            <summary>
            Gets or sets a parameters for the converter used to convert the EventArgs when using
            <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.PassEventArgsToCommand"/>. If PassEventArgsToCommand is false,
            this property is never used. This is a dependency property.
            </summary>
        </member>
        <member name="F:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverterParameterProperty">
            <summary>
            Identifies the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverterParameter" /> dependency property.
            </summary>
        </member>
        <member name="F:NetumScan.Core.MvvmLight.Command.EventToCommand.AlwaysInvokeCommandPropertyName">
            <summary>
            The <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.AlwaysInvokeCommand" /> dependency property's name.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Command.EventToCommand.AlwaysInvokeCommand">
            <summary>
            Gets or sets a value indicating if the command should be invoked even
            if the attached control is disabled. This is a dependency property.
            </summary>
        </member>
        <member name="F:NetumScan.Core.MvvmLight.Command.EventToCommand.AlwaysInvokeCommandProperty">
            <summary>
            Identifies the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.AlwaysInvokeCommand" /> dependency property.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.EventToCommand.Invoke">
            <summary>
            Provides a simple way to invoke this trigger programatically
            without any EventArgs.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.EventToCommand.Invoke(System.Object)">
            <summary>
            Executes the trigger.
            <para>To access the EventArgs of the fired event, use a RelayCommand&lt;EventArgs&gt;
            and leave the CommandParameter and CommandParameterValue empty!</para>
            </summary>
            <param name="parameter">The EventArgs of the fired event.</param>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Command.IEventArgsConverter">
            <summary>
            The definition of the converter used to convert an EventArgs
            in the <see cref="T:NetumScan.Core.MvvmLight.Command.EventToCommand"/> class, if the
            <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.PassEventArgsToCommand"/> property is true.
            Set an instance of this class to the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverter"/>
            property of the EventToCommand instance.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.IEventArgsConverter.Convert(System.Object,System.Object)">
            <summary>
            The method used to convert the EventArgs instance.
            </summary>
            <param name="value">An instance of EventArgs passed by the
            event that the EventToCommand instance is handling.</param>
            <param name="parameter">An optional parameter used for the conversion. Use
            the <see cref="P:NetumScan.Core.MvvmLight.Command.EventToCommand.EventArgsConverterParameter"/> property
            to set this value. This may be null.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Command.RelayCommand">
            <summary>
            A command whose sole purpose is to relay its functionality to other
            objects by invoking delegates. The default return value for the CanExecute
            method is 'true'.  This class does not allow you to accept command parameters in the
            Execute and CanExecute callback methods.
            </summary>
            <remarks>If you are using this class in WPF4.5 or above, you need to use the 
            HandyFrame.MvvmLight.CommandWpf namespace (instead of HandyFrame.MvvmLight.Command).
            This will enable (or restore) the CommandManager class which handles
            automatic enabling/disabling of controls based on the CanExecute delegate.</remarks>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand.#ctor(System.Action,System.Boolean)">
            <summary>
            Initializes a new instance of the RelayCommand class that 
            can always execute.
            </summary>
            <param name="execute">The execution logic. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is causing a closure. See
            http://galasoft.ch/s/mvvmweakaction. </param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand.#ctor(System.Action,System.Func{System.Boolean},System.Boolean)">
            <summary>
            Initializes a new instance of the RelayCommand class.
            </summary>
            <param name="execute">The execution logic. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="canExecute">The execution status logic.  IMPORTANT: If the func causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is causing a closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="E:NetumScan.Core.MvvmLight.Command.RelayCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand.RaiseCanExecuteChanged">
            <summary>
            Raises the <see cref="E:NetumScan.Core.MvvmLight.Command.RelayCommand.CanExecuteChanged" /> event.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">This parameter will always be ignored.</param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked. 
            </summary>
            <param name="parameter">This parameter will always be ignored.</param>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Command.RelayCommand`1">
            <summary>
            A generic command whose sole purpose is to relay its functionality to other
            objects by invoking delegates. The default return value for the CanExecute
            method is 'true'. This class allows you to accept command parameters in the
            Execute and CanExecute callback methods.
            </summary>
            <typeparam name="T">The type of the command parameter.</typeparam>
            <remarks>If you are using this class in WPF4.5 or above, you need to use the 
            SmartKit.MvvmLight.CommandWpf namespace (instead of SmartKit.MvvmLight.Command).
            This will enable (or restore) the CommandManager class which handles
            automatic enabling/disabling of controls based on the CanExecute delegate.</remarks>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand`1.#ctor(System.Action{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the RelayCommand class that 
            can always execute.
            </summary>
            <param name="execute">The execution logic. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is causing a closure. See
            http://galasoft.ch/s/mvvmweakaction. </param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean},System.Boolean)">
            <summary>
            Initializes a new instance of the RelayCommand class.
            </summary>
            <param name="execute">The execution logic. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="canExecute">The execution status logic.  IMPORTANT: If the func causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is causing a closure. See
            http://galasoft.ch/s/mvvmweakaction. </param>
            <exception cref="T:System.ArgumentNullException">If the execute argument is null.</exception>
        </member>
        <member name="E:NetumScan.Core.MvvmLight.Command.RelayCommand`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether the command should execute.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand`1.RaiseCanExecuteChanged">
            <summary>
            Raises the <see cref="E:NetumScan.Core.MvvmLight.Command.RelayCommand`1.CanExecuteChanged" /> event.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data 
            to be passed, this object can be set to a null reference</param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Command.RelayCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked. 
            </summary>
            <param name="parameter">Data used by the command. If the command does not require data 
            to be passed, this object can be set to a null reference</param>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.DesignerLibrary">
            <summary>
            Helper class for platform detection.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.Empty">
            <summary>
            Helper class used when an async method is required,
            but the context is synchronous.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.Empty.Task">
            <summary>
            Gets the empty task.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.FeatureDetection">
            <summary>
            Helper class for platform and feature detection.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObject">
            <summary>
            This interface is meant for the <see cref="T:NetumScan.Core.MvvmLight.Helpers.WeakAction`1" /> class and can be 
            useful if you store multiple WeakAction{T} instances but don't know in advance
            what type T represents.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObject.Target">
            <summary>
            The target of the WeakAction.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObject.ExecuteWithObject(System.Object)">
            <summary>
            Executes an action.
            </summary>
            <param name="parameter">A parameter passed as an object,
            to be casted to the appropriate type.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObject.MarkForDeletion">
            <summary>
            Deletes all references, which notifies the cleanup method
            that this entry must be deleted.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObjectAndResult">
            <summary>
            This interface is meant for the <see cref="T:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1" /> class and can be 
            useful if you store multiple WeakFunc{T} instances but don't know in advance
            what type T represents.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObjectAndResult.ExecuteWithObject(System.Object)">
            <summary>
            Executes a Func and returns the result.
            </summary>
            <param name="parameter">A parameter passed as an object,
            to be casted to the appropriate type.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.WeakAction">
            <summary>
            Stores an <see cref="T:System.Action" /> without causing a hard reference
            to be created to the Action's owner. The owner can be garbage collected at any time.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.Method">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.MethodInfo" /> corresponding to this WeakAction's
            method passed in the constructor.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.MethodName">
            <summary>
            Gets the name of the method that this WeakAction represents.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.ActionReference">
            <summary>
            Gets or sets a WeakReference to this WeakAction's action's target.
            This is not necessarily the same as
            <see cref="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.Reference" />, for example if the
            method is anonymous.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.LiveReference">
            <summary>
            Saves the <see cref="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.ActionReference"/> as a hard reference. This is
            used in relation with this instance's constructor and only if
            the constructor's keepTargetAlive parameter is true.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.Reference">
            <summary>
            Gets or sets a WeakReference to the target passed when constructing
            the WeakAction. This is not necessarily the same as
            <see cref="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.ActionReference" />, for example if the
            method is anonymous.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.IsStatic">
            <summary>
            Gets a value indicating whether the WeakAction is static or not.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction.#ctor">
            <summary>
            Initializes an empty instance of the <see cref="T:NetumScan.Core.MvvmLight.Helpers.WeakAction" /> class.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction.#ctor(System.Action,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Helpers.WeakAction" /> class.
            </summary>
            <param name="action">The action that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction.#ctor(System.Object,System.Action,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Helpers.WeakAction" /> class.
            </summary>
            <param name="target">The action's owner.</param>
            <param name="action">The action that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.IsAlive">
            <summary>
            Gets a value indicating whether the Action's owner is still alive, or if it was collected
            by the Garbage Collector already.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.Target">
            <summary>
            Gets the Action's owner. This object is stored as a 
            <see cref="T:System.WeakReference" />.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction.ActionTarget">
            <summary>
            The target of the weak reference.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction.Execute">
            <summary>
            Executes the action. This only happens if the action's owner
            is still alive.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction.MarkForDeletion">
            <summary>
            Sets the reference that this instance stores to null.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.WeakAction`1">
            <summary>
            Stores an Action without causing a hard reference
            to be created to the Action's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="T">The type of the Action's parameter.</typeparam>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.MethodName">
            <summary>
            Gets the name of the method that this WeakAction represents.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.IsAlive">
            <summary>
            Gets a value indicating whether the Action's owner is still alive, or if it was collected
            by the Garbage Collector already.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.#ctor(System.Action{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the WeakAction class.
            </summary>
            <param name="action">The action that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.#ctor(System.Object,System.Action{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the WeakAction class.
            </summary>
            <param name="target">The action's owner.</param>
            <param name="action">The action that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.Execute">
            <summary>
            Executes the action. This only happens if the action's owner
            is still alive. The action's parameter is set to default(T).
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.Execute(`0)">
            <summary>
            Executes the action. This only happens if the action's owner
            is still alive.
            </summary>
            <param name="parameter">A parameter to be passed to the action.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.ExecuteWithObject(System.Object)">
            <summary>
            Executes the action with a parameter of type object. This parameter
            will be casted to T. This method implements <see cref="M:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObject.ExecuteWithObject(System.Object)" />
            and can be useful if you store multiple WeakAction{T} instances but don't know in advance
            what type T represents.
            </summary>
            <param name="parameter">The parameter that will be passed to the action after
            being casted to T.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakAction`1.MarkForDeletion">
            <summary>
            Sets all the actions that this WeakAction contains to null,
            which is a signal for containing objects that this WeakAction
            should be deleted.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1">
            <summary>
            Stores a Func&lt;T&gt; without causing a hard reference
            to be created to the Func's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="TResult">The type of the result of the Func that will be stored
            by this weak reference.</typeparam>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.Method">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.MethodInfo" /> corresponding to this WeakFunc's
            method passed in the constructor.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.IsStatic">
            <summary>
            Get a value indicating whether the WeakFunc is static or not.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.MethodName">
            <summary>
            Gets the name of the method that this WeakFunc represents.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.FuncReference">
            <summary>
            Gets or sets a WeakReference to this WeakFunc's action's target.
            This is not necessarily the same as
            <see cref="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.Reference" />, for example if the
            method is anonymous.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.LiveReference">
            <summary>
            Saves the <see cref="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.FuncReference"/> as a hard reference. This is
            used in relation with this instance's constructor and only if
            the constructor's keepTargetAlive parameter is true.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.Reference">
            <summary>
            Gets or sets a WeakReference to the target passed when constructing
            the WeakFunc. This is not necessarily the same as
            <see cref="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.FuncReference" />, for example if the
            method is anonymous.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.#ctor">
            <summary>
            Initializes an empty instance of the WeakFunc class.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.#ctor(System.Func{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the WeakFunc class.
            </summary>
            <param name="func">The Func that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.#ctor(System.Object,System.Func{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the WeakFunc class.
            </summary>
            <param name="target">The Func's owner.</param>
            <param name="func">The Func that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.IsAlive">
            <summary>
            Gets a value indicating whether the Func's owner is still alive, or if it was collected
            by the Garbage Collector already.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.Target">
            <summary>
            Gets the Func's owner. This object is stored as a 
            <see cref="T:System.WeakReference" />.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.FuncTarget">
            <summary>
            Gets the owner of the Func that was passed as parameter.
            This is not necessarily the same as
            <see cref="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.Target" />, for example if the
            method is anonymous.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.Execute">
            <summary>
            Executes the action. This only happens if the Func's owner
            is still alive.
            </summary>
            <returns>The result of the Func stored as reference.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`1.MarkForDeletion">
            <summary>
            Sets the reference that this instance stores to null.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2">
            <summary>
            Stores an Func without causing a hard reference
            to be created to the Func's owner. The owner can be garbage collected at any time.
            </summary>
            <typeparam name="T">The type of the Func's parameter.</typeparam>
            <typeparam name="TResult">The type of the Func's return value.</typeparam>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.MethodName">
            <summary>
            Gets or sets the name of the method that this WeakFunc represents.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.IsAlive">
            <summary>
            Gets a value indicating whether the Func's owner is still alive, or if it was collected
            by the Garbage Collector already.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.#ctor(System.Func{`0,`1},System.Boolean)">
            <summary>
            Initializes a new instance of the WeakFunc class.
            </summary>
            <param name="func">The Func that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.#ctor(System.Object,System.Func{`0,`1},System.Boolean)">
            <summary>
            Initializes a new instance of the WeakFunc class.
            </summary>
            <param name="target">The Func's owner.</param>
            <param name="func">The Func that will be associated to this instance.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.Execute">
            <summary>
            Executes the Func. This only happens if the Func's owner
            is still alive. The Func's parameter is set to default(T).
            </summary>
            <returns>The result of the Func stored as reference.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.Execute(`0)">
            <summary>
            Executes the Func. This only happens if the Func's owner
            is still alive.
            </summary>
            <param name="parameter">A parameter to be passed to the action.</param>
            <returns>The result of the Func stored as reference.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.ExecuteWithObject(System.Object)">
            <summary>
            Executes the Func with a parameter of type object. This parameter
            will be casted to T. This method implements <see cref="M:NetumScan.Core.MvvmLight.Helpers.IExecuteWithObject.ExecuteWithObject(System.Object)" />
            and can be useful if you store multiple WeakFunc{T} instances but don't know in advance
            what type T represents.
            </summary>
            <param name="parameter">The parameter that will be passed to the Func after
            being casted to T.</param>
            <returns>The result of the execution as object, to be casted to T.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Helpers.WeakFunc`2.MarkForDeletion">
            <summary>
            Sets all the funcs that this WeakFunc contains to null,
            which is a signal for containing objects that this WeakFunc
            should be deleted.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.ICleanup">
            <summary>
            Defines a common interface for classes that should be cleaned up,
            but without the implications that IDisposable presupposes. An instance
            implementing ICleanup can be cleaned up without being
            disposed and garbage collected.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ICleanup.Cleanup">
            <summary>
            Cleans up the instance, for example by saving its state,
            removing resources, etc...
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc">
            <summary>
            A very simple IOC container with basic functionality needed to register and resolve
            instances. If needed, this class can be replaced by another more elaborate
            IOC container implementing the IServiceLocator interface.
            The inspiration for this class is at https://gist.github.com/716137 but it has
            been extended with additional features.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.ContainsCreated``1">
            <summary>
            Checks whether at least one instance of a given class is already created in the container.
            </summary>
            <typeparam name="TClass">The class that is queried.</typeparam>
            <returns>True if at least on instance of the class is already created, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.ContainsCreated``1(System.String)">
            <summary>
            Checks whether the instance with the given key is already created for a given class
            in the container.
            </summary>
            <typeparam name="TClass">The class that is queried.</typeparam>
            <param name="key">The key that is queried.</param>
            <returns>True if the instance with the given key is already registered for the given class,
            false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.IsRegistered``1">
            <summary>
            Gets a value indicating whether a given type T is already registered.
            </summary>
            <typeparam name="T">The type that the method checks for.</typeparam>
            <returns>True if the type is registered, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.IsRegistered``1(System.String)">
            <summary>
            Gets a value indicating whether a given type T and a give key
            are already registered.
            </summary>
            <typeparam name="T">The type that the method checks for.</typeparam>
            <param name="key">The key that the method checks for.</param>
            <returns>True if the type and key are registered, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``2">
            <summary>
            Registers a given type for a given interface.
            </summary>
            <typeparam name="TInterface">The interface for which instances will be resolved.</typeparam>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``2(System.Boolean)">
            <summary>
            Registers a given type for a given interface with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TInterface">The interface for which instances will be resolved.</typeparam>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``1">
            <summary>
            Registers a given type.
            </summary>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``1(System.Boolean)">
            <summary>
            Registers a given type with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``1(System.Func{``0})">
            <summary>
            Registers a given instance for a given type.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``1(System.Func{``0},System.Boolean)">
            <summary>
            Registers a given instance for a given type with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``1(System.Func{``0},System.String)">
            <summary>
            Registers a given instance for a given type and a given key.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
            <param name="key">The key for which the given instance is registered.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Register``1(System.Func{``0},System.String,System.Boolean)">
            <summary>
            Registers a given instance for a given type and a given key with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
            <param name="key">The key for which the given instance is registered.</param>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Reset">
            <summary>
            Resets the instance in its original states. This deletes all the
            registrations.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Unregister``1">
            <summary>
            Unregisters a class from the cache and removes all the previously
            created instances.
            </summary>
            <typeparam name="TClass">The class that must be removed.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Unregister``1(``0)">
            <summary>
            Removes the given instance from the cache. The class itself remains
            registered and can be used to create other instances.
            </summary>
            <typeparam name="TClass">The type of the instance to be removed.</typeparam>
            <param name="instance">The instance that must be removed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.ISimpleIoc.Unregister``1(System.String)">
            <summary>
            Removes the instance corresponding to the given key from the cache. The class itself remains
            registered and can be used to create other instances.
            </summary>
            <typeparam name="TClass">The type of the instance to be removed.</typeparam>
            <param name="key">The key corresponding to the instance that must be removed.</param>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Ioc.PreferredConstructorAttribute">
            <summary>
            When used with the SimpleIoc container, specifies which constructor
            should be used to instantiate when GetInstance is called.
            If there is only one constructor in the class, this attribute is
            not needed.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Ioc.SimpleIoc">
            <summary>
            A very simple IOC container with basic functionality needed to register and resolve
            instances. If needed, this class can be replaced by another more elaborate
            IOC container implementing the IServiceLocator interface.
            The inspiration for this class is at https://gist.github.com/716137 but it has
            been extended with additional features.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Default">
            <summary>
            This class' default instance.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.ContainsCreated``1">
            <summary>
            Checks whether at least one instance of a given class is already created in the container.
            </summary>
            <typeparam name="TClass">The class that is queried.</typeparam>
            <returns>True if at least on instance of the class is already created, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.ContainsCreated``1(System.String)">
            <summary>
            Checks whether the instance with the given key is already created for a given class
            in the container.
            </summary>
            <typeparam name="TClass">The class that is queried.</typeparam>
            <param name="key">The key that is queried.</param>
            <returns>True if the instance with the given key is already registered for the given class,
            false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.IsRegistered``1">
            <summary>
            Gets a value indicating whether a given type T is already registered.
            </summary>
            <typeparam name="T">The type that the method checks for.</typeparam>
            <returns>True if the type is registered, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.IsRegistered``1(System.String)">
            <summary>
            Gets a value indicating whether a given type T and a give key
            are already registered.
            </summary>
            <typeparam name="T">The type that the method checks for.</typeparam>
            <param name="key">The key that the method checks for.</param>
            <returns>True if the type and key are registered, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``2">
            <summary>
            Registers a given type for a given interface.
            </summary>
            <typeparam name="TInterface">The interface for which instances will be resolved.</typeparam>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``2(System.Boolean)">
            <summary>
            Registers a given type for a given interface with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TInterface">The interface for which instances will be resolved.</typeparam>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``1">
            <summary>
            Registers a given type.
            </summary>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``1(System.Boolean)">
            <summary>
            Registers a given type with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TClass">The type that must be used to create instances.</typeparam>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``1(System.Func{``0})">
            <summary>
            Registers a given instance for a given type.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``1(System.Func{``0},System.Boolean)">
            <summary>
            Registers a given instance for a given type with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``1(System.Func{``0},System.String)">
            <summary>
            Registers a given instance for a given type and a given key.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
            <param name="key">The key for which the given instance is registered.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Register``1(System.Func{``0},System.String,System.Boolean)">
            <summary>
            Registers a given instance for a given type and a given key with the possibility for immediate
            creation of the instance.
            </summary>
            <typeparam name="TClass">The type that is being registered.</typeparam>
            <param name="factory">The factory method able to create the instance that
            must be returned when the given type is resolved.</param>
            <param name="key">The key for which the given instance is registered.</param>
            <param name="createInstanceImmediately">If true, forces the creation of the default
            instance of the provided class.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Reset">
            <summary>
            Resets the instance in its original states. This deletes all the
            registrations.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Unregister``1">
            <summary>
            Unregisters a class from the cache and removes all the previously
            created instances.
            </summary>
            <typeparam name="TClass">The class that must be removed.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Unregister``1(``0)">
            <summary>
            Removes the given instance from the cache. The class itself remains
            registered and can be used to create other instances.
            </summary>
            <typeparam name="TClass">The type of the instance to be removed.</typeparam>
            <param name="instance">The instance that must be removed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.Unregister``1(System.String)">
            <summary>
            Removes the instance corresponding to the given key from the cache. The class itself remains
            registered and can be used to create other instances.
            </summary>
            <typeparam name="TClass">The type of the instance to be removed.</typeparam>
            <param name="key">The key corresponding to the instance that must be removed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetAllCreatedInstances(System.Type)">
            <summary>
            Provides a way to get all the created instances of a given type available in the
            cache. Registering a class or a factory does not automatically
            create the corresponding instance! To create an instance, either register
            the class or the factory with createInstanceImmediately set to true,
            or call the GetInstance method before calling GetAllCreatedInstances.
            Alternatively, use the GetAllInstances method, which auto-creates default
            instances for all registered classes.
            </summary>
            <param name="serviceType">The class of which all instances
            must be returned.</param>
            <returns>All the already created instances of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetAllCreatedInstances``1">
            <summary>
            Provides a way to get all the created instances of a given type available in the
            cache. Registering a class or a factory does not automatically
            create the corresponding instance! To create an instance, either register
            the class or the factory with createInstanceImmediately set to true,
            or call the GetInstance method before calling GetAllCreatedInstances.
            Alternatively, use the GetAllInstances method, which auto-creates default
            instances for all registered classes.
            </summary>
            <typeparam name="TService">The class of which all instances
            must be returned.</typeparam>
            <returns>All the already created instances of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type serviceType has not
            been registered before calling this method.</exception>
            <returns>
            A service object of type <paramref name="serviceType" />.
            </returns>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetAllInstances(System.Type)">
            <summary>
            Provides a way to get all the created instances of a given type available in the
            cache. Calling this method auto-creates default
            instances for all registered classes.
            </summary>
            <param name="serviceType">The class of which all instances
            must be returned.</param>
            <returns>All the instances of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetAllInstances``1">
            <summary>
            Provides a way to get all the created instances of a given type available in the
            cache. Calling this method auto-creates default
            instances for all registered classes.
            </summary>
            <typeparam name="TService">The class of which all instances
            must be returned.</typeparam>
            <returns>All the instances of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstance(System.Type)">
            <summary>
            Provides a way to get an instance of a given type. If no instance had been instantiated 
            before, a new instance will be created. If an instance had already
            been created, that same instance will be returned.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type serviceType has not
            been registered before calling this method.</exception>
            <param name="serviceType">The class of which an instance
            must be returned.</param>
            <returns>An instance of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstanceWithoutCaching(System.Type)">
            <summary>
            Provides a way to get an instance of a given type. This method
            always returns a new instance and doesn't cache it in the IOC container.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type serviceType has not
            been registered before calling this method.</exception>
            <param name="serviceType">The class of which an instance
            must be returned.</param>
            <returns>An instance of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstance(System.Type,System.String)">
            <summary>
            Provides a way to get an instance of a given type corresponding
            to a given key. If no instance had been instantiated with this
            key before, a new instance will be created. If an instance had already
            been created with the same key, that same instance will be returned.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type serviceType has not
            been registered before calling this method.</exception>
            <param name="serviceType">The class of which an instance must be returned.</param>
            <param name="key">The key uniquely identifying this instance.</param>
            <returns>An instance corresponding to the given type and key.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstanceWithoutCaching(System.Type,System.String)">
            <summary>
            Provides a way to get an instance of a given type. This method
            always returns a new instance and doesn't cache it in the IOC container.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type serviceType has not
            been registered before calling this method.</exception>
            <param name="serviceType">The class of which an instance must be returned.</param>
            <param name="key">The key uniquely identifying this instance.</param>
            <returns>An instance corresponding to the given type and key.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstance``1">
            <summary>
            Provides a way to get an instance of a given type. If no instance had been instantiated 
            before, a new instance will be created. If an instance had already
            been created, that same instance will be returned.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type TService has not
            been registered before calling this method.</exception>
            <typeparam name="TService">The class of which an instance
            must be returned.</typeparam>
            <returns>An instance of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstanceWithoutCaching``1">
            <summary>
            Provides a way to get an instance of a given type. This method
            always returns a new instance and doesn't cache it in the IOC container.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type TService has not
            been registered before calling this method.</exception>
            <typeparam name="TService">The class of which an instance
            must be returned.</typeparam>
            <returns>An instance of the given type.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstance``1(System.String)">
            <summary>
            Provides a way to get an instance of a given type corresponding
            to a given key. If no instance had been instantiated with this
            key before, a new instance will be created. If an instance had already
            been created with the same key, that same instance will be returned.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type TService has not
            been registered before calling this method.</exception>
            <typeparam name="TService">The class of which an instance must be returned.</typeparam>
            <param name="key">The key uniquely identifying this instance.</param>
            <returns>An instance corresponding to the given type and key.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Ioc.SimpleIoc.GetInstanceWithoutCaching``1(System.String)">
            <summary>
            Provides a way to get an instance of a given type. This method
            always returns a new instance and doesn't cache it in the IOC container.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the type TService has not
            been registered before calling this method.</exception>
            <typeparam name="TService">The class of which an instance must be returned.</typeparam>
            <param name="key">The key uniquely identifying this instance.</param>
            <returns>An instance corresponding to the given type and key.</returns>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.GenericMessage`1">
            <summary>
            Passes a generic value (Content) to a recipient.
            </summary>
            <typeparam name="T">The type of the Content property.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.GenericMessage`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the GenericMessage class.
            </summary>
            <param name="content">The message content.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.GenericMessage`1.#ctor(System.Object,`0)">
            <summary>
            Initializes a new instance of the GenericMessage class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="content">The message content.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.GenericMessage`1.#ctor(System.Object,System.Object,`0)">
            <summary>
            Initializes a new instance of the GenericMessage class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="content">The message content.</param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.GenericMessage`1.Content">
            <summary>
            Gets or sets the message's content.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.IMessenger">
            <summary>
            The Messenger is a class allowing objects to exchange messages.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Register``1(System.Object,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage. The action
            parameter will be executed when a corresponding message is sent.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent. IMPORTANT: Note that closures are not supported at the moment
            due to the use of WeakActions (see http://stackoverflow.com/questions/25730530/). </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Register``1(System.Object,System.Object,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage.
            The action parameter will be executed when a corresponding 
            message is sent. See the receiveDerivedMessagesToo parameter
            for details on how messages deriving from TMessage (or, if TMessage is an interface,
            messages implementing TMessage) can be received too.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="token">A token for a messaging channel. If a recipient registers
            using a token, and a sender sends a message using the same token, then this
            message will be delivered to the recipient. Other recipients who did not
            use a token when registering (or who used a different token) will not
            get the message. Similarly, messages sent without any token, or with a different
            token, will not be delivered to that recipient.</param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Register``1(System.Object,System.Object,System.Boolean,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage.
            The action parameter will be executed when a corresponding 
            message is sent. See the receiveDerivedMessagesToo parameter
            for details on how messages deriving from TMessage (or, if TMessage is an interface,
            messages implementing TMessage) can be received too.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="token">A token for a messaging channel. If a recipient registers
            using a token, and a sender sends a message using the same token, then this
            message will be delivered to the recipient. Other recipients who did not
            use a token when registering (or who used a different token) will not
            get the message. Similarly, messages sent without any token, or with a different
            token, will not be delivered to that recipient.</param>
            <param name="receiveDerivedMessagesToo">If true, message types deriving from
            TMessage will also be transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage derive from OrderMessage, registering for OrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.
            <para>Also, if TMessage is an interface, message types implementing TMessage will also be
            transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage implement IOrderMessage, registering for IOrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.</para>
            </param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Register``1(System.Object,System.Boolean,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage.
            The action parameter will be executed when a corresponding 
            message is sent. See the receiveDerivedMessagesToo parameter
            for details on how messages deriving from TMessage (or, if TMessage is an interface,
            messages implementing TMessage) can be received too.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="receiveDerivedMessagesToo">If true, message types deriving from
            TMessage will also be transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage derive from OrderMessage, registering for OrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.
            <para>Also, if TMessage is an interface, message types implementing TMessage will also be
            transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage implement IOrderMessage, registering for IOrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.</para>
            </param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent.</param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Send``1(``0)">
            <summary>
            Sends a message to registered recipients. The message will
            reach all recipients that registered for this message type
            using one of the Register methods.
            </summary>
            <typeparam name="TMessage">The type of message that will be sent.</typeparam>
            <param name="message">The message to send to registered recipients.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Send``2(``0)">
            <summary>
            Sends a message to registered recipients. The message will
            reach only recipients that registered for this message type
            using one of the Register methods, and that are
            of the targetType.
            </summary>
            <typeparam name="TMessage">The type of message that will be sent.</typeparam>
            <typeparam name="TTarget">The type of recipients that will receive
            the message. The message won't be sent to recipients of another type.</typeparam>
            <param name="message">The message to send to registered recipients.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Send``1(``0,System.Object)">
            <summary>
            Sends a message to registered recipients. The message will
            reach only recipients that registered for this message type
            using one of the Register methods, and that are
            of the targetType.
            </summary>
            <typeparam name="TMessage">The type of message that will be sent.</typeparam>
            <param name="message">The message to send to registered recipients.</param>
            <param name="token">A token for a messaging channel. If a recipient registers
            using a token, and a sender sends a message using the same token, then this
            message will be delivered to the recipient. Other recipients who did not
            use a token when registering (or who used a different token) will not
            get the message. Similarly, messages sent without any token, or with a different
            token, will not be delivered to that recipient.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Unregister(System.Object)">
            <summary>
            Unregisters a messager recipient completely. After this method
            is executed, the recipient will not receive any messages anymore.
            </summary>
            <param name="recipient">The recipient that must be unregistered.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Unregister``1(System.Object)">
            <summary>
            Unregisters a message recipient for a given type of messages only. 
            After this method is executed, the recipient will not receive messages
            of type TMessage anymore, but will still receive other message types (if it
            registered for them previously).
            </summary>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
            <param name="recipient">The recipient that must be unregistered.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Unregister``1(System.Object,System.Object)">
            <summary>
            Unregisters a message recipient for a given type of messages only and for a given token. 
            After this method is executed, the recipient will not receive messages
            of type TMessage anymore with the given token, but will still receive other message types
            or messages with other tokens (if it registered for them previously).
            </summary>
            <param name="recipient">The recipient that must be unregistered.</param>
            <param name="token">The token for which the recipient must be unregistered.</param>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Unregister``1(System.Object,System.Action{``0})">
            <summary>
            Unregisters a message recipient for a given type of messages and for
            a given action. Other message types will still be transmitted to the
            recipient (if it registered for them previously). Other actions that have
            been registered for the message type TMessage and for the given recipient (if
            available) will also remain available.
            </summary>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
            <param name="recipient">The recipient that must be unregistered.</param>
            <param name="action">The action that must be unregistered for
            the recipient and for the message type TMessage.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.IMessenger.Unregister``1(System.Object,System.Object,System.Action{``0})">
            <summary>
            Unregisters a message recipient for a given type of messages, for
            a given action and a given token. Other message types will still be transmitted to the
            recipient (if it registered for them previously). Other actions that have
            been registered for the message type TMessage, for the given recipient and other tokens (if
            available) will also remain available.
            </summary>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
            <param name="recipient">The recipient that must be unregistered.</param>
            <param name="token">The token for which the recipient must be unregistered.</param>
            <param name="action">The action that must be unregistered for
            the recipient and for the message type TMessage.</param>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.MessageBase">
            <summary>
            Base class for all messages broadcasted by the Messenger.
            You can create your own message types by extending this class.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.MessageBase.#ctor">
            <summary>
            Initializes a new instance of the MessageBase class.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.MessageBase.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the MessageBase class.
            </summary>
            <param name="sender">The message's original sender.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.MessageBase.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the MessageBase class.
            </summary>
            <param name="sender">The message's original sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.MessageBase.Sender">
            <summary>
            Gets or sets the message's sender.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.MessageBase.Target">
            <summary>
            Gets or sets the message's intended target. This property can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.Messenger">
            <summary>
            The Messenger is a class allowing objects to exchange messages.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.Messenger.Default">
            <summary>
            Gets the Messenger's default instance, allowing
            to register and send messages in a static manner.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Register``1(System.Object,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage. The action
            parameter will be executed when a corresponding message is sent.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Register``1(System.Object,System.Object,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage.
            The action parameter will be executed when a corresponding 
            message is sent. See the receiveDerivedMessagesToo parameter
            for details on how messages deriving from TMessage (or, if TMessage is an interface,
            messages implementing TMessage) can be received too.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            <para>However if you use closures and set keepTargetAlive to true, you might
            cause a memory leak if you don't call <see cref="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Unregister(System.Object)"/> when you are cleaning up.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="token">A token for a messaging channel. If a recipient registers
            using a token, and a sender sends a message using the same token, then this
            message will be delivered to the recipient. Other recipients who did not
            use a token when registering (or who used a different token) will not
            get the message. Similarly, messages sent without any token, or with a different
            token, will not be delivered to that recipient.</param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Register``1(System.Object,System.Object,System.Boolean,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage.
            The action parameter will be executed when a corresponding 
            message is sent. See the receiveDerivedMessagesToo parameter
            for details on how messages deriving from TMessage (or, if TMessage is an interface,
            messages implementing TMessage) can be received too.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="token">A token for a messaging channel. If a recipient registers
            using a token, and a sender sends a message using the same token, then this
            message will be delivered to the recipient. Other recipients who did not
            use a token when registering (or who used a different token) will not
            get the message. Similarly, messages sent without any token, or with a different
            token, will not be delivered to that recipient.</param>
            <param name="receiveDerivedMessagesToo">If true, message types deriving from
            TMessage will also be transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage derive from OrderMessage, registering for OrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.
            <para>Also, if TMessage is an interface, message types implementing TMessage will also be
            transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage implement IOrderMessage, registering for IOrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.</para>
            </param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Register``1(System.Object,System.Boolean,System.Action{``0},System.Boolean)">
            <summary>
            Registers a recipient for a type of message TMessage.
            The action parameter will be executed when a corresponding 
            message is sent. See the receiveDerivedMessagesToo parameter
            for details on how messages deriving from TMessage (or, if TMessage is an interface,
            messages implementing TMessage) can be received too.
            <para>Registering a recipient does not create a hard reference to it,
            so if this recipient is deleted, no memory leak is caused.</para>
            </summary>
            <typeparam name="TMessage">The type of message that the recipient registers
            for.</typeparam>
            <param name="recipient">The recipient that will receive the messages.</param>
            <param name="receiveDerivedMessagesToo">If true, message types deriving from
            TMessage will also be transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage derive from OrderMessage, registering for OrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.
            <para>Also, if TMessage is an interface, message types implementing TMessage will also be
            transmitted to the recipient. For example, if a SendOrderMessage
            and an ExecuteOrderMessage implement IOrderMessage, registering for IOrderMessage
            and setting receiveDerivedMessagesToo to true will send SendOrderMessage
            and ExecuteOrderMessage to the recipient that registered.</para>
            </param>
            <param name="action">The action that will be executed when a message
            of type TMessage is sent. IMPORTANT: If the action causes a closure,
            you must set keepTargetAlive to true to avoid side effects. </param>
            <param name="keepTargetAlive">If true, the target of the Action will
            be kept as a hard reference, which might cause a memory leak. You should only set this
            parameter to true if the action is using closures. See
            http://galasoft.ch/s/mvvmweakaction. </param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Send``1(``0)">
            <summary>
            Sends a message to registered recipients. The message will
            reach all recipients that registered for this message type
            using one of the Register methods.
            </summary>
            <typeparam name="TMessage">The type of message that will be sent.</typeparam>
            <param name="message">The message to send to registered recipients.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Send``2(``0)">
            <summary>
            Sends a message to registered recipients. The message will
            reach only recipients that registered for this message type
            using one of the Register methods, and that are
            of the targetType.
            </summary>
            <typeparam name="TMessage">The type of message that will be sent.</typeparam>
            <typeparam name="TTarget">The type of recipients that will receive
            the message. The message won't be sent to recipients of another type.</typeparam>
            <param name="message">The message to send to registered recipients.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Send``1(``0,System.Object)">
            <summary>
            Sends a message to registered recipients. The message will
            reach only recipients that registered for this message type
            using one of the Register methods, and that are
            of the targetType.
            </summary>
            <typeparam name="TMessage">The type of message that will be sent.</typeparam>
            <param name="message">The message to send to registered recipients.</param>
            <param name="token">A token for a messaging channel. If a recipient registers
            using a token, and a sender sends a message using the same token, then this
            message will be delivered to the recipient. Other recipients who did not
            use a token when registering (or who used a different token) will not
            get the message. Similarly, messages sent without any token, or with a different
            token, will not be delivered to that recipient.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Unregister(System.Object)">
            <summary>
            Unregisters a messager recipient completely. After this method
            is executed, the recipient will not receive any messages anymore.
            </summary>
            <param name="recipient">The recipient that must be unregistered.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Unregister``1(System.Object)">
            <summary>
            Unregisters a message recipient for a given type of messages only. 
            After this method is executed, the recipient will not receive messages
            of type TMessage anymore, but will still receive other message types (if it
            registered for them previously).
            </summary>
            <param name="recipient">The recipient that must be unregistered.</param>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Unregister``1(System.Object,System.Object)">
            <summary>
            Unregisters a message recipient for a given type of messages only and for a given token. 
            After this method is executed, the recipient will not receive messages
            of type TMessage anymore with the given token, but will still receive other message types
            or messages with other tokens (if it registered for them previously).
            </summary>
            <param name="recipient">The recipient that must be unregistered.</param>
            <param name="token">The token for which the recipient must be unregistered.</param>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Unregister``1(System.Object,System.Action{``0})">
            <summary>
            Unregisters a message recipient for a given type of messages and for
            a given action. Other message types will still be transmitted to the
            recipient (if it registered for them previously). Other actions that have
            been registered for the message type TMessage and for the given recipient (if
            available) will also remain available.
            </summary>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
            <param name="recipient">The recipient that must be unregistered.</param>
            <param name="action">The action that must be unregistered for
            the recipient and for the message type TMessage.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Unregister``1(System.Object,System.Object,System.Action{``0})">
            <summary>
            Unregisters a message recipient for a given type of messages, for
            a given action and a given token. Other message types will still be transmitted to the
            recipient (if it registered for them previously). Other actions that have
            been registered for the message type TMessage, for the given recipient and other tokens (if
            available) will also remain available.
            </summary>
            <typeparam name="TMessage">The type of messages that the recipient wants
            to unregister from.</typeparam>
            <param name="recipient">The recipient that must be unregistered.</param>
            <param name="token">The token for which the recipient must be unregistered.</param>
            <param name="action">The action that must be unregistered for
            the recipient and for the message type TMessage.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.OverrideDefault(NetumScan.Core.MvvmLight.Messaging.IMessenger)">
            <summary>
            Provides a way to override the Messenger.Default instance with
            a custom instance, for example for unit testing purposes.
            </summary>
            <param name="newMessenger">The instance that will be used as Messenger.Default.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Reset">
            <summary>
            Sets the Messenger's default (static) instance to null.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.ResetAll">
            <summary>
            Provides a non-static access to the static <see cref="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Reset"/> method.
            Sets the Messenger's default (static) instance to null.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.RequestCleanup">
            <summary>
            Notifies the Messenger that the lists of recipients should
            be scanned and cleaned up.
            Since recipients are stored as <see cref="T:System.WeakReference"/>, 
            recipients can be garbage collected even though the Messenger keeps 
            them in a list. During the cleanup operation, all "dead"
            recipients are removed from the lists. Since this operation
            can take a moment, it is only executed when the application is
            idle. For this reason, a user of the Messenger class should use
            <see cref="M:NetumScan.Core.MvvmLight.Messaging.Messenger.RequestCleanup"/> instead of forcing one with the 
            <see cref="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Cleanup" /> method.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Cleanup">
            <summary>
            Scans the recipients' lists for "dead" instances and removes them.
            Since recipients are stored as <see cref="T:System.WeakReference"/>, 
            recipients can be garbage collected even though the Messenger keeps 
            them in a list. During the cleanup operation, all "dead"
            recipients are removed from the lists. Since this operation
            can take a moment, it is only executed when the application is
            idle. For this reason, a user of the Messenger class should use
            <see cref="M:NetumScan.Core.MvvmLight.Messaging.Messenger.RequestCleanup"/> instead of forcing one with the 
            <see cref="M:NetumScan.Core.MvvmLight.Messaging.Messenger.Cleanup" /> method.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessage">
            <summary>
            Passes a string message (Notification) to a recipient.
            <para>Typically, notifications are defined as unique strings in a static class. To define
            a unique string, you can use Guid.NewGuid().ToString() or any other unique
            identifier.</para>
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NotificationMessage class.
            </summary>
            <param name="notification">A string containing any arbitrary message to be
            passed to recipient(s)</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessage.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the NotificationMessage class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="notification">A string containing any arbitrary message to be
            passed to recipient(s)</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessage.#ctor(System.Object,System.Object,System.String)">
            <summary>
            Initializes a new instance of the NotificationMessage class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="notification">A string containing any arbitrary message to be
            passed to recipient(s)</param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.NotificationMessage.Notification">
            <summary>
            Gets a string containing any arbitrary message to be
            passed to recipient(s).
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction">
            <summary>
            Provides a message class with a built-in callback. When the recipient
            is done processing the message, it can execute the callback to
            notify the sender that it is done. Use the <see cref="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction.Execute" />
            method to execute the callback.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction.#ctor(System.String,System.Action)">
            <summary>
            Initializes a new instance of the
            <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction" /> class.
            </summary>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction.#ctor(System.Object,System.String,System.Action)">
            <summary>
            Initializes a new instance of the
            <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction.#ctor(System.Object,System.Object,System.String,System.Action)">
            <summary>
            Initializes a new instance of the
            <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction.Execute">
            <summary>
            Executes the callback that was provided with the message.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1">
            <summary>
            Provides a message class with a built-in callback. When the recipient
            is done processing the message, it can execute the callback to
            notify the sender that it is done. Use the <see cref="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1.Execute(`0)" />
            method to execute the callback. The callback method has one parameter.
            <seealso cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction"/>.
            </summary>
            <typeparam name="TCallbackParameter">The type of the callback method's
            only parameter.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1.#ctor(System.String,System.Action{`0})">
            <summary>
            Initializes a new instance of the
            <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1" /> class.
            </summary>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1.#ctor(System.Object,System.String,System.Action{`0})">
            <summary>
            Initializes a new instance of the
            <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1.#ctor(System.Object,System.Object,System.String,System.Action{`0})">
            <summary>
            Initializes a new instance of the
            <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1.Execute(`0)">
            <summary>
            Executes the callback that was provided with the message.
            </summary>
            <param name="parameter">A parameter requested by the message's
            sender and providing additional information on the recipient's
            state.</param>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessage`1">
            <summary>
            Passes a string message (Notification) and a generic value (Content) to a recipient.
            </summary>
            <typeparam name="T">The type of the Content property.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessage`1.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the NotificationMessage class.
            </summary>
            <param name="content">A value to be passed to recipient(s).</param>
            <param name="notification">A string containing any arbitrary message to be
            passed to recipient(s)</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessage`1.#ctor(System.Object,`0,System.String)">
            <summary>
            Initializes a new instance of the NotificationMessage class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="content">A value to be passed to recipient(s).</param>
            <param name="notification">A string containing any arbitrary message to be
            passed to recipient(s)</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessage`1.#ctor(System.Object,System.Object,`0,System.String)">
            <summary>
            Initializes a new instance of the NotificationMessage class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="content">A value to be passed to recipient(s).</param>
            <param name="notification">A string containing any arbitrary message to be
            passed to recipient(s)</param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.NotificationMessage`1.Notification">
            <summary>
            Gets a string containing any arbitrary message to be
            passed to recipient(s).
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback">
            <summary>
            Provides a message class with a built-in callback. When the recipient
            is done processing the message, it can execute the callback to
            notify the sender that it is done. Use the <see cref="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback.Execute(System.Object[])" />
            method to execute the callback. The callback method has one parameter.
            <seealso cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction"/> and
            <seealso cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageAction`1"/>.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback.#ctor(System.String,System.Delegate)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback" /> class.
            </summary>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback.#ctor(System.Object,System.String,System.Delegate)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback.#ctor(System.Object,System.Object,System.String,System.Delegate)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="notification">An arbitrary string that will be
            carried by the message.</param>
            <param name="callback">The callback method that can be executed
            by the recipient to notify the sender that the message has been
            processed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.NotificationMessageWithCallback.Execute(System.Object[])">
            <summary>
            Executes the callback that was provided with the message with an
            arbitrary number of parameters.
            </summary>
            <param name="arguments">A  number of parameters that will
            be passed to the callback method.</param>
            <returns>The object returned by the callback method.</returns>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1">
            <summary>
            Passes a string property name (PropertyName) and a generic value
            (<see cref="P:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1.OldValue" /> and <see cref="P:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1.NewValue" />) to a recipient.
            This message type can be used to propagate a PropertyChanged event to
            a recipient using the messenging system.
            </summary>
            <typeparam name="T">The type of the OldValue and NewValue property.</typeparam>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1.#ctor(System.Object,`0,`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="oldValue">The property's value before the change occurred.</param>
            <param name="newValue">The property's value after the change occurred.</param>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1.#ctor(`0,`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1" /> class.
            </summary>
            <param name="oldValue">The property's value before the change occurred.</param>
            <param name="newValue">The property's value after the change occurred.</param>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1.#ctor(System.Object,System.Object,`0,`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="oldValue">The property's value before the change occurred.</param>
            <param name="newValue">The property's value after the change occurred.</param>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1.NewValue">
            <summary>
            Gets the value that the property has after the change.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1.OldValue">
            <summary>
            Gets the value that the property had before the change.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase">
            <summary>
            Basis class for the <see cref="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessage`1" /> class. This
            class allows a recipient to register for all PropertyChangedMessages without
            having to specify the type T.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase.#ctor(System.Object,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase" /> class.
            </summary>
            <param name="sender">The message's sender.</param>
            <param name="target">The message's intended target. This parameter can be used
            to give an indication as to whom the message was intended for. Of course
            this is only an indication, amd may be null.</param>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase" /> class.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Messaging.PropertyChangedMessageBase.PropertyName">
            <summary>
            Gets or sets the name of the property that changed.
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.ObservableObject">
            <summary>
            A base class for objects of which the properties must be observable.
            </summary>
        </member>
        <member name="E:NetumScan.Core.MvvmLight.ObservableObject.PropertyChanged">
            <summary>
            Occurs after a property value changes.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.ObservableObject.PropertyChangedHandler">
            <summary>
            Provides access to the PropertyChanged event handler to derived classes.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ObservableObject.VerifyPropertyName(System.String)">
            <summary>
            Verifies that a property name exists in this ViewModel. This method
            can be called before the property is used, for instance before
            calling RaisePropertyChanged. It avoids errors when a property name
            is changed but some places are missed.
            </summary>
            <remarks>This method is only active in DEBUG mode.</remarks>
            <param name="propertyName">The name of the property that will be
            checked.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ObservableObject.RaisePropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event if needed.
            </summary>
            <remarks>If the propertyName parameter
            does not correspond to an existing property on the current class, an
            exception is thrown in DEBUG configuration only.</remarks>
            <param name="propertyName">(optional) The name of the property that
            changed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ObservableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the PropertyChanged event if needed.
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="propertyExpression">An expression identifying the property
            that changed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ObservableObject.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Extracts the name of a property from an expression.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="propertyExpression">An expression returning the property's name.</param>
            <returns>The name of the property returned by the expression.</returns>
            <exception cref="T:System.ArgumentNullException">If the expression is null.</exception>
            <exception cref="T:System.ArgumentException">If the expression does not represent a property.</exception>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0@,``0)">
            <summary>
            Assigns a new value to the property. Then, raises the
            PropertyChanged event if needed. 
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="propertyExpression">An expression identifying the property
            that changed.</param>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <returns>True if the PropertyChanged event has been raised,
            false otherwise. The event is not raised if the old
            value is equal to the new value.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ObservableObject.Set``1(System.String,``0@,``0)">
            <summary>
            Assigns a new value to the property. Then, raises the
            PropertyChanged event if needed. 
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="propertyName">The name of the property that
            changed.</param>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <returns>True if the PropertyChanged event has been raised,
            false otherwise. The event is not raised if the old
            value is equal to the new value.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ObservableObject.Set``1(``0@,``0,System.String)">
            <summary>
            Assigns a new value to the property. Then, raises the
            PropertyChanged event if needed. 
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <param name="propertyName">(optional) The name of the property that
            changed.</param>
            <returns>True if the PropertyChanged event has been raised,
            false otherwise. The event is not raised if the old
            value is equal to the new value.</returns>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Threading.DispatcherHelper">
            <summary>
            Helper class for dispatcher operations on the UI thread.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.UIDispatcher">
            <summary>
            Gets a reference to the UI thread's dispatcher, after the
            <see cref="M:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.Initialize" /> method has been called on the UI thread.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.CheckBeginInvokeOnUI(System.Action)">
            <summary>
            Executes an action on the UI thread. If this method is called
            from the UI thread, the action is executed immendiately. If the
            method is called from another thread, the action will be enqueued
            on the UI thread's dispatcher and executed asynchronously.
            <para>For additional operations on the UI thread, you can get a
            reference to the UI thread's dispatcher thanks to the property
            <see cref="P:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.UIDispatcher" /></para>.
            </summary>
            <param name="action">The action that will be executed on the UI
            thread.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.RunAsync(System.Action)">
            <summary>
            Invokes an action asynchronously on the UI thread.
            </summary>
            <param name="action">The action that must be executed.</param>
            <returns>An object, which is returned immediately after BeginInvoke is called, that can be used to interact
             with the delegate as it is pending execution in the event queue.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.Initialize">
            <summary>
            This method should be called once on the UI thread to ensure that
            the <see cref="P:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.UIDispatcher" /> property is initialized.
            <para>In a Silverlight application, call this method in the
            Application_Startup event handler, after the MainPage is constructed.</para>
            <para>In WPF, call this method on the static App() constructor.</para>
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.Reset">
            <summary>
            Resets the class by deleting the <see cref="P:NetumScan.Core.MvvmLight.Threading.DispatcherHelper.UIDispatcher"/>
            </summary>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.ViewModelBase">
            <summary>
            A base class for the ViewModel classes in the MVVM pattern.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.#ctor">
            <summary>
            Initializes a new instance of the ViewModelBase class.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.#ctor(NetumScan.Core.MvvmLight.Messaging.IMessenger)">
            <summary>
            Initializes a new instance of the ViewModelBase class.
            </summary>
            <param name="messenger">An instance of a <see cref="T:NetumScan.Core.MvvmLight.Messaging.Messenger" />
            used to broadcast messages to other objects. If null, this class
            will attempt to broadcast using the Messenger's default
            instance.</param>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.ViewModelBase.IsInDesignMode">
            <summary>
            Gets a value indicating whether the control is in design mode
            (running under Blend or Visual Studio).
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.ViewModelBase.IsInDesignModeStatic">
            <summary>
            Gets a value indicating whether the control is in design mode
            (running in Blend or Visual Studio).
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.ViewModelBase.MessengerInstance">
            <summary>
            Gets or sets an instance of a <see cref="T:NetumScan.Core.MvvmLight.Messaging.IMessenger" /> used to
            broadcast messages to other objects. If null, this class will
            attempt to broadcast using the Messenger's default instance.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.Cleanup">
            <summary>
            Unregisters this instance from the Messenger class.
            <para>To cleanup additional resources, override this method, clean
            up and then call base.Cleanup().</para>
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.Broadcast``1(``0,``0,System.String)">
            <summary>
            Broadcasts a PropertyChangedMessage using either the instance of
            the Messenger that was passed to this class (if available) 
            or the Messenger's default instance.
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="oldValue">The value of the property before it
            changed.</param>
            <param name="newValue">The value of the property after it
            changed.</param>
            <param name="propertyName">The name of the property that
            changed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.RaisePropertyChanged``1(System.String,``0,``0,System.Boolean)">
            <summary>
            Raises the PropertyChanged event if needed, and broadcasts a
            PropertyChangedMessage using the Messenger instance (or the
            static default instance if no Messenger instance is available).
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="propertyName">The name of the property that
            changed.</param>
            <param name="oldValue">The property's value before the change
            occurred.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <param name="broadcast">If true, a PropertyChangedMessage will
            be broadcasted. If false, only the event will be raised.</param>
            <remarks>If the propertyName parameter
            does not correspond to an existing property on the current class, an
            exception is thrown in DEBUG configuration only.</remarks>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}},``0,``0,System.Boolean)">
            <summary>
            Raises the PropertyChanged event if needed, and broadcasts a
            PropertyChangedMessage using the Messenger instance (or the
            static default instance if no Messenger instance is available).
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="propertyExpression">An expression identifying the property
            that changed.</param>
            <param name="oldValue">The property's value before the change
            occurred.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <param name="broadcast">If true, a PropertyChangedMessage will
            be broadcasted. If false, only the event will be raised.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0@,``0,System.Boolean)">
            <summary>
            Assigns a new value to the property. Then, raises the
            PropertyChanged event if needed, and broadcasts a
            PropertyChangedMessage using the Messenger instance (or the
            static default instance if no Messenger instance is available). 
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="propertyExpression">An expression identifying the property
            that changed.</param>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <param name="broadcast">If true, a PropertyChangedMessage will
            be broadcasted. If false, only the event will be raised.</param>
            <returns>True if the PropertyChanged event was raised, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.Set``1(System.String,``0@,``0,System.Boolean)">
            <summary>
            Assigns a new value to the property. Then, raises the
            PropertyChanged event if needed, and broadcasts a
            PropertyChangedMessage using the Messenger instance (or the
            static default instance if no Messenger instance is available). 
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="propertyName">The name of the property that
            changed.</param>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <param name="broadcast">If true, a PropertyChangedMessage will
            be broadcasted. If false, only the event will be raised.</param>
            <returns>True if the PropertyChanged event was raised, false otherwise.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.ViewModelBase.Set``1(``0@,``0,System.Boolean,System.String)">
            <summary>
            Assigns a new value to the property. Then, raises the
            PropertyChanged event if needed, and broadcasts a
            PropertyChangedMessage using the Messenger instance (or the
            static default instance if no Messenger instance is available). 
            </summary>
            <typeparam name="T">The type of the property that
            changed.</typeparam>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change
            occurred.</param>
            <param name="broadcast">If true, a PropertyChangedMessage will
            be broadcasted. If false, only the event will be raised.</param>
            <param name="propertyName">(optional) The name of the property that
            changed.</param>
            <returns>True if the PropertyChanged event was raised, false otherwise.</returns>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Views.IDialogService">
            <summary>
            An interface defining how dialogs should
            be displayed in various frameworks such as Windows, 
            Windows Phone, Android, iOS etc.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.IDialogService.ShowError(System.String,System.String,System.String,System.Action)">
            <summary>
            Displays information about an error.
            </summary>
            <param name="message">The message to be shown to the user.</param>
            <param name="title">The title of the dialog box. This may be null.</param>
            <param name="buttonText">The text shown in the only button
            in the dialog box. If left null, the text "OK" will be used.</param>
            <param name="afterHideCallback">A callback that should be executed after
            the dialog box is closed by the user.</param>
            <returns>A Task allowing this async method to be awaited.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.IDialogService.ShowError(System.Exception,System.String,System.String,System.Action)">
            <summary>
            Displays information about an error.
            </summary>
            <param name="error">The exception of which the message must be shown to the user.</param>
            <param name="title">The title of the dialog box. This may be null.</param>
            <param name="buttonText">The text shown in the only button
            in the dialog box. If left null, the text "OK" will be used.</param>
            <param name="afterHideCallback">A callback that should be executed after
            the dialog box is closed by the user.</param>
            <returns>A Task allowing this async method to be awaited.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.IDialogService.ShowMessage(System.String,System.String)">
            <summary>
            Displays information to the user. The dialog box will have only
            one button with the text "OK".
            </summary>
            <param name="message">The message to be shown to the user.</param>
            <param name="title">The title of the dialog box. This may be null.</param>
            <returns>A Task allowing this async method to be awaited.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.IDialogService.ShowMessage(System.String,System.String,System.String,System.Action)">
            <summary>
            Displays information to the user. The dialog box will have only
            one button.
            </summary>
            <param name="message">The message to be shown to the user.</param>
            <param name="title">The title of the dialog box. This may be null.</param>
            <param name="buttonText">The text shown in the only button
            in the dialog box. If left null, the text "OK" will be used.</param>
            <param name="afterHideCallback">A callback that should be executed after
            the dialog box is closed by the user.</param>
            <returns>A Task allowing this async method to be awaited.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.IDialogService.ShowMessage(System.String,System.String,System.String,System.String,System.Action{System.Boolean})">
            <summary>
            Displays information to the user. The dialog box will have only
            one button.
            </summary>
            <param name="message">The message to be shown to the user.</param>
            <param name="title">The title of the dialog box. This may be null.</param>
            <param name="buttonConfirmText">The text shown in the "confirm" button
            in the dialog box. If left null, the text "OK" will be used.</param>
            <param name="buttonCancelText">The text shown in the "cancel" button
            in the dialog box. If left null, the text "Cancel" will be used.</param>
            <param name="afterHideCallback">A callback that should be executed after
            the dialog box is closed by the user. The callback method will get a boolean
            parameter indicating if the "confirm" button (true) or the "cancel" button
            (false) was pressed by the user.</param>
            <returns>A Task allowing this async method to be awaited. The task will return
            true or false depending on the dialog result.</returns>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.IDialogService.ShowMessageBox(System.String,System.String)">
            <summary>
            Displays information to the user in a simple dialog box. The dialog box will have only
            one button with the text "OK". This method should be used for debugging purposes.
            </summary>
            <param name="message">The message to be shown to the user.</param>
            <param name="title">The title of the dialog box. This may be null.</param>
            <returns>A Task allowing this async method to be awaited.</returns>
        </member>
        <member name="T:NetumScan.Core.MvvmLight.Views.INavigationService">
            <summary>
            An interface defining how navigation between pages should
            be performed in various frameworks such as Windows, 
            Windows Phone, Android, iOS etc.
            </summary>
        </member>
        <member name="P:NetumScan.Core.MvvmLight.Views.INavigationService.CurrentPageKey">
            <summary>
            The key corresponding to the currently displayed page.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.INavigationService.GoBack">
            <summary>
            If possible, instructs the navigation service
            to discard the current page and display the previous page
            on the navigation stack.
            </summary>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.INavigationService.NavigateTo(System.String)">
            <summary>
            Instructs the navigation service to display a new page
            corresponding to the given key. Depending on the platforms,
            the navigation service might have to be configured with a
            key/page list.
            </summary>
            <param name="pageKey">The key corresponding to the page
            that should be displayed.</param>
        </member>
        <member name="M:NetumScan.Core.MvvmLight.Views.INavigationService.NavigateTo(System.String,System.Object)">
            <summary>
            Instructs the navigation service to display a new page
            corresponding to the given key, and passes a parameter
            to the new page.
            Depending on the platforms, the navigation service might 
            have to be Configure with a key/page list.
            </summary>
            <param name="pageKey">The key corresponding to the page
            that should be displayed.</param>
            <param name="parameter">The parameter that should be passed
            to the new page.</param>
        </member>
        <member name="T:NetumScan.Core.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ActionsCodeMenuEntry_FilePath_File_path">
            <summary>
              查找类似 文件路径 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ActionsCodeMenuEntry_OutputFilePath_File_path_without_extension____Output_file_name_extension_">
            <summary>
              查找类似 无扩展名的路径 + &quot;输出文件的扩展名&quot; 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.adjectives">
             <summary>
               查找类似 abandoned
            able
            absolute
            academic
            acceptable
            acclaimed
            accomplished
            accurate
            aching
            acidic
            acrobatic
            adorable
            adventurous
            babyish
            back
            bad
            baggy
            bare
            barren
            basic
            beautiful
            belated
            beloved
            calculating
            calm
            candid
            canine
            capital
            carefree
            careful
            careless
            caring
            cautious
            cavernous
            celebrated
            charming
            damaged
            damp
            dangerous
            dapper
            daring
            dark
            darling
            dazzling
            dead
            deadly
            deafening
            dear
            dearest
            each
            eager
            early
            earnest
            easy
            easygoing
            ecstatic
            edible
            educated
            fabulous
            failing
            faint
            fair
            faithful
            fake
            familiar
            fam [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.animals">
             <summary>
               查找类似 aardvark
            aardwolf
            abalone
            abyssiniancat
            abyssiniangroundhornbill
            acaciarat
            achillestang
            acornbarnacle
            acornweevil
            acornwoodpecker
            acouchi
            adamsstaghornedbeetle
            addax
            adder
            adeliepenguin
            admiralbutterfly
            adouri
            aegeancat
            affenpinscher
            afghanhound
            africanaugurbuzzard
            africanbushviper
            africancivet
            africanclawedfrog
            africanelephant
            africanfisheagle
            africangoldencat
            africangroundhornbill
            africanharrierhawk
            africanhornbill
            africanjacana
            africanmolesnake
            africanparadiseflycatcher
            africanpiedkingfisher
            africanporcu [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.au">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.br">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.clipboard_block">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.CMYK_ToString_Cyan___0_0_0____Magenta___1_0_0____Yellow___2_0_0____Key___3_0_0__">
            <summary>
              查找类似 青色: {0:0.0}%，品红: {1:0.0}%，黄色: {2:0.0}%, 键: {3:0.0}% 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.cn">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.CodeMenu_Create_Close">
            <summary>
              查找类似 关闭 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.CodeMenuEntryFilename_RandomAdjective">
            <summary>
              查找类似 随机形容词 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.CodeMenuEntryFilename_RandomAnimal">
            <summary>
              查找类似 随机动物 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.cross">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.crosshair">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.CssFileNameEditor_EditValue_Browse_for_a_Cascading_Style_Sheet___">
            <summary>
              查找类似 浏览 CSS... 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.de">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DirectoryNameEditor_EditValue_Browse_for_a_folder___">
            <summary>
              查找类似 浏览文件夹... 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DNSChangerForm_btnSave_Click_DNS_successfully_set_">
            <summary>
              查找类似 DNS 设置成功。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DNSChangerForm_btnSave_Click_DNS_successfully_set__Reboot_is_required_">
            <summary>
              查找类似 DNS设置成功，需要重新启动。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DNSChangerForm_btnSave_Click_Setting_DNS_failed_">
            <summary>
              查找类似 DNS设置失败。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DNSChangerForm_btnSave_Click_Setting_DNS_failed_with_error_code_">
            <summary>
              查找类似 DNS设置失败，错误代码： 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DNSChangerForm_DNSChangerForm_Manual">
            <summary>
              查找类似 手动 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_ChangeProgress_Progress">
             <summary>
               查找类似 进度：{0:0.0}%
            下载速度：{1:0.0} KB/s
            文件大小：{2:n0} / {3:n0} KB 的本地化字符串。
             </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_ChangeStatus_Status___0_">
            <summary>
              查找类似 状态: {0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_DownloaderForm_Filename___0_">
            <summary>
              查找类似 文件名: {0} 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_DownloaderForm_Waiting_">
            <summary>
              查找类似 等待中。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_fileDownloader_DownloadCompleted_Download_completed_">
            <summary>
              查找类似 下载完成。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_fileDownloader_DownloadCompleted_Install">
            <summary>
              查找类似 安装 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_StartDownload_Cancel">
            <summary>
              查找类似 取消 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_StartDownload_Downloading_">
            <summary>
              查找类似 正在下载。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.DownloaderForm_StartDownload_Getting_file_size_">
            <summary>
              查找类似 正在文件大小。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Error">
            <summary>
              查找类似 错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.es">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ExeFileNameEditor_EditValue_Browse_for_executable___">
            <summary>
              查找类似 浏览可执行文件... 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ExportImportControl_Deserialize_Import_failed_">
            <summary>
              查找类似 导入失败。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ExportImportControl_Serialize_Export_failed_">
            <summary>
              查找类似 导出失败。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ExportImportControl_tsmiExportClipboard_Click_Settings_copied_to_your_clipboard_">
            <summary>
              查找类似 设置已复制到剪贴板。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ExportImportControl_tsmiImportURL_Click_URL_to_download_settings_from">
            <summary>
              查找类似 设置下载的URL 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Extensions_AddContextMenu_Copy">
            <summary>
              查找类似 复制 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Extensions_AddContextMenu_Cut">
            <summary>
              查找类似 剪切 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Extensions_AddContextMenu_Delete">
            <summary>
              查找类似 删除 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Extensions_AddContextMenu_Paste">
            <summary>
              查找类似 粘贴 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Extensions_AddContextMenu_Redo">
            <summary>
              查找类似 重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Extensions_AddContextMenu_SelectAll">
            <summary>
              查找类似 全选 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Extensions_AddContextMenu_Undo">
            <summary>
              查找类似 撤销 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.FolderSelectDialog_Title_Select_a_folder">
            <summary>
              查找类似 选择一个文件夹 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.fr">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.globe">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Helpers_BrowseFile_Choose_file">
            <summary>
              查找类似 选择文件 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Helpers_BrowseFolder_Choose_folder">
            <summary>
              查找类似 选择文件夹 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Helpers_CreateDirectoryIfNotExist_Create_failed_">
            <summary>
              查找类似 未能创建目录。 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Helpers_DownloadString_Download_failed_">
            <summary>
              查找类似 下载失败: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Helpers_OpenFile_File_not_exist_">
            <summary>
              查找类似 文件不存在: 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Helpers_OpenFolder_Folder_not_exist_">
            <summary>
              查找类似 文件夹不存在： 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.HSB_ToString_">
            <summary>
              查找类似 色调: {0:0.0}度，饱和度: {1:0.0}%，亮度: {2:0.0}% 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.hu">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Icon">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Icon_White">
            <summary>
              查找类似于 (图标) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.id">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ir">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.it">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.jp">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.kr">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Loading">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.LoadingSmallBlack">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.LoadingSmallWhite">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Logo">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.mx">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.MyMessageBox_MyMessageBox_Cancel">
            <summary>
              查找类似 取消 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.MyMessageBox_MyMessageBox_No">
            <summary>
              查找类似 否 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.MyMessageBox_MyMessageBox_OK">
            <summary>
              查找类似 确定 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.MyMessageBox_MyMessageBox_Yes">
            <summary>
              查找类似 是 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.MyPictureBox_LoadImageAsync_Loading_image___">
            <summary>
              查找类似 图片加载中... 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.MyPictureBox_pbMain_LoadProgressChanged_Loading_image___0__">
            <summary>
              查找类似 加载图像：{0}% 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.nl">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ObjectListView_ObjectListView_Copy_name">
            <summary>
              查找类似 复制名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ObjectListView_ObjectListView_Copy_value">
            <summary>
              查找类似 复制值 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ObjectListView_ObjectListView_Name">
            <summary>
              查找类似 名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ObjectListView_ObjectListView_Value">
            <summary>
              查找类似 值 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.pipette">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.PrintForm_LoadSettings_Print">
            <summary>
              查找类似 打印 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.PrintTextForm_LoadSettings_Name___0___Size___1_">
            <summary>
              查找类似 名称: {0}，大小: {1} 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.pt">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.RandomEmojiRepeatUsingN">
            <summary>
              查找类似 随机 emoji 表情。用 {n} 标识重复次数 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.RandomNonAmbiguousAlphanumericCharRepeatUsingN">
            <summary>
              查找类似 随机的非易混淆字母与数字字符。使用 {n} 表示重复次数 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuCategory_Computer">
            <summary>
              查找类似 计算机 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuCategory_Date_and_Time">
            <summary>
              查找类似 日期时间 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuCategory_Image">
            <summary>
              查找类似 图像 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuCategory_Incremental">
            <summary>
              查找类似 增量 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuCategory_Random">
            <summary>
              查找类似 随机 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuCategory_Window">
            <summary>
              查找类似 Window 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_cn_Computer_name">
            <summary>
              查找类似 计算机名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_d_Current_day">
            <summary>
              查找类似 当前日 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_guid_Random_guid">
            <summary>
              查找类似 随机 GUID 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_h_Current_hour">
            <summary>
              查找类似 当前小时 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_height_Gets_image_height">
            <summary>
              查找类似 图像高度 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_i_Auto_increment_number">
            <summary>
              查找类似 自动递增数，使用 {n} 补零 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_ia_Auto_increment_alphanumeric">
            <summary>
              查找类似 自动递增的字母数字不区分大小写。0 pad left using {n} 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_iAa_Auto_increment_alphanumeric_all">
            <summary>
              查找类似 自动递增的大小写敏感字母与数字 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_ib_Auto_increment_base_alphanumeric">
            <summary>
              查找类似 由 {n} 为基础制动递增的字母数字 (1 &lt; n &lt; 63) 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_ix_Auto_increment_hexadecimal">
            <summary>
              查找类似 自动递增的十六进制 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_mi_Current_minute">
            <summary>
              查找类似 当前分 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_mo_Current_month">
            <summary>
              查找类似 当前月 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_mon_Current_month_name__Local_language_">
            <summary>
              查找类似 当月名称（本地语言） 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_mon2_Current_month_name__English_">
            <summary>
              查找类似 当月名称（英语） 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_ms_Current_millisecond">
            <summary>
              查找类似 当前毫秒 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_n_New_line">
            <summary>
              查找类似 新线条 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_pm_Gets_AM_PM">
            <summary>
              查找类似 获取 AM/PM 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_pn_Process_name_of_active_window">
            <summary>
              查找类似 活动窗口的进程名 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_ra_Random_alphanumeric_char">
            <summary>
              查找类似 随机字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_rf_Random_line_from_file">
            <summary>
              查找类似 从文件产生随机线条，使用 {filepath} 选取文件 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_rn_Random_number_0_to_9">
            <summary>
              查找类似 随机数 0 至 9 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_rx_Random_hexadecimal">
            <summary>
              查找类似 随机的十六进制字符。重复使用 {n} 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_s_Current_second">
            <summary>
              查找类似 当前秒 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_t_Title_of_active_window">
            <summary>
              查找类似 活动窗口标题 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_uln_User_login_name">
            <summary>
              查找类似 用户登录名 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_un_User_name">
            <summary>
              查找类似 用户名 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_unix_Unix_timestamp">
            <summary>
              查找类似 Unix 时间戳 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_w_Current_week_name__Local_language_">
            <summary>
              查找类似 当前周（本地语言） 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_w2_Current_week_name__English_">
            <summary>
              查找类似 当前周（英语） 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_width_Gets_image_width">
            <summary>
              查找类似 图像宽度 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_wy_Week_of_year">
            <summary>
              查找类似 周数 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_y_Current_year">
            <summary>
              查找类似 当前年 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ReplCodeMenuEntry_yy_Current_year__2_digits_">
            <summary>
              查找类似 当前年（2 位数字） 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ResponseType_Headers">
            <summary>
              查找类似 响应头 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ResponseType_LocationHeader">
            <summary>
              查找类似 位置头 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ResponseType_RedirectionURL">
            <summary>
              查找类似 重定向 URL 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ResponseType_Text">
            <summary>
              查找类似 响应文本 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Result">
            <summary>
              查找类似 结果： 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ResultOfFirstFile">
            <summary>
              查找类似 第一个文件的结果： 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ResultOfSecondFile">
            <summary>
              查找类似 第二个文件的结果： 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ru">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Start">
            <summary>
              查找类似 开始 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Stop">
            <summary>
              查找类似 停止 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.SupportedLanguage_Automatic">
            <summary>
              查找类似 自动 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.Target">
            <summary>
              查找类似 目标： 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.tick">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.tr">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.tw">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.ua">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateCheckerLabel_UpdateControls_A_newer_version_of_Handy_is_available">
            <summary>
              查找类似 新版本 {0} 可用 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateCheckerLabel_UpdateControls_Handy_is_up_to_date">
            <summary>
              查找类似 {0} 是最新 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateCheckerLabel_UpdateControls_Update_check_failed">
            <summary>
              查找类似 检查更新失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateMessageBox_UpdateMessageBox_">
             <summary>
               查找类似 有一个新版本 {0} 可用.
            你要下载安装吗? 的本地化字符串。
             </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateMessageBox_UpdateMessageBox_CurrentVersion">
            <summary>
              查找类似 当前版本 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateMessageBox_UpdateMessageBox_LatestVersion">
            <summary>
              查找类似 最新版本 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateMessageBox_UpdateMessageBox_Portable">
             <summary>
               查找类似 有一个新版本 {0} 可用.
            你要下载安装吗? 的本地化字符串。
             </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.UpdateMessageBox_UpdateMessageBox_update_is_available">
            <summary>
              查找类似 更新可用 的本地化字符串。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.us">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.vn">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:NetumScan.Core.Properties.Resources.WavFileNameEditor_EditValue_Browse_for_a_sound_file___">
            <summary>
              查找类似 浏览音频文件... 的本地化字符串。
            </summary>
        </member>
        <member name="M:NetumScan.Hidlibrary.HidDevice.ReadReportSync(System.Byte)">
            <summary>
            Reads an input report from the Control channel.  This method provides access to report data for devices that 
            do not use the interrupt channel to communicate for specific usages.
            </summary>
            <param name="reportId">The report ID to read from the device</param>
            <returns>The HID report that is read.  The report will contain the success status of the read request</returns>
            
        </member>
        <member name="M:NetumScan.Hidlibrary.HidDevice.WriteReportSync(NetumScan.Hidlibrary.HidReport)">
            <summary>
            Handle data transfers on the control channel.  This method places data on the control channel for devices
            that do not support the interupt transfers
            </summary>
            <param name="report">The outbound HID report</param>
            <returns>The result of the tranfer request: true if successful otherwise false</returns>
            
        </member>
        <member name="M:NetumScan.Hidlibrary.NativeMethods.SonixCam_Init(System.IntPtr)">
            <summary>
            库初始化
            </summary>
            <param name="intPtr">vidpid</param>
            <remarks>
            在调用库的接口函数之前,需要首先调用SonixCam_Init函数,只有该函数返回成功后,才可以调用其它接口函数
            </remarks>
            <returns></returns>
        </member>
        <member name="M:NetumScan.Hidlibrary.NativeMethods.SonixCam_UnInit">
            <summary>
            库释放初始化
            </summary>
        </member>
        <member name="M:NetumScan.Hidlibrary.NativeMethods.SonixCam_AsicRegisterRead(System.UInt16,System.Byte[],System.Int32)">
            <summary>
            读取寄存器数据
            </summary>
        </member>
        <member name="M:NetumScan.Hidlibrary.NativeMethods.SonixCam_GetFwVersion(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            获得FW Code版本号
            </summary>
        </member>
        <member name="M:NetumScan.Hidlibrary.NativeMethods.SonixCam_GetVidPid(System.Byte[],System.Int32)">
            <summary>
            获得设备vidpid
            </summary>
        </member>
        <member name="T:SmartNet.RegexHelper">
            <summary>
            操作正则表达式的公共类
            </summary>    
        </member>
        <member name="M:SmartNet.RegexHelper.IsMatch(System.String,System.String)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>        
        </member>
        <member name="M:SmartNet.RegexHelper.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件</param>
        </member>
        <member name="M:SmartNet.RegexHelper.IsEmail(System.String)">
            <summary>
            验证邮箱
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.HasEmail(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsUrl(System.String)">
            <summary>
            验证网址
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.HasUrl(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsDateTime(System.String)">
            <summary>
            验证日期
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsMobile(System.String)">
            <summary>
            验证手机号
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.HasMobile(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsIP(System.String)">
            <summary>
            验证IP
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.HasIP(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsIp(System.String)">
            <summary>
            
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsIDCard(System.String)">
            <summary>
            验证身份证是否有效
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsIDCard18(System.String)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsIDCard15(System.String)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsInt(System.String)">
            <summary>
            是不是Int型的
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsLengthStr(System.String,System.Int32,System.Int32)">
            <summary>
            看字符串的长度是不是在限定数之间 一个中文为两个字符
            </summary>
            <param name="source">字符串</param>
            <param name="begin">大于等于</param>
            <param name="end">小于等于</param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsTel(System.String)">
            <summary>
            是不是中国电话，格式010-85849685
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsPostCode(System.String)">
            <summary>
            邮政编码 6个数字
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsChinese(System.String)">
            <summary>
            中文
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.hasChinese(System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsNormalChar(System.String)">
            <summary>
            验证是不是正常字符 字母，数字，下划线的组合
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.checkUserId(System.String)">
            <summary>
            验证用户名：必须以字母开头，可以包含字母、数字、“_”、“.”，至少5个字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsDate(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsNumber(System.String)">
            <summary>
            判断字符串是否为数字
            </summary>
            <param name="str">待验证的字符窜</param>
            <returns>bool</returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsDecimal(System.String)">
            <summary>
            是否为数字型
            </summary>
            <param name="strNumber"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsHanyu(System.String)">
            <summary>
            验证是否包含汉语
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SmartNet.RegexHelper.IsHanyuAll(System.String)">
            <summary>
            验证是否全部汉语
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
    </members>
</doc>
